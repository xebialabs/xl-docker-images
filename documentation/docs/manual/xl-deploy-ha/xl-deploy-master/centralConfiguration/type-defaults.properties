# # Note: If you modify this file, you must restart the XL Deploy server.

# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#cmd.Command.boundTemplates=null
# Order of the command
#cmd.Command.order=50
# Indicates whether the undoCommand should be run on an upgrade
#cmd.Command.runUndoCommandOnUpgrade=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#cmd.Command.tags=null
# Order of the undo command
#cmd.Command.undoOrder=49
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#cmd.DeployedCommand.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#cmd.DeployedCommand.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#cmd.DeployedCommand.deployable=null
# Order of the command
#cmd.DeployedCommand.order=50
# Forces the command to be rerun.
#cmd.DeployedCommand.rerunCommand=false
# Indicates whether the undoCommand should be run on an upgrade
#cmd.DeployedCommand.runUndoCommandOnUpgrade=true
# Order of the undo command
#cmd.DeployedCommand.undoOrder=49
# Proxy port.
#credentials.ProxyServer.port=80
# Proxy protocol.
#credentials.ProxyServer.protocol=HTTP
# Password (inherited from: credentials.HostCredentials.password)
#credentials.SmbHostCredentials.password=null
# Username (inherited from: credentials.HostCredentials.username)
#credentials.SmbHostCredentials.username=null
# Password (inherited from: credentials.HostCredentials.password)
#credentials.SshHostCredentials.password=null
# Username (inherited from: credentials.HostCredentials.username)
#credentials.SshHostCredentials.username=null
# Password (inherited from: credentials.gcp.GcpHostCredentials.password)
#credentials.gcp.DefaultGcpCredentials.password=null
# Username (inherited from: credentials.gcp.GcpHostCredentials.username)
#credentials.gcp.DefaultGcpCredentials.username=null
# Password (inherited from: credentials.HostCredentials.password)
#credentials.gcp.GcpHostCredentials.password=null
# Username (inherited from: credentials.HostCredentials.username)
#credentials.gcp.GcpHostCredentials.username=null
# Password (inherited from: credentials.gcp.GcpHostCredentials.password)
#credentials.gcp.ServiceAccountFileGcpCredentials.password=null
# Username (inherited from: credentials.gcp.GcpHostCredentials.username)
#credentials.gcp.ServiceAccountFileGcpCredentials.username=null
# Password (inherited from: credentials.gcp.GcpHostCredentials.password)
#credentials.gcp.ServiceAccountJsonGcpCredentials.password=null
# Username (inherited from: credentials.gcp.GcpHostCredentials.username)
#credentials.gcp.ServiceAccountJsonGcpCredentials.username=null
# Password (inherited from: credentials.gcp.GcpHostCredentials.password)
#credentials.gcp.ServiceAccountPkcs8GcpCredentials.password=null
# Username (inherited from: credentials.gcp.GcpHostCredentials.username)
#credentials.gcp.ServiceAccountPkcs8GcpCredentials.username=null
# Password (inherited from: credentials.gcp.GcpHostCredentials.password)
#credentials.gcp.ServiceAccountTokenGcpCredentials.password=null
# Username (inherited from: credentials.gcp.GcpHostCredentials.username)
#credentials.gcp.ServiceAccountTokenGcpCredentials.username=null
# The set of CI templates. (inherited from: udm.BaseDeployableArchiveArtifact.boundTemplates)
#file.Archive.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArchiveArtifact.checksum)
#file.Archive.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArchiveArtifact.credentials)
#file.Archive.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#file.Archive.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex)
#file.Archive.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#file.Archive.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArchiveArtifact.fileUri)
#file.Archive.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArchiveArtifact.isRescanned)
#file.Archive.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArchiveArtifact.placeholders)
#file.Archive.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArchiveArtifact.preScannedPlaceholders)
#file.Archive.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArchiveArtifact.proxySettings)
#file.Archive.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArchiveArtifact.scanPlaceholders)
#file.Archive.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArchiveArtifact.tags)
#file.Archive.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#file.Archive.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of created CIs. (inherited from: file.DeployedArtifactOnHost.boundConfigurationItems)
#file.DeployedArchive.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: file.DeployedArtifactOnHost.container)
#file.DeployedArchive.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedArtifactOnHost.copyDirectlyToTargetPath)
#file.DeployedArchive.copyDirectlyToTargetPath=false
# Create the targetPath on the host if it does not exist. (inherited from: file.DeployedArtifactOnHost.createTargetPath)
#file.DeployedArchive.createTargetPath=false
# The deployable that this deployed is derived from. (inherited from: file.DeployedArtifactOnHost.deployable)
#file.DeployedArchive.deployable=null
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: file.DeployedArtifactOnHost.placeholders)
#file.DeployedArchive.placeholders=null
# Name of the artifact on the host. (inherited from: file.DeployedArtifactOnHost.targetFileName)
#file.DeployedArchive.targetFileName=null
# Path to which artifact must be copied to on the host. (inherited from: file.DeployedArtifactOnHost.targetPath)
#file.DeployedArchive.targetPath=null
# Is the targetPath shared by others on the host. When true, the targetPath is not deleted during undeployment; only the artifacts copied to it. (inherited from: file.DeployedArtifactOnHost.targetPathShared)
#file.DeployedArchive.targetPathShared=true
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedArtifactOnHost.targetPathSharedSubDirectories)
#file.DeployedArchive.targetPathSharedSubDirectories=false
# The set of created CIs. (inherited from: udm.BaseDeployedArtifact.boundConfigurationItems)
#file.DeployedArtifactOnHost.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployedArtifact.container)
#file.DeployedArtifactOnHost.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0)
#file.DeployedArtifactOnHost.copyDirectlyToTargetPath=false
# Create the targetPath on the host if it does not exist.
#file.DeployedArtifactOnHost.createTargetPath=false
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployedArtifact.deployable)
#file.DeployedArtifactOnHost.deployable=null
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: udm.BaseDeployedArtifact.placeholders)
#file.DeployedArtifactOnHost.placeholders=null
# Is the targetPath shared by others on the host. When true, the targetPath is not deleted during undeployment; only the artifacts copied to it.
#file.DeployedArtifactOnHost.targetPathShared=true
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. 
#file.DeployedArtifactOnHost.targetPathSharedSubDirectories=false
# The set of created CIs. (inherited from: file.DeployedArtifactOnHost.boundConfigurationItems)
#file.DeployedFile.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: file.DeployedArtifactOnHost.container)
#file.DeployedFile.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedArtifactOnHost.copyDirectlyToTargetPath)
#file.DeployedFile.copyDirectlyToTargetPath=false
# Create the targetPath on the host if it does not exist. (inherited from: file.DeployedArtifactOnHost.createTargetPath)
#file.DeployedFile.createTargetPath=false
# The deployable that this deployed is derived from. (inherited from: file.DeployedArtifactOnHost.deployable)
#file.DeployedFile.deployable=null
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: file.DeployedArtifactOnHost.placeholders)
#file.DeployedFile.placeholders=null
# Name of the artifact on the host. (inherited from: file.DeployedArtifactOnHost.targetFileName)
#file.DeployedFile.targetFileName=null
# Path to which artifact must be copied to on the host. (inherited from: file.DeployedArtifactOnHost.targetPath)
#file.DeployedFile.targetPath=null
# Is the targetPath shared by others on the host. When true, the targetPath is not deleted during undeployment; only the artifacts copied to it. (inherited from: file.DeployedArtifactOnHost.targetPathShared)
#file.DeployedFile.targetPathShared=true
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedArtifactOnHost.targetPathSharedSubDirectories)
#file.DeployedFile.targetPathSharedSubDirectories=false
# The set of created CIs. (inherited from: file.DeployedArtifactOnHost.boundConfigurationItems)
#file.DeployedFolder.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: file.DeployedArtifactOnHost.container)
#file.DeployedFolder.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: file.DeployedArtifactOnHost.copyDirectlyToTargetPath)
#file.DeployedFolder.copyDirectlyToTargetPath=false
# Create the targetPath on the host if it does not exist. (inherited from: file.DeployedArtifactOnHost.createTargetPath)
#file.DeployedFolder.createTargetPath=false
# The deployable that this deployed is derived from. (inherited from: file.DeployedArtifactOnHost.deployable)
#file.DeployedFolder.deployable=null
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: file.DeployedArtifactOnHost.placeholders)
#file.DeployedFolder.placeholders=null
# Not applicable for this type.
#file.DeployedFolder.targetFileName=null
# Path to which artifact must be copied to on the host. (inherited from: file.DeployedArtifactOnHost.targetPath)
#file.DeployedFolder.targetPath=null
# Is the targetPath shared by others on the host. When true, the targetPath is not deleted during undeployment; only the artifacts copied to it. (inherited from: file.DeployedArtifactOnHost.targetPathShared)
#file.DeployedFolder.targetPathShared=true
# The sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present.  (inherited from: file.DeployedArtifactOnHost.targetPathSharedSubDirectories)
#file.DeployedFolder.targetPathSharedSubDirectories=false
# The set of CI templates. (inherited from: udm.BaseDeployableFileArtifact.boundTemplates)
#file.File.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFileArtifact.checksum)
#file.File.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFileArtifact.credentials)
#file.File.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#file.File.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFileArtifact.excludeFileNamesRegex)
#file.File.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#file.File.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFileArtifact.fileUri)
#file.File.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFileArtifact.isRescanned)
#file.File.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFileArtifact.placeholders)
#file.File.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFileArtifact.preScannedPlaceholders)
#file.File.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFileArtifact.proxySettings)
#file.File.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableFileArtifact.scanPlaceholders)
#file.File.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFileArtifact.tags)
#file.File.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#file.File.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployableFolderArtifact.boundTemplates)
#file.Folder.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFolderArtifact.checksum)
#file.Folder.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFolderArtifact.credentials)
#file.Folder.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFolderArtifact.delimiters)
#file.Folder.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFolderArtifact.excludeFileNamesRegex)
#file.Folder.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFolderArtifact.fileEncodings)
#file.Folder.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFolderArtifact.fileUri)
#file.Folder.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFolderArtifact.isRescanned)
#file.Folder.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFolderArtifact.placeholders)
#file.Folder.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFolderArtifact.preScannedPlaceholders)
#file.Folder.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFolderArtifact.proxySettings)
#file.Folder.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableFolderArtifact.scanPlaceholders)
#file.Folder.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFolderArtifact.tags)
#file.Folder.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFolderArtifact.textFileNamesRegex)
#file.Folder.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#generic.AbstractDeployed.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#generic.AbstractDeployed.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation.
#generic.AbstractDeployed.createOrder=50
# Create Verb
#generic.AbstractDeployed.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#generic.AbstractDeployed.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation.
#generic.AbstractDeployed.destroyOrder=40
# Destroy Verb
#generic.AbstractDeployed.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script.
#generic.AbstractDeployed.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container.
#generic.AbstractDeployed.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.AbstractDeployed.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation.
#generic.AbstractDeployed.modifyOrder=50
# Modify Verb
#generic.AbstractDeployed.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources).
#generic.AbstractDeployed.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation.
#generic.AbstractDeployed.noopOrder=50
# Noop Verb
#generic.AbstractDeployed.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed.
#generic.AbstractDeployed.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed.
#generic.AbstractDeployed.restartRequiredForNoop=false
# The set of created CIs. (inherited from: generic.AbstractDeployed.boundConfigurationItems)
#generic.AbstractDeployedArtifact.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.AbstractDeployed.container)
#generic.AbstractDeployedArtifact.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.AbstractDeployedArtifact.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.AbstractDeployedArtifact.createOrder=50
# Create the target directory on the generic server if it does not exist.
#generic.AbstractDeployedArtifact.createTargetDirectory=false
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.AbstractDeployedArtifact.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.AbstractDeployed.deployable)
#generic.AbstractDeployedArtifact.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.AbstractDeployedArtifact.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.AbstractDeployedArtifact.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.AbstractDeployedArtifact.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.AbstractDeployedArtifact.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.AbstractDeployedArtifact.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.AbstractDeployedArtifact.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.AbstractDeployedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.AbstractDeployedArtifact.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.AbstractDeployedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.AbstractDeployedArtifact.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.AbstractDeployedArtifact.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.AbstractDeployedArtifact.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.AbstractDeployedArtifact.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.AbstractDeployedArtifact.restartRequiredForNoop=false
# Path to which artifact must be copied to on the generic server.
#generic.AbstractDeployedArtifact.targetDirectory=null
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it.
#generic.AbstractDeployedArtifact.targetDirectoryShared=true
# The set of CI templates. (inherited from: udm.BaseDeployableArchiveArtifact.boundTemplates)
#generic.Archive.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArchiveArtifact.checksum)
#generic.Archive.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArchiveArtifact.credentials)
#generic.Archive.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#generic.Archive.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex)
#generic.Archive.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#generic.Archive.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArchiveArtifact.fileUri)
#generic.Archive.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArchiveArtifact.isRescanned)
#generic.Archive.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArchiveArtifact.placeholders)
#generic.Archive.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArchiveArtifact.preScannedPlaceholders)
#generic.Archive.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArchiveArtifact.proxySettings)
#generic.Archive.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArchiveArtifact.scanPlaceholders)
#generic.Archive.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArchiveArtifact.tags)
#generic.Archive.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#generic.Archive.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.BaseContainer.allowConcurrentDeployments)
#generic.BaseGenericContainer.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentGroup)
#generic.BaseGenericContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubGroup)
#generic.BaseGenericContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubSubGroup)
#generic.BaseGenericContainer.deploymentSubSubGroup=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script.
#generic.BaseGenericContainer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container.
#generic.BaseGenericContainer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script.
#generic.BaseGenericContainer.restartClasspathResources=null
# The order of the restart container step in the step list.
#generic.BaseGenericContainer.restartOrder=90
# Classpath to the script used to restart the generic container.
#generic.BaseGenericContainer.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action.
#generic.BaseGenericContainer.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script.
#generic.BaseGenericContainer.startClasspathResources=null
# The order of the start container step in the step list.
#generic.BaseGenericContainer.startOrder=90
# Classpath to the script used to start the generic container.
#generic.BaseGenericContainer.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action.
#generic.BaseGenericContainer.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script.
#generic.BaseGenericContainer.stopClasspathResources=null
# The order of the stop container step in the step list.
#generic.BaseGenericContainer.stopOrder=10
# Classpath to the script used to stop the generic container.
#generic.BaseGenericContainer.stopScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.BaseGenericContainer.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action.
#generic.BaseGenericContainer.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseContainer.tags)
#generic.BaseGenericContainer.tags=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.BaseGenericContainer.allowConcurrentDeployments)
#generic.Container.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentGroup)
#generic.Container.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentSubGroup)
#generic.Container.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentSubSubGroup)
#generic.Container.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.BaseGenericContainer.envVars)
#generic.Container.envVars=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.BaseGenericContainer.inspectClasspathResources)
#generic.Container.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.BaseGenericContainer.inspectScript)
#generic.Container.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.inspectTemplateClasspathResources)
#generic.Container.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.BaseGenericContainer.restartClasspathResources)
#generic.Container.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.BaseGenericContainer.restartOrder)
#generic.Container.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.BaseGenericContainer.restartScript)
#generic.Container.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.restartTemplateClasspathResources)
#generic.Container.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.BaseGenericContainer.restartWaitTime)
#generic.Container.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.BaseGenericContainer.startClasspathResources)
#generic.Container.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.BaseGenericContainer.startOrder)
#generic.Container.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.BaseGenericContainer.startScript)
#generic.Container.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.startTemplateClasspathResources)
#generic.Container.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.BaseGenericContainer.startWaitTime)
#generic.Container.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.BaseGenericContainer.stopClasspathResources)
#generic.Container.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.BaseGenericContainer.stopOrder)
#generic.Container.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.BaseGenericContainer.stopScript)
#generic.Container.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.BaseGenericContainer.stopStartRestartConnection)
#generic.Container.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.stopTemplateClasspathResources)
#generic.Container.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.BaseGenericContainer.stopWaitTime)
#generic.Container.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.BaseGenericContainer.tags)
#generic.Container.tags=null
# The set of created CIs. (inherited from: generic.AbstractDeployedArtifact.boundConfigurationItems)
#generic.CopiedArtifact.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.AbstractDeployedArtifact.container)
#generic.CopiedArtifact.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0)
#generic.CopiedArtifact.copyDirectlyToTargetPath=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.createOptions)
#generic.CopiedArtifact.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployedArtifact.createOrder)
#generic.CopiedArtifact.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.AbstractDeployedArtifact.createTargetDirectory)
#generic.CopiedArtifact.createTargetDirectory=false
# Create Verb (inherited from: generic.AbstractDeployedArtifact.createVerb)
#generic.CopiedArtifact.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.AbstractDeployedArtifact.deployable)
#generic.CopiedArtifact.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.destroyOptions)
#generic.CopiedArtifact.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployedArtifact.destroyOrder)
#generic.CopiedArtifact.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployedArtifact.destroyVerb)
#generic.CopiedArtifact.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployedArtifact.inspectClasspathResources)
#generic.CopiedArtifact.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployedArtifact.inspectScript)
#generic.CopiedArtifact.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployedArtifact.inspectTemplateClasspathResources)
#generic.CopiedArtifact.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.modifyOptions)
#generic.CopiedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployedArtifact.modifyOrder)
#generic.CopiedArtifact.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployedArtifact.modifyVerb)
#generic.CopiedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.noopOptions)
#generic.CopiedArtifact.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployedArtifact.noopOrder)
#generic.CopiedArtifact.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployedArtifact.noopVerb)
#generic.CopiedArtifact.noopVerb=Modify
# If set to true, preserve the existing files on the remote host (do not delete the copied files during the destroy operation). 
#generic.CopiedArtifact.preserveExistingFiles=false
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequired)
#generic.CopiedArtifact.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequiredForNoop)
#generic.CopiedArtifact.restartRequiredForNoop=false
# Path to which artifact must be copied to on the generic server. (inherited from: generic.AbstractDeployedArtifact.targetDirectory)
#generic.CopiedArtifact.targetDirectory=null
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.AbstractDeployedArtifact.targetDirectoryShared)
#generic.CopiedArtifact.targetDirectoryShared=true
# Name of the artifact on the generic server. (inherited from: generic.AbstractDeployedArtifact.targetFile)
#generic.CopiedArtifact.targetFile=null
# If set to true, the sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. Please note that setting this option to true will cause the removal process to be a slower. 
#generic.CopiedArtifact.targetPathSharedSubDirectories=false
# The set of created CIs. (inherited from: generic.AbstractDeployed.boundConfigurationItems)
#generic.ExecutedFolder.boundConfigurationItems=null
# If set to true, the checkpoint is set after the first script in a folder has been executed. Otherwise the checkpoint is set after the last script in a folder has been executed.
#generic.ExecutedFolder.checkpointAfterFirstScript=true
# Additional classpath resources that should be uploaded to the working directory before executing the script.
#generic.ExecutedFolder.classpathResources=null
# Common folder that should be uploaded to the working directory.
#generic.ExecutedFolder.commonScriptFolderName=common
# The container on which this deployed runs. (inherited from: generic.AbstractDeployed.container)
#generic.ExecutedFolder.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.ExecutedFolder.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.ExecutedFolder.createOrder=50
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.ExecutedFolder.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.AbstractDeployed.deployable)
#generic.ExecutedFolder.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.ExecutedFolder.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.ExecutedFolder.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.ExecutedFolder.destroyVerb=Destroy
# If set to true, modified scripts are also executed on a MODIFY or a NOOP.
#generic.ExecutedFolder.executeModifiedScripts=true
# If set to true, rollback scripts for modified scripts are also executed on a MODIFY or a NOOP.
#generic.ExecutedFolder.executeRollbackForModifiedScripts=true
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.ExecutedFolder.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.ExecutedFolder.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.ExecutedFolder.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.ExecutedFolder.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.ExecutedFolder.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.ExecutedFolder.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.ExecutedFolder.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.ExecutedFolder.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.ExecutedFolder.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.ExecutedFolder.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.ExecutedFolder.restartRequiredForNoop=false
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.ExecutedFolder.templateClasspathResources=null
# The set of created CIs. (inherited from: generic.AbstractDeployed.boundConfigurationItems)
#generic.ExecutedScript.boundConfigurationItems=null
# Additional classpath resources that should be uploaded to the working directory before executing the script.
#generic.ExecutedScript.classpathResources=null
# The container on which this deployed runs. (inherited from: generic.AbstractDeployed.container)
#generic.ExecutedScript.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.ExecutedScript.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.ExecutedScript.createOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the create operation.
#generic.ExecutedScript.createScript=null
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.ExecutedScript.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.AbstractDeployed.deployable)
#generic.ExecutedScript.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.ExecutedScript.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.ExecutedScript.destroyOrder=40
# Classpath to the script that is uploaded and executed on the generic container for the destroy operation.
#generic.ExecutedScript.destroyScript=null
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.ExecutedScript.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.ExecutedScript.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.ExecutedScript.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.ExecutedScript.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.ExecutedScript.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.ExecutedScript.modifyOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the modify operation.
#generic.ExecutedScript.modifyScript=null
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.ExecutedScript.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.ExecutedScript.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.ExecutedScript.noopOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the noop operation.
#generic.ExecutedScript.noopScript=null
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.ExecutedScript.noopVerb=Modify
# Name of working directory on target host. Default is to create a temporary directory which is deleted when connection is closed.
#generic.ExecutedScript.remoteWorkingDirectoryPath=null
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.ExecutedScript.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.ExecutedScript.restartRequiredForNoop=false
# Retain the specified working directory on target host after completion.
#generic.ExecutedScript.retainRemoteWorkingDirectory=false
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory.
#generic.ExecutedScript.templateClasspathResources=null
# The set of created CIs. (inherited from: generic.ExecutedScript.boundConfigurationItems)
#generic.ExecutedScriptWithDerivedArtifact.boundConfigurationItems=null
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: generic.ExecutedScript.classpathResources)
#generic.ExecutedScriptWithDerivedArtifact.classpathResources=null
# The container on which this deployed runs. (inherited from: generic.ExecutedScript.container)
#generic.ExecutedScriptWithDerivedArtifact.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.createOptions)
#generic.ExecutedScriptWithDerivedArtifact.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.ExecutedScript.createOrder)
#generic.ExecutedScriptWithDerivedArtifact.createOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the create operation. (inherited from: generic.ExecutedScript.createScript)
#generic.ExecutedScriptWithDerivedArtifact.createScript=null
# Create Verb (inherited from: generic.ExecutedScript.createVerb)
#generic.ExecutedScriptWithDerivedArtifact.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.ExecutedScript.deployable)
#generic.ExecutedScriptWithDerivedArtifact.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.destroyOptions)
#generic.ExecutedScriptWithDerivedArtifact.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.ExecutedScript.destroyOrder)
#generic.ExecutedScriptWithDerivedArtifact.destroyOrder=40
# Classpath to the script that is uploaded and executed on the generic container for the destroy operation. (inherited from: generic.ExecutedScript.destroyScript)
#generic.ExecutedScriptWithDerivedArtifact.destroyScript=null
# Destroy Verb (inherited from: generic.ExecutedScript.destroyVerb)
#generic.ExecutedScriptWithDerivedArtifact.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.ExecutedScript.inspectClasspathResources)
#generic.ExecutedScriptWithDerivedArtifact.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.ExecutedScript.inspectScript)
#generic.ExecutedScriptWithDerivedArtifact.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedScript.inspectTemplateClasspathResources)
#generic.ExecutedScriptWithDerivedArtifact.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.modifyOptions)
#generic.ExecutedScriptWithDerivedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.ExecutedScript.modifyOrder)
#generic.ExecutedScriptWithDerivedArtifact.modifyOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the modify operation. (inherited from: generic.ExecutedScript.modifyScript)
#generic.ExecutedScriptWithDerivedArtifact.modifyScript=null
# Modify Verb (inherited from: generic.ExecutedScript.modifyVerb)
#generic.ExecutedScriptWithDerivedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedScript.noopOptions)
#generic.ExecutedScriptWithDerivedArtifact.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.ExecutedScript.noopOrder)
#generic.ExecutedScriptWithDerivedArtifact.noopOrder=50
# Classpath to the script that is uploaded and executed on the generic container for the noop operation. (inherited from: generic.ExecutedScript.noopScript)
#generic.ExecutedScriptWithDerivedArtifact.noopScript=null
# Noop Verb (inherited from: generic.ExecutedScript.noopVerb)
#generic.ExecutedScriptWithDerivedArtifact.noopVerb=Modify
# Name of working directory on target host. Default is to create a temporary directory which is deleted when connection is closed. (inherited from: generic.ExecutedScript.remoteWorkingDirectoryPath)
#generic.ExecutedScriptWithDerivedArtifact.remoteWorkingDirectoryPath=null
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.ExecutedScript.restartRequired)
#generic.ExecutedScriptWithDerivedArtifact.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.ExecutedScript.restartRequiredForNoop)
#generic.ExecutedScriptWithDerivedArtifact.restartRequiredForNoop=false
# Retain the specified working directory on target host after completion. (inherited from: generic.ExecutedScript.retainRemoteWorkingDirectory)
#generic.ExecutedScriptWithDerivedArtifact.retainRemoteWorkingDirectory=false
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedScript.templateClasspathResources)
#generic.ExecutedScriptWithDerivedArtifact.templateClasspathResources=null
# The set of CI templates. (inherited from: udm.BaseDeployableFileArtifact.boundTemplates)
#generic.File.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFileArtifact.checksum)
#generic.File.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFileArtifact.credentials)
#generic.File.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#generic.File.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFileArtifact.excludeFileNamesRegex)
#generic.File.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#generic.File.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFileArtifact.fileUri)
#generic.File.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFileArtifact.isRescanned)
#generic.File.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFileArtifact.placeholders)
#generic.File.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFileArtifact.preScannedPlaceholders)
#generic.File.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFileArtifact.proxySettings)
#generic.File.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableFileArtifact.scanPlaceholders)
#generic.File.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFileArtifact.tags)
#generic.File.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#generic.File.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployableFolderArtifact.boundTemplates)
#generic.Folder.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFolderArtifact.checksum)
#generic.Folder.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFolderArtifact.credentials)
#generic.Folder.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFolderArtifact.delimiters)
#generic.Folder.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFolderArtifact.excludeFileNamesRegex)
#generic.Folder.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFolderArtifact.fileEncodings)
#generic.Folder.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFolderArtifact.fileUri)
#generic.Folder.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFolderArtifact.isRescanned)
#generic.Folder.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFolderArtifact.placeholders)
#generic.Folder.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFolderArtifact.preScannedPlaceholders)
#generic.Folder.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFolderArtifact.proxySettings)
#generic.Folder.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableFolderArtifact.scanPlaceholders)
#generic.Folder.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFolderArtifact.tags)
#generic.Folder.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFolderArtifact.textFileNamesRegex)
#generic.Folder.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of created CIs. (inherited from: generic.AbstractDeployed.boundConfigurationItems)
#generic.ManualProcess.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.AbstractDeployed.container)
#generic.ManualProcess.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.createOptions)
#generic.ManualProcess.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployed.createOrder)
#generic.ManualProcess.createOrder=50
# Classpath to the script that generates the instructions for the create operation.
#generic.ManualProcess.createScript=null
# Create Verb (inherited from: generic.AbstractDeployed.createVerb)
#generic.ManualProcess.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.AbstractDeployed.deployable)
#generic.ManualProcess.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.destroyOptions)
#generic.ManualProcess.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployed.destroyOrder)
#generic.ManualProcess.destroyOrder=40
# Classpath to the script that generates the instructions for the destroy operation.
#generic.ManualProcess.destroyScript=null
# Destroy Verb (inherited from: generic.AbstractDeployed.destroyVerb)
#generic.ManualProcess.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployed.inspectClasspathResources)
#generic.ManualProcess.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployed.inspectScript)
#generic.ManualProcess.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployed.inspectTemplateClasspathResources)
#generic.ManualProcess.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.modifyOptions)
#generic.ManualProcess.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployed.modifyOrder)
#generic.ManualProcess.modifyOrder=50
# Classpath to the script that generates the instructions for the modify operation.
#generic.ManualProcess.modifyScript=null
# Modify Verb (inherited from: generic.AbstractDeployed.modifyVerb)
#generic.ManualProcess.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployed.noopOptions)
#generic.ManualProcess.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployed.noopOrder)
#generic.ManualProcess.noopOrder=50
# Classpath to the script that generates the instructions for the noop operation.
#generic.ManualProcess.noopScript=null
# Noop Verb (inherited from: generic.AbstractDeployed.noopVerb)
#generic.ManualProcess.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequired)
#generic.ManualProcess.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployed.restartRequiredForNoop)
#generic.ManualProcess.restartRequiredForNoop=false
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.BaseGenericContainer.allowConcurrentDeployments)
#generic.NestedContainer.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentGroup)
#generic.NestedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentSubGroup)
#generic.NestedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentSubSubGroup)
#generic.NestedContainer.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.BaseGenericContainer.envVars)
#generic.NestedContainer.envVars=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.BaseGenericContainer.inspectClasspathResources)
#generic.NestedContainer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.BaseGenericContainer.inspectScript)
#generic.NestedContainer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.inspectTemplateClasspathResources)
#generic.NestedContainer.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.BaseGenericContainer.restartClasspathResources)
#generic.NestedContainer.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.BaseGenericContainer.restartOrder)
#generic.NestedContainer.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.BaseGenericContainer.restartScript)
#generic.NestedContainer.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.restartTemplateClasspathResources)
#generic.NestedContainer.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.BaseGenericContainer.restartWaitTime)
#generic.NestedContainer.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.BaseGenericContainer.startClasspathResources)
#generic.NestedContainer.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.BaseGenericContainer.startOrder)
#generic.NestedContainer.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.BaseGenericContainer.startScript)
#generic.NestedContainer.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.startTemplateClasspathResources)
#generic.NestedContainer.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.BaseGenericContainer.startWaitTime)
#generic.NestedContainer.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.BaseGenericContainer.stopClasspathResources)
#generic.NestedContainer.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.BaseGenericContainer.stopOrder)
#generic.NestedContainer.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.BaseGenericContainer.stopScript)
#generic.NestedContainer.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.BaseGenericContainer.stopStartRestartConnection)
#generic.NestedContainer.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.stopTemplateClasspathResources)
#generic.NestedContainer.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.BaseGenericContainer.stopWaitTime)
#generic.NestedContainer.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.BaseGenericContainer.tags)
#generic.NestedContainer.tags=null
# The set of created CIs. (inherited from: generic.AbstractDeployedArtifact.boundConfigurationItems)
#generic.ProcessedTemplate.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.AbstractDeployedArtifact.container)
#generic.ProcessedTemplate.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.createOptions)
#generic.ProcessedTemplate.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.AbstractDeployedArtifact.createOrder)
#generic.ProcessedTemplate.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.AbstractDeployedArtifact.createTargetDirectory)
#generic.ProcessedTemplate.createTargetDirectory=false
# Create Verb (inherited from: generic.AbstractDeployedArtifact.createVerb)
#generic.ProcessedTemplate.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: generic.AbstractDeployedArtifact.deployable)
#generic.ProcessedTemplate.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.destroyOptions)
#generic.ProcessedTemplate.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.AbstractDeployedArtifact.destroyOrder)
#generic.ProcessedTemplate.destroyOrder=40
# Destroy Verb (inherited from: generic.AbstractDeployedArtifact.destroyVerb)
#generic.ProcessedTemplate.destroyVerb=Destroy
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.AbstractDeployedArtifact.inspectClasspathResources)
#generic.ProcessedTemplate.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.AbstractDeployedArtifact.inspectScript)
#generic.ProcessedTemplate.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.AbstractDeployedArtifact.inspectTemplateClasspathResources)
#generic.ProcessedTemplate.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.modifyOptions)
#generic.ProcessedTemplate.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.AbstractDeployedArtifact.modifyOrder)
#generic.ProcessedTemplate.modifyOrder=50
# Modify Verb (inherited from: generic.AbstractDeployedArtifact.modifyVerb)
#generic.ProcessedTemplate.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.AbstractDeployedArtifact.noopOptions)
#generic.ProcessedTemplate.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.AbstractDeployedArtifact.noopOrder)
#generic.ProcessedTemplate.noopOrder=50
# Noop Verb (inherited from: generic.AbstractDeployedArtifact.noopVerb)
#generic.ProcessedTemplate.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequired)
#generic.ProcessedTemplate.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.AbstractDeployedArtifact.restartRequiredForNoop)
#generic.ProcessedTemplate.restartRequiredForNoop=false
# Path to which artifact must be copied to on the generic server. (inherited from: generic.AbstractDeployedArtifact.targetDirectory)
#generic.ProcessedTemplate.targetDirectory=null
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.AbstractDeployedArtifact.targetDirectoryShared)
#generic.ProcessedTemplate.targetDirectoryShared=true
# Name of the artifact on the generic server. (inherited from: generic.AbstractDeployedArtifact.targetFile)
#generic.ProcessedTemplate.targetFile=null
# Classpath to the freemarker template used to generate the content of the final text base artifact.
#generic.ProcessedTemplate.template=null
# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#generic.Resource.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#generic.Resource.tags=null
# The set of CI templates. (inherited from: jee.JndiResourceSpec.boundTemplates)
#jee.DataSourceSpec.boundTemplates=null
# Name used to lookup this resource in JNDI (inherited from: jee.JndiResourceSpec.jndiName)
#jee.DataSourceSpec.jndiName=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.JndiResourceSpec.tags)
#jee.DataSourceSpec.tags=null
# The set of CI templates. (inherited from: udm.BaseDeployableArchiveArtifact.boundTemplates)
#jee.Ear.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArchiveArtifact.checksum)
#jee.Ear.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArchiveArtifact.credentials)
#jee.Ear.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#jee.Ear.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex)
#jee.Ear.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#jee.Ear.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArchiveArtifact.fileUri)
#jee.Ear.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArchiveArtifact.isRescanned)
#jee.Ear.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArchiveArtifact.placeholders)
#jee.Ear.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArchiveArtifact.preScannedPlaceholders)
#jee.Ear.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArchiveArtifact.proxySettings)
#jee.Ear.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArchiveArtifact.scanPlaceholders)
#jee.Ear.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArchiveArtifact.tags)
#jee.Ear.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#jee.Ear.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployableArchiveArtifact.boundTemplates)
#jee.EjbJar.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArchiveArtifact.checksum)
#jee.EjbJar.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArchiveArtifact.credentials)
#jee.EjbJar.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#jee.EjbJar.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex)
#jee.EjbJar.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#jee.EjbJar.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArchiveArtifact.fileUri)
#jee.EjbJar.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArchiveArtifact.isRescanned)
#jee.EjbJar.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArchiveArtifact.placeholders)
#jee.EjbJar.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArchiveArtifact.preScannedPlaceholders)
#jee.EjbJar.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArchiveArtifact.proxySettings)
#jee.EjbJar.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArchiveArtifact.scanPlaceholders)
#jee.EjbJar.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArchiveArtifact.tags)
#jee.EjbJar.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#jee.EjbJar.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: jee.ResourceSpec.boundTemplates)
#jee.JndiResourceSpec.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.ResourceSpec.tags)
#jee.JndiResourceSpec.tags=null
# The set of CI templates. (inherited from: jee.JndiResourceSpec.boundTemplates)
#jee.MailSessionSpec.boundTemplates=null
# Name used to lookup this resource in JNDI (inherited from: jee.JndiResourceSpec.jndiName)
#jee.MailSessionSpec.jndiName=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.JndiResourceSpec.tags)
#jee.MailSessionSpec.tags=null
# The set of CI templates. (inherited from: jee.JndiResourceSpec.boundTemplates)
#jee.QueueConnectionFactorySpec.boundTemplates=null
# Name used to lookup this resource in JNDI (inherited from: jee.JndiResourceSpec.jndiName)
#jee.QueueConnectionFactorySpec.jndiName=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.JndiResourceSpec.tags)
#jee.QueueConnectionFactorySpec.tags=null
# The set of CI templates. (inherited from: jee.JndiResourceSpec.boundTemplates)
#jee.QueueSpec.boundTemplates=null
# Name used to lookup this resource in JNDI (inherited from: jee.JndiResourceSpec.jndiName)
#jee.QueueSpec.jndiName=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.JndiResourceSpec.tags)
#jee.QueueSpec.tags=null
# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#jee.ResourceSpec.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#jee.ResourceSpec.tags=null
# The set of CI templates. (inherited from: jee.JndiResourceSpec.boundTemplates)
#jee.TopicConnectionFactorySpec.boundTemplates=null
# Name used to lookup this resource in JNDI (inherited from: jee.JndiResourceSpec.jndiName)
#jee.TopicConnectionFactorySpec.jndiName=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.JndiResourceSpec.tags)
#jee.TopicConnectionFactorySpec.tags=null
# The set of CI templates. (inherited from: jee.JndiResourceSpec.boundTemplates)
#jee.TopicSpec.boundTemplates=null
# Name used to lookup this resource in JNDI (inherited from: jee.JndiResourceSpec.jndiName)
#jee.TopicSpec.jndiName=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: jee.JndiResourceSpec.tags)
#jee.TopicSpec.tags=null
# The set of CI templates. (inherited from: udm.BaseDeployableArchiveArtifact.boundTemplates)
#jee.War.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArchiveArtifact.checksum)
#jee.War.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArchiveArtifact.credentials)
#jee.War.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#jee.War.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex)
#jee.War.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#jee.War.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArchiveArtifact.fileUri)
#jee.War.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArchiveArtifact.isRescanned)
#jee.War.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArchiveArtifact.placeholders)
#jee.War.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArchiveArtifact.preScannedPlaceholders)
#jee.War.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArchiveArtifact.proxySettings)
#jee.War.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArchiveArtifact.scanPlaceholders)
#jee.War.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArchiveArtifact.tags)
#jee.War.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#jee.War.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.BaseContainer.allowConcurrentDeployments)
#lock.Manager.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentGroup)
#lock.Manager.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubGroup)
#lock.Manager.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubSubGroup)
#lock.Manager.deploymentSubSubGroup=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseContainer.tags)
#lock.Manager.tags=null
# Allow encrypted entries for non password properties.
#lookup.SimpleLookupValueProvider.allowEncryptedForNonPassword=false
# SMTP port
#mail.SmtpServer.port=25
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.RemoteHost.allowConcurrentDeployments)
#overthere.BaseSmbHost.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.BaseSmbHost.connectionTimeoutMillis=120000
# Type of CIFS connection to create
#overthere.BaseSmbHost.connectionType=WINRM_INTERNAL
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.RemoteHost.copyStrategy)
#overthere.BaseSmbHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentGroup)
#overthere.BaseSmbHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubGroup)
#overthere.BaseSmbHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubSubGroup)
#overthere.BaseSmbHost.deploymentSubSubGroup=null
# Jumpstation that should be used to reach this host (inherited from: overthere.RemoteHost.jumpstation)
#overthere.BaseSmbHost.jumpstation=null
# Operating system the host runs
#overthere.BaseSmbHost.os=WINDOWS
# Protocol to use when connecting to this host (inherited from: overthere.RemoteHost.protocol)
#overthere.BaseSmbHost.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.RemoteHost.satellite)
#overthere.BaseSmbHost.satellite=null
# Executable shell program (inherited from: overthere.RemoteHost.shell)
#overthere.BaseSmbHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.RemoteHost.stagingDirectoryPath)
#overthere.BaseSmbHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.RemoteHost.tags)
#overthere.BaseSmbHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.RemoteHost.temporaryDirectoryPath)
#overthere.BaseSmbHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.BaseSmbHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.BaseSmbHost.tmpFileCreationRetries=1000
# Context used by the WinRM server (WINRM only)
#overthere.BaseSmbHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server
#overthere.BaseSmbHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only)
#overthere.BaseSmbHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only)
#overthere.BaseSmbHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only)
#overthere.BaseSmbHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only)
#overthere.BaseSmbHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only)
#overthere.BaseSmbHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only)
#overthere.BaseSmbHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only)
#overthere.BaseSmbHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format
#overthere.BaseSmbHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only)
#overthere.BaseSmbHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only)
#overthere.BaseSmbHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only)
#overthere.BaseSmbHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only)
#overthere.BaseSmbHost.winrsNoprofile=false
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only)
#overthere.BaseSmbHost.winrsUnencrypted=false
# Address of the host (inherited from: overthere.BaseSmbHost.address)
#overthere.CifsHost.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.BaseSmbHost.allowConcurrentDeployments)
#overthere.CifsHost.allowConcurrentDeployments=true
# Port on which the CIFS server runs
#overthere.CifsHost.cifsPort=445
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.BaseSmbHost.connectionTimeoutMillis)
#overthere.CifsHost.connectionTimeoutMillis=120000
# Type of CIFS connection to create (inherited from: overthere.BaseSmbHost.connectionType)
#overthere.CifsHost.connectionType=WINRM_INTERNAL
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.BaseSmbHost.copyStrategy)
#overthere.CifsHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.BaseSmbHost.credentials)
#overthere.CifsHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentGroup)
#overthere.CifsHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentSubGroup)
#overthere.CifsHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentSubSubGroup)
#overthere.CifsHost.deploymentSubSubGroup=null
# Jumpstation that should be used to reach this host (inherited from: overthere.BaseSmbHost.jumpstation)
#overthere.CifsHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.BaseSmbHost.os)
#overthere.CifsHost.os=WINDOWS
# Password to use for authentication (inherited from: overthere.BaseSmbHost.password)
#overthere.CifsHost.password=null
# Port on which the Telnet or WinRM server runs (inherited from: overthere.BaseSmbHost.port)
#overthere.CifsHost.port=null
# Protocol to use when connecting to this host
#overthere.CifsHost.protocol=cifs
# Instance of xl-satellite that can manage this host. (inherited from: overthere.BaseSmbHost.satellite)
#overthere.CifsHost.satellite=null
# Executable shell program (inherited from: overthere.BaseSmbHost.shell)
#overthere.CifsHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.BaseSmbHost.stagingDirectoryPath)
#overthere.CifsHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.BaseSmbHost.tags)
#overthere.CifsHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.BaseSmbHost.temporaryDirectoryPath)
#overthere.CifsHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.BaseSmbHost.tmpDeleteOnDisconnect)
#overthere.CifsHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.BaseSmbHost.tmpFileCreationRetries)
#overthere.CifsHost.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.BaseSmbHost.username)
#overthere.CifsHost.username=null
# Context used by the WinRM server (WINRM only) (inherited from: overthere.BaseSmbHost.winrmContext)
#overthere.CifsHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server (inherited from: overthere.BaseSmbHost.winrmEnableHttps)
#overthere.CifsHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmEnvelopSize)
#overthere.CifsHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmHttpsCertificateTrustStrategy)
#overthere.CifsHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmHttpsHostnameVerificationStrategy)
#overthere.CifsHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmKerberosAddPortToSpn)
#overthere.CifsHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmKerberosDebug)
#overthere.CifsHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmKerberosUseHttpSpn)
#overthere.CifsHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmLocale)
#overthere.CifsHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format (inherited from: overthere.BaseSmbHost.winrmTimeout)
#overthere.CifsHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsAllowDelegate)
#overthere.CifsHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsCompression)
#overthere.CifsHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsNoecho)
#overthere.CifsHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsNoprofile)
#overthere.CifsHost.winrsNoprofile=false
# Host on which to run the winrs command. Defaults to localhost. (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsProxy)
#overthere.CifsHost.winrsProxy=null
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsUnencrypted)
#overthere.CifsHost.winrsUnencrypted=false
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.BaseContainer.allowConcurrentDeployments)
#overthere.Host.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentGroup)
#overthere.Host.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubGroup)
#overthere.Host.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubSubGroup)
#overthere.Host.deploymentSubSubGroup=null
# Protocol to use when connecting to this host
#overthere.Host.protocol=null
# Executable shell program
#overthere.Host.shell=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseContainer.tags)
#overthere.Host.tags=null
# If true, delete the temporary connection directory when the connection is closed
#overthere.Host.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name
#overthere.Host.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Jumpstation.allowConcurrentDeployments)
#overthere.HttpProxy.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.Jumpstation.connectionTimeoutMillis)
#overthere.HttpProxy.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Jumpstation.copyStrategy)
#overthere.HttpProxy.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentGroup)
#overthere.HttpProxy.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentSubGroup)
#overthere.HttpProxy.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentSubSubGroup)
#overthere.HttpProxy.deploymentSubSubGroup=null
# Jumpstations and proxies are assumed to run on UNIX. XLD won't access files or run commmands on them anyway (inherited from: overthere.Jumpstation.os)
#overthere.HttpProxy.os=UNIX
# Port on which the proxy server runs
#overthere.HttpProxy.port=8080
# Protocol to use when connecting to this host
#overthere.HttpProxy.protocol=proxy
# Proxy Type
#overthere.HttpProxy.proxyType=HTTP
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Jumpstation.satellite)
#overthere.HttpProxy.satellite=null
# Executable shell program (inherited from: overthere.Jumpstation.shell)
#overthere.HttpProxy.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Jumpstation.stagingDirectoryPath)
#overthere.HttpProxy.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Jumpstation.tags)
#overthere.HttpProxy.tags=null
# Temporary directory is not needed for jumpstations and proxies (inherited from: overthere.Jumpstation.temporaryDirectoryPath)
#overthere.HttpProxy.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Jumpstation.tmpDeleteOnDisconnect)
#overthere.HttpProxy.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Jumpstation.tmpFileCreationRetries)
#overthere.HttpProxy.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Host.allowConcurrentDeployments)
#overthere.Jumpstation.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established
#overthere.Jumpstation.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Host.copyStrategy)
#overthere.Jumpstation.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentGroup)
#overthere.Jumpstation.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubGroup)
#overthere.Jumpstation.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubSubGroup)
#overthere.Jumpstation.deploymentSubSubGroup=null
# Jumpstations and proxies are assumed to run on UNIX. XLD won't access files or run commmands on them anyway
#overthere.Jumpstation.os=UNIX
# Protocol to use when connecting to this host (inherited from: overthere.Host.protocol)
#overthere.Jumpstation.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Host.satellite)
#overthere.Jumpstation.satellite=null
# Executable shell program (inherited from: overthere.Host.shell)
#overthere.Jumpstation.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Host.stagingDirectoryPath)
#overthere.Jumpstation.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Host.tags)
#overthere.Jumpstation.tags=null
# Temporary directory is not needed for jumpstations and proxies
#overthere.Jumpstation.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#overthere.Jumpstation.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#overthere.Jumpstation.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Host.allowConcurrentDeployments)
#overthere.LocalHost.allowConcurrentDeployments=true
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Host.copyStrategy)
#overthere.LocalHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentGroup)
#overthere.LocalHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubGroup)
#overthere.LocalHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubSubGroup)
#overthere.LocalHost.deploymentSubSubGroup=null
# Operating system the host runs (inherited from: overthere.Host.os)
#overthere.LocalHost.os=null
# Protocol to use when connecting to this host
#overthere.LocalHost.protocol=local
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Host.satellite)
#overthere.LocalHost.satellite=null
# Executable shell program (inherited from: overthere.Host.shell)
#overthere.LocalHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Host.stagingDirectoryPath)
#overthere.LocalHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Host.tags)
#overthere.LocalHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.Host.temporaryDirectoryPath)
#overthere.LocalHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#overthere.LocalHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#overthere.LocalHost.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Host.allowConcurrentDeployments)
#overthere.RemoteHost.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established
#overthere.RemoteHost.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Host.copyStrategy)
#overthere.RemoteHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentGroup)
#overthere.RemoteHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubGroup)
#overthere.RemoteHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubSubGroup)
#overthere.RemoteHost.deploymentSubSubGroup=null
# Operating system the host runs (inherited from: overthere.Host.os)
#overthere.RemoteHost.os=null
# Protocol to use when connecting to this host (inherited from: overthere.Host.protocol)
#overthere.RemoteHost.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Host.satellite)
#overthere.RemoteHost.satellite=null
# Executable shell program (inherited from: overthere.Host.shell)
#overthere.RemoteHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Host.stagingDirectoryPath)
#overthere.RemoteHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Host.tags)
#overthere.RemoteHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.Host.temporaryDirectoryPath)
#overthere.RemoteHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#overthere.RemoteHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#overthere.RemoteHost.tmpFileCreationRetries=1000
# Address of the host (inherited from: overthere.BaseSmbHost.address)
#overthere.SmbHost.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.BaseSmbHost.allowConcurrentDeployments)
#overthere.SmbHost.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.BaseSmbHost.connectionTimeoutMillis)
#overthere.SmbHost.connectionTimeoutMillis=120000
# Type of CIFS connection to create (inherited from: overthere.BaseSmbHost.connectionType)
#overthere.SmbHost.connectionType=WINRM_INTERNAL
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.BaseSmbHost.copyStrategy)
#overthere.SmbHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.BaseSmbHost.credentials)
#overthere.SmbHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentGroup)
#overthere.SmbHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentSubGroup)
#overthere.SmbHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentSubSubGroup)
#overthere.SmbHost.deploymentSubSubGroup=null
# Jumpstation that should be used to reach this host (inherited from: overthere.BaseSmbHost.jumpstation)
#overthere.SmbHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.BaseSmbHost.os)
#overthere.SmbHost.os=WINDOWS
# Password to use for authentication (inherited from: overthere.BaseSmbHost.password)
#overthere.SmbHost.password=null
# Port on which the Telnet or WinRM server runs (inherited from: overthere.BaseSmbHost.port)
#overthere.SmbHost.port=null
# Protocol to use when connecting to this host
#overthere.SmbHost.protocol=smb
# Instance of xl-satellite that can manage this host. (inherited from: overthere.BaseSmbHost.satellite)
#overthere.SmbHost.satellite=null
# Executable shell program (inherited from: overthere.BaseSmbHost.shell)
#overthere.SmbHost.shell=null
# Port on which the SMB2 server runs
#overthere.SmbHost.smbPort=445
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.BaseSmbHost.stagingDirectoryPath)
#overthere.SmbHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.BaseSmbHost.tags)
#overthere.SmbHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.BaseSmbHost.temporaryDirectoryPath)
#overthere.SmbHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.BaseSmbHost.tmpDeleteOnDisconnect)
#overthere.SmbHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.BaseSmbHost.tmpFileCreationRetries)
#overthere.SmbHost.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.BaseSmbHost.username)
#overthere.SmbHost.username=null
# Context used by the WinRM server (WINRM only) (inherited from: overthere.BaseSmbHost.winrmContext)
#overthere.SmbHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server (inherited from: overthere.BaseSmbHost.winrmEnableHttps)
#overthere.SmbHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmEnvelopSize)
#overthere.SmbHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmHttpsCertificateTrustStrategy)
#overthere.SmbHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmHttpsHostnameVerificationStrategy)
#overthere.SmbHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmKerberosAddPortToSpn)
#overthere.SmbHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmKerberosDebug)
#overthere.SmbHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmKerberosUseHttpSpn)
#overthere.SmbHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmLocale)
#overthere.SmbHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format (inherited from: overthere.BaseSmbHost.winrmTimeout)
#overthere.SmbHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsAllowDelegate)
#overthere.SmbHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsCompression)
#overthere.SmbHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsNoecho)
#overthere.SmbHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsNoprofile)
#overthere.SmbHost.winrsNoprofile=false
# Host on which to run the winrs command. Defaults to localhost. (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsProxy)
#overthere.SmbHost.winrsProxy=null
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsUnencrypted)
#overthere.SmbHost.winrsUnencrypted=false
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command
#overthere.SshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0
#overthere.SshHost.allocatePty=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.RemoteHost.allowConcurrentDeployments)
#overthere.SshHost.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.SshHost.connectionTimeoutMillis=120000
# Type of SSH connection to create
#overthere.SshHost.connectionType=SFTP
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.RemoteHost.copyStrategy)
#overthere.SshHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentGroup)
#overthere.SshHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubGroup)
#overthere.SshHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubSubGroup)
#overthere.SshHost.deploymentSubSubGroup=null
# Regular expression to look for in keyboard-interactive authentication before sending the password
#overthere.SshHost.interactiveKeyboardAuthRegex=.*Password:[ ]?
# Jumpstation that should be used to reach this host (inherited from: overthere.RemoteHost.jumpstation)
#overthere.SshHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.RemoteHost.os)
#overthere.SshHost.os=null
# Port on which the SSH server runs
#overthere.SshHost.port=22
# Protocol to use when connecting to this host
#overthere.SshHost.protocol=ssh
# Instance of xl-satellite that can manage this host. (inherited from: overthere.RemoteHost.satellite)
#overthere.SshHost.satellite=null
# Executable shell program (inherited from: overthere.RemoteHost.shell)
#overthere.SshHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.RemoteHost.stagingDirectoryPath)
#overthere.SshHost.stagingDirectoryPath=null
# Su command to prefix to the original command. The placeholder {0} is replaced with the sudoUsername
#overthere.SshHost.suCommandPrefix=su - {0} -c
# If true, permissions are explicitly changed with chmod -R go+rX after uploading a file or directory
#overthere.SshHost.suOverrideUmask=true
# Regular expression to look for before sending the password
#overthere.SshHost.suPasswordPromptRegex=.*[Pp]assword.*:
# If true, files are copied from the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.suPreserveAttributesOnCopyFromTempFile=true
# If true, files are copied to the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.suPreserveAttributesOnCopyToTempFile=true
# If true, the original command is quoted when it is prefixed with suCommandPrefix
#overthere.SshHost.suQuoteCommand=true
# Sudo command to prefix to the original command. The placeholder {0} is replaced with the sudoUsername
#overthere.SshHost.sudoCommandPrefix=sudo -u {0}
# If true, permissions are explicitly changed with chmod -R go+rX after uploading a file or directory
#overthere.SshHost.sudoOverrideUmask=true
# Regular expression to look for in interactive sudo before sending the password
#overthere.SshHost.sudoPasswordPromptRegex=.*[Pp]assword.*:
# If true, files are copied from the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.sudoPreserveAttributesOnCopyFromTempFile=true
# If true, files are copied to the connection temporary directory using the -p flag to the cp command
#overthere.SshHost.sudoPreserveAttributesOnCopyToTempFile=true
# If true, the original command is quoted when it is prefixed with sudoCommandPrefix
#overthere.SshHost.sudoQuoteCommand=false
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.RemoteHost.tags)
#overthere.SshHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.RemoteHost.temporaryDirectoryPath)
#overthere.SshHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.SshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.SshHost.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Jumpstation.allowConcurrentDeployments)
#overthere.SshJumpstation.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.Jumpstation.connectionTimeoutMillis)
#overthere.SshJumpstation.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Jumpstation.copyStrategy)
#overthere.SshJumpstation.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentGroup)
#overthere.SshJumpstation.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentSubGroup)
#overthere.SshJumpstation.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentSubSubGroup)
#overthere.SshJumpstation.deploymentSubSubGroup=null
# Regular expression to look for in keyboard-interactive authentication before sending the password
#overthere.SshJumpstation.interactiveKeyboardAuthRegex=.*Password:[ ]?
# Jumpstations and proxies are assumed to run on UNIX. XLD won't access files or run commmands on them anyway (inherited from: overthere.Jumpstation.os)
#overthere.SshJumpstation.os=UNIX
# Port on which the SSH server runs
#overthere.SshJumpstation.port=22
# Port from where to start looking for freely available ports to use as the local part of an SSH port forward
#overthere.SshJumpstation.portAllocationRangeStart=1025
# Protocol to use when connecting to this host
#overthere.SshJumpstation.protocol=ssh-jumpstation
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Jumpstation.satellite)
#overthere.SshJumpstation.satellite=null
# Executable shell program (inherited from: overthere.Jumpstation.shell)
#overthere.SshJumpstation.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Jumpstation.stagingDirectoryPath)
#overthere.SshJumpstation.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Jumpstation.tags)
#overthere.SshJumpstation.tags=null
# Temporary directory is not needed for jumpstations and proxies (inherited from: overthere.Jumpstation.temporaryDirectoryPath)
#overthere.SshJumpstation.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Jumpstation.tmpDeleteOnDisconnect)
#overthere.SshJumpstation.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Jumpstation.tmpFileCreationRetries)
#overthere.SshJumpstation.tmpFileCreationRetries=1000
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command
#overthere.gcp.MetadataSshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0
#overthere.gcp.MetadataSshHost.allocatePty=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.RemoteHost.allowConcurrentDeployments)
#overthere.gcp.MetadataSshHost.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.gcp.MetadataSshHost.connectionTimeoutMillis=120000
# Type of SSH connection to create
#overthere.gcp.MetadataSshHost.connectionType=SFTP
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.RemoteHost.copyStrategy)
#overthere.gcp.MetadataSshHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentGroup)
#overthere.gcp.MetadataSshHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubGroup)
#overthere.gcp.MetadataSshHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubSubGroup)
#overthere.gcp.MetadataSshHost.deploymentSubSubGroup=null
# Gcp Key Management Type
#overthere.gcp.MetadataSshHost.gcpKeyManagementType=Metadata
# Jumpstation that should be used to reach this host (inherited from: overthere.RemoteHost.jumpstation)
#overthere.gcp.MetadataSshHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.RemoteHost.os)
#overthere.gcp.MetadataSshHost.os=null
# Port on which the SSH server runs
#overthere.gcp.MetadataSshHost.port=22
# Protocol to use when connecting to this host
#overthere.gcp.MetadataSshHost.protocol=gcp_ssh
# Instance of xl-satellite that can manage this host. (inherited from: overthere.RemoteHost.satellite)
#overthere.gcp.MetadataSshHost.satellite=null
# Executable shell program (inherited from: overthere.RemoteHost.shell)
#overthere.gcp.MetadataSshHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.RemoteHost.stagingDirectoryPath)
#overthere.gcp.MetadataSshHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.RemoteHost.tags)
#overthere.gcp.MetadataSshHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.RemoteHost.temporaryDirectoryPath)
#overthere.gcp.MetadataSshHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.gcp.MetadataSshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.gcp.MetadataSshHost.tmpFileCreationRetries=1000
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command
#overthere.gcp.OsLoginSshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0
#overthere.gcp.OsLoginSshHost.allocatePty=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.RemoteHost.allowConcurrentDeployments)
#overthere.gcp.OsLoginSshHost.allowConcurrentDeployments=true
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#overthere.gcp.OsLoginSshHost.connectionTimeoutMillis=120000
# Type of SSH connection to create
#overthere.gcp.OsLoginSshHost.connectionType=SFTP
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.RemoteHost.copyStrategy)
#overthere.gcp.OsLoginSshHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentGroup)
#overthere.gcp.OsLoginSshHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubGroup)
#overthere.gcp.OsLoginSshHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubSubGroup)
#overthere.gcp.OsLoginSshHost.deploymentSubSubGroup=null
# Gcp Key Management Type
#overthere.gcp.OsLoginSshHost.gcpKeyManagementType=OsLogin
# Jumpstation that should be used to reach this host (inherited from: overthere.RemoteHost.jumpstation)
#overthere.gcp.OsLoginSshHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.RemoteHost.os)
#overthere.gcp.OsLoginSshHost.os=null
# Port on which the SSH server runs
#overthere.gcp.OsLoginSshHost.port=22
# Protocol to use when connecting to this host
#overthere.gcp.OsLoginSshHost.protocol=gcp_ssh
# Instance of xl-satellite that can manage this host. (inherited from: overthere.RemoteHost.satellite)
#overthere.gcp.OsLoginSshHost.satellite=null
# Executable shell program (inherited from: overthere.RemoteHost.shell)
#overthere.gcp.OsLoginSshHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.RemoteHost.stagingDirectoryPath)
#overthere.gcp.OsLoginSshHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.RemoteHost.tags)
#overthere.gcp.OsLoginSshHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.RemoteHost.temporaryDirectoryPath)
#overthere.gcp.OsLoginSshHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#overthere.gcp.OsLoginSshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#overthere.gcp.OsLoginSshHost.tmpFileCreationRetries=1000
# The JSON activation entries as JSON Array
#patch.JsonPatchDictionary.activators=
# The type of the sample
#patch.JsonPatchDictionary.customFileType=JSON
# The text of the sample
#patch.JsonPatchDictionary.customSample=
# Regular expression to identify which types of files the patch entries will be applied to
#patch.JsonPatchDictionary.jsonFileRegex=.+\.(json)
# The patch entries that have been created
#patch.JsonPatchDictionary.patches=
# Selected artifact for creating patches and/or activators
#patch.JsonPatchDictionary.selectedArtifact=
# Selected YAML document for creating patches and/or activators
#patch.JsonPatchDictionary.selectedDocument=
# The source of the sample that will be provided for patching
#patch.JsonPatchDictionary.sourceType=Packages
# Regular expression to identify which types of files the patch entries will be applied to
#patch.JsonPatchDictionary.yamlFileRegex=.+\.(yaml|yml)
# Activation by filename (Regex)
#patch.RegexPatchDictionary.activationFileRegex=.*
# The Regex patch
#patch.RegexPatchDictionary.regex=
# The substitution
#patch.RegexPatchDictionary.substitution=
# Optional map of parameters to pass to the steps (inherited from: schedule.StepJob.controlTaskParams)
#policy.JythonStepJob.controlTaskParams=null
# Enables or disables triggering of the administration job (inherited from: schedule.StepJob.enabled)
#policy.JythonStepJob.enabled=true
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: schedule.StepJob.schedule)
#policy.JythonStepJob.schedule=null
# Optional map of parameters to pass to the steps (inherited from: policy.JythonStepJob.controlTaskParams)
#policy.PackageRetentionPolicy.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans
#policy.PackageRetentionPolicy.description=Execute package removal job according to policy
# Execute the policy without removing packages.
#policy.PackageRetentionPolicy.dryRun=false
# Enables or disables triggering of the administration job (inherited from: policy.JythonStepJob.enabled)
#policy.PackageRetentionPolicy.enabled=true
# Policy Type
#policy.PackageRetentionPolicy.policyType=LAST_N_ALL_ENV
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, and weekday. Month and weekday names can be entered as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight.
#policy.PackageRetentionPolicy.schedule=0 0 18 * * *
# Path to the Python script to execute (relative to XL Deploy's classpath)
#policy.PackageRetentionPolicy.scriptPath=policy/scripts/purge-packages.py
# Optional map of parameters to pass to the steps (inherited from: policy.JythonStepJob.controlTaskParams)
#policy.TaskArchivePolicy.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans
#policy.TaskArchivePolicy.description=Execute task archiving job according to policy
# Execute the policy without archiving tasks.
#policy.TaskArchivePolicy.dryRun=false
# Enables or disables triggering of the administration job (inherited from: policy.JythonStepJob.enabled)
#policy.TaskArchivePolicy.enabled=true
# Policy should be applied to executed tasks.
#policy.TaskArchivePolicy.includeExecutedTasks=true
# Policy should be applied to failed tasks.
#policy.TaskArchivePolicy.includeFailedTasks=true
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, and weekday. Month and weekday names can be entered as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight.
#policy.TaskArchivePolicy.schedule=0 30 18 * * *
# Path to the Python script to execute (relative to XL Deploy's classpath)
#policy.TaskArchivePolicy.scriptPath=policy/scripts/archive-tasks.py
# Path of the exported ZIP file. The property accepts ${ } placeholders where valid keys are CI properties with 'execDate' and 'execTime'added. For example: export/task_export_${execDate}_${execTime}.zip.
#policy.TaskRetentionPolicy.archivePath=export/task_export_${execDate}_${execTime}.zip
# Optional map of parameters to pass to the steps (inherited from: policy.JythonStepJob.controlTaskParams)
#policy.TaskRetentionPolicy.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans
#policy.TaskRetentionPolicy.description=Execute task removal job according to policy
# Execute the policy without removing tasks.
#policy.TaskRetentionPolicy.dryRun=false
# Enables or disables triggering of the administration job (inherited from: policy.JythonStepJob.enabled)
#policy.TaskRetentionPolicy.enabled=true
# Tasks will be exported to a ZIP file before being purged from the repository.
#policy.TaskRetentionPolicy.exportTasks=true
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, and weekday. Month and weekday names can be entered as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight.
#policy.TaskRetentionPolicy.schedule=0 30 18 * * *
# Path to the Python script to execute (relative to XL Deploy's classpath)
#policy.TaskRetentionPolicy.scriptPath=policy/scripts/purge-tasks.py
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections
#powershell.BaseExtensiblePowerShellDeployed.batchSteps=false
# The set of created CIs. (inherited from: powershell.BasePowerShellDeployed.boundConfigurationItems)
#powershell.BaseExtensiblePowerShellDeployed.boundConfigurationItems=null
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.BasePowerShellDeployed.classpathResources)
#powershell.BaseExtensiblePowerShellDeployed.classpathResources=null
# The container on which this deployed runs. (inherited from: powershell.BasePowerShellDeployed.container)
#powershell.BaseExtensiblePowerShellDeployed.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows.
#powershell.BaseExtensiblePowerShellDeployed.createScript=null
# Verb that is used to prefix the description for the create step.
#powershell.BaseExtensiblePowerShellDeployed.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: powershell.BasePowerShellDeployed.deployable)
#powershell.BaseExtensiblePowerShellDeployed.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows.
#powershell.BaseExtensiblePowerShellDeployed.destroyScript=null
# Verb that is used to prefix the description for the destroy step.
#powershell.BaseExtensiblePowerShellDeployed.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.BasePowerShellDeployed.discoverOrder)
#powershell.BaseExtensiblePowerShellDeployed.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.BasePowerShellDeployed.discoverScript)
#powershell.BaseExtensiblePowerShellDeployed.discoverScript=null
# Whether to add the host password to the powershell variable values. (inherited from: powershell.BasePowerShellDeployed.exposePasswordPropertiesOnHosts)
#powershell.BaseExtensiblePowerShellDeployed.exposePasswordPropertiesOnHosts=false
# List of scripts to append to the the step script. (inherited from: powershell.BasePowerShellDeployed.libraryScripts)
#powershell.BaseExtensiblePowerShellDeployed.libraryScripts=null
# Maximum number of steps in a batch.
#powershell.BaseExtensiblePowerShellDeployed.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows.
#powershell.BaseExtensiblePowerShellDeployed.modifyScript=null
# Verb that is used to prefix the description for the modify step.
#powershell.BaseExtensiblePowerShellDeployed.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows.
#powershell.BaseExtensiblePowerShellDeployed.noopScript=null
# Verb that is used to prefix the description for the noop step.
#powershell.BaseExtensiblePowerShellDeployed.noopVerb=Noop
# If set to true, the start script will be executed if this deployed is being created.
#powershell.BaseExtensiblePowerShellDeployed.startOnCreate=true
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.startOptions=uploadClasspathResources
# Order at which the start step will be executed.
#powershell.BaseExtensiblePowerShellDeployed.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows.
#powershell.BaseExtensiblePowerShellDeployed.startScript=null
# Verb that is used to prefix the description for the start step.
#powershell.BaseExtensiblePowerShellDeployed.startVerb=Start
# If set to true, the stop script will be executed if this deployed is being destroyed.
#powershell.BaseExtensiblePowerShellDeployed.stopOnDestroy=true
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed).
#powershell.BaseExtensiblePowerShellDeployed.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed.
#powershell.BaseExtensiblePowerShellDeployed.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows.
#powershell.BaseExtensiblePowerShellDeployed.stopScript=null
# If set to true, the stop and start scripts will be executed if this deployed is being modified.
#powershell.BaseExtensiblePowerShellDeployed.stopStartOnModify=true
# If set to true, the stop and start scripts will be executed if this deployable is not being modified.
#powershell.BaseExtensiblePowerShellDeployed.stopStartOnNoop=true
# Verb that is used to prefix the description for the stop step.
#powershell.BaseExtensiblePowerShellDeployed.stopVerb=Stop
# Whether to use a sidecar '.ini' file to transfer the powershell variable values. (inherited from: powershell.BasePowerShellDeployed.useSidecarIniFile)
#powershell.BaseExtensiblePowerShellDeployed.useSidecarIniFile=false
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.BaseContainer.allowConcurrentDeployments)
#powershell.BasePowerShellContainer.allowConcurrentDeployments=true
# Deployeds To Discover
#powershell.BasePowerShellContainer.deployedsToDiscover=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentGroup)
#powershell.BasePowerShellContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubGroup)
#powershell.BasePowerShellContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubSubGroup)
#powershell.BasePowerShellContainer.deploymentSubSubGroup=null
# Order at which the discover step will be executed.
#powershell.BasePowerShellContainer.discoverOrder=0
# Script invoked to inspect this container and discover deployeds on it.
#powershell.BasePowerShellContainer.discoverScript=null
# List of scripts to append to the the step script.
#powershell.BasePowerShellContainer.libraryScripts=powershell/runtime/base.ps1
# Power Shell Path
#powershell.BasePowerShellContainer.powerShellPath=powershell
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseContainer.tags)
#powershell.BasePowerShellContainer.tags=null
# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#powershell.BasePowerShellDeployable.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#powershell.BasePowerShellDeployable.tags=null
# The set of CI templates. (inherited from: udm.BaseDeployableArchiveArtifact.boundTemplates)
#powershell.BasePowerShellDeployableArchiveArtifact.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArchiveArtifact.checksum)
#powershell.BasePowerShellDeployableArchiveArtifact.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArchiveArtifact.credentials)
#powershell.BasePowerShellDeployableArchiveArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArchiveArtifact.delimiters)
#powershell.BasePowerShellDeployableArchiveArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex)
#powershell.BasePowerShellDeployableArchiveArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArchiveArtifact.fileEncodings)
#powershell.BasePowerShellDeployableArchiveArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArchiveArtifact.fileUri)
#powershell.BasePowerShellDeployableArchiveArtifact.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArchiveArtifact.isRescanned)
#powershell.BasePowerShellDeployableArchiveArtifact.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArchiveArtifact.placeholders)
#powershell.BasePowerShellDeployableArchiveArtifact.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArchiveArtifact.preScannedPlaceholders)
#powershell.BasePowerShellDeployableArchiveArtifact.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArchiveArtifact.proxySettings)
#powershell.BasePowerShellDeployableArchiveArtifact.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArchiveArtifact.scanPlaceholders)
#powershell.BasePowerShellDeployableArchiveArtifact.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArchiveArtifact.tags)
#powershell.BasePowerShellDeployableArchiveArtifact.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArchiveArtifact.textFileNamesRegex)
#powershell.BasePowerShellDeployableArchiveArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployableFileArtifact.boundTemplates)
#powershell.BasePowerShellDeployableFileArtifact.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFileArtifact.checksum)
#powershell.BasePowerShellDeployableFileArtifact.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFileArtifact.credentials)
#powershell.BasePowerShellDeployableFileArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#powershell.BasePowerShellDeployableFileArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFileArtifact.excludeFileNamesRegex)
#powershell.BasePowerShellDeployableFileArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#powershell.BasePowerShellDeployableFileArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFileArtifact.fileUri)
#powershell.BasePowerShellDeployableFileArtifact.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFileArtifact.isRescanned)
#powershell.BasePowerShellDeployableFileArtifact.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFileArtifact.placeholders)
#powershell.BasePowerShellDeployableFileArtifact.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFileArtifact.preScannedPlaceholders)
#powershell.BasePowerShellDeployableFileArtifact.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFileArtifact.proxySettings)
#powershell.BasePowerShellDeployableFileArtifact.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableFileArtifact.scanPlaceholders)
#powershell.BasePowerShellDeployableFileArtifact.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFileArtifact.tags)
#powershell.BasePowerShellDeployableFileArtifact.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#powershell.BasePowerShellDeployableFileArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployableFolderArtifact.boundTemplates)
#powershell.BasePowerShellDeployableFolderArtifact.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFolderArtifact.checksum)
#powershell.BasePowerShellDeployableFolderArtifact.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFolderArtifact.credentials)
#powershell.BasePowerShellDeployableFolderArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFolderArtifact.delimiters)
#powershell.BasePowerShellDeployableFolderArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFolderArtifact.excludeFileNamesRegex)
#powershell.BasePowerShellDeployableFolderArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFolderArtifact.fileEncodings)
#powershell.BasePowerShellDeployableFolderArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFolderArtifact.fileUri)
#powershell.BasePowerShellDeployableFolderArtifact.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFolderArtifact.isRescanned)
#powershell.BasePowerShellDeployableFolderArtifact.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFolderArtifact.placeholders)
#powershell.BasePowerShellDeployableFolderArtifact.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFolderArtifact.preScannedPlaceholders)
#powershell.BasePowerShellDeployableFolderArtifact.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFolderArtifact.proxySettings)
#powershell.BasePowerShellDeployableFolderArtifact.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableFolderArtifact.scanPlaceholders)
#powershell.BasePowerShellDeployableFolderArtifact.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFolderArtifact.tags)
#powershell.BasePowerShellDeployableFolderArtifact.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFolderArtifact.textFileNamesRegex)
#powershell.BasePowerShellDeployableFolderArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#powershell.BasePowerShellDeployed.boundConfigurationItems=null
# Additional classpath resources that should be uploaded to the working directory before executing the script.
#powershell.BasePowerShellDeployed.classpathResources=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#powershell.BasePowerShellDeployed.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#powershell.BasePowerShellDeployed.deployable=null
# Order at which the discover step will be executed.
#powershell.BasePowerShellDeployed.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type.
#powershell.BasePowerShellDeployed.discoverScript=null
# Whether to add the host password to the powershell variable values.
#powershell.BasePowerShellDeployed.exposePasswordPropertiesOnHosts=false
# List of scripts to append to the the step script.
#powershell.BasePowerShellDeployed.libraryScripts=null
# Whether to use a sidecar '.ini' file to transfer the powershell variable values.
#powershell.BasePowerShellDeployed.useSidecarIniFile=false
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.BaseExtensiblePowerShellDeployed.batchSteps)
#powershell.ExtensiblePowerShellDeployed.batchSteps=false
# The set of created CIs. (inherited from: powershell.BaseExtensiblePowerShellDeployed.boundConfigurationItems)
#powershell.ExtensiblePowerShellDeployed.boundConfigurationItems=null
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.classpathResources)
#powershell.ExtensiblePowerShellDeployed.classpathResources=null
# The container on which this deployed runs. (inherited from: powershell.BaseExtensiblePowerShellDeployed.container)
#powershell.ExtensiblePowerShellDeployed.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOptions)
#powershell.ExtensiblePowerShellDeployed.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOrder)
#powershell.ExtensiblePowerShellDeployed.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createScript)
#powershell.ExtensiblePowerShellDeployed.createScript=null
# Verb that is used to prefix the description for the create step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createVerb)
#powershell.ExtensiblePowerShellDeployed.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: powershell.BaseExtensiblePowerShellDeployed.deployable)
#powershell.ExtensiblePowerShellDeployed.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOptions)
#powershell.ExtensiblePowerShellDeployed.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOrder)
#powershell.ExtensiblePowerShellDeployed.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyScript)
#powershell.ExtensiblePowerShellDeployed.destroyScript=null
# Verb that is used to prefix the description for the destroy step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyVerb)
#powershell.ExtensiblePowerShellDeployed.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverOrder)
#powershell.ExtensiblePowerShellDeployed.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverScript)
#powershell.ExtensiblePowerShellDeployed.discoverScript=null
# Whether to add the host password to the powershell variable values. (inherited from: powershell.BaseExtensiblePowerShellDeployed.exposePasswordPropertiesOnHosts)
#powershell.ExtensiblePowerShellDeployed.exposePasswordPropertiesOnHosts=false
# List of scripts to append to the the step script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.libraryScripts)
#powershell.ExtensiblePowerShellDeployed.libraryScripts=null
# Maximum number of steps in a batch. (inherited from: powershell.BaseExtensiblePowerShellDeployed.maxBatchSize)
#powershell.ExtensiblePowerShellDeployed.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOptions)
#powershell.ExtensiblePowerShellDeployed.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOrder)
#powershell.ExtensiblePowerShellDeployed.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyScript)
#powershell.ExtensiblePowerShellDeployed.modifyScript=null
# Verb that is used to prefix the description for the modify step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyVerb)
#powershell.ExtensiblePowerShellDeployed.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOptions)
#powershell.ExtensiblePowerShellDeployed.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOrder)
#powershell.ExtensiblePowerShellDeployed.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopScript)
#powershell.ExtensiblePowerShellDeployed.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopVerb)
#powershell.ExtensiblePowerShellDeployed.noopVerb=Noop
# If set to true, the start script will be executed if this deployed is being created. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOnCreate)
#powershell.ExtensiblePowerShellDeployed.startOnCreate=true
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOptions)
#powershell.ExtensiblePowerShellDeployed.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOrder)
#powershell.ExtensiblePowerShellDeployed.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startScript)
#powershell.ExtensiblePowerShellDeployed.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startVerb)
#powershell.ExtensiblePowerShellDeployed.startVerb=Start
# If set to true, the stop script will be executed if this deployed is being destroyed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOnDestroy)
#powershell.ExtensiblePowerShellDeployed.stopOnDestroy=true
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOptions)
#powershell.ExtensiblePowerShellDeployed.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOrder)
#powershell.ExtensiblePowerShellDeployed.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopScript)
#powershell.ExtensiblePowerShellDeployed.stopScript=null
# If set to true, the stop and start scripts will be executed if this deployed is being modified. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopStartOnModify)
#powershell.ExtensiblePowerShellDeployed.stopStartOnModify=true
# If set to true, the stop and start scripts will be executed if this deployable is not being modified. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopStartOnNoop)
#powershell.ExtensiblePowerShellDeployed.stopStartOnNoop=true
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopVerb)
#powershell.ExtensiblePowerShellDeployed.stopVerb=Stop
# Whether to use a sidecar '.ini' file to transfer the powershell variable values. (inherited from: powershell.BaseExtensiblePowerShellDeployed.useSidecarIniFile)
#powershell.ExtensiblePowerShellDeployed.useSidecarIniFile=false
# If set to true, multiple steps at the same order will be batched together in one batch to improve performance over high-latency WinRM connections (inherited from: powershell.BaseExtensiblePowerShellDeployed.batchSteps)
#powershell.ExtensiblePowerShellDeployedArtifact.batchSteps=false
# The set of created CIs. (inherited from: powershell.BaseExtensiblePowerShellDeployed.boundConfigurationItems)
#powershell.ExtensiblePowerShellDeployedArtifact.boundConfigurationItems=null
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.classpathResources)
#powershell.ExtensiblePowerShellDeployedArtifact.classpathResources=null
# The container on which this deployed runs. (inherited from: powershell.BaseExtensiblePowerShellDeployed.container)
#powershell.ExtensiblePowerShellDeployedArtifact.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.createOptions=uploadArtifactData,uploadClasspathResources
# Order at which the create step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.createOrder=60
# PowerShell script invoked to create a resource (or deploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createScript)
#powershell.ExtensiblePowerShellDeployedArtifact.createScript=null
# Verb that is used to prefix the description for the create step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.createVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.createVerb=Create
# The deployable that this deployed is derived from. (inherited from: powershell.BaseExtensiblePowerShellDeployed.deployable)
#powershell.ExtensiblePowerShellDeployedArtifact.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyOptions=uploadClasspathResources
# Order at which the destroy step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyOrder=40
# PowerShell script invoked to destroy a resource (or undeploy an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyScript)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyScript=null
# Verb that is used to prefix the description for the destroy step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.destroyVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.destroyVerb=Destroy
# Order at which the discover step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.discoverOrder=50
# Script invoked to discover and inspect deployeds of this type. (inherited from: powershell.BaseExtensiblePowerShellDeployed.discoverScript)
#powershell.ExtensiblePowerShellDeployedArtifact.discoverScript=null
# Whether to add the host password to the powershell variable values. (inherited from: powershell.BaseExtensiblePowerShellDeployed.exposePasswordPropertiesOnHosts)
#powershell.ExtensiblePowerShellDeployedArtifact.exposePasswordPropertiesOnHosts=false
# List of scripts to append to the the step script. (inherited from: powershell.BaseExtensiblePowerShellDeployed.libraryScripts)
#powershell.ExtensiblePowerShellDeployedArtifact.libraryScripts=null
# Maximum number of steps in a batch. (inherited from: powershell.BaseExtensiblePowerShellDeployed.maxBatchSize)
#powershell.ExtensiblePowerShellDeployedArtifact.maxBatchSize=100
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyOptions=uploadArtifactData,uploadClasspathResources
# Order at which the modify step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyOrder=60
# PowerShell script invoked to modify a resource (or an artifact) on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyScript)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyScript=null
# Verb that is used to prefix the description for the modify step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.modifyVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.noopOptions=uploadClasspathResources
# Order at which the noop step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.noopOrder=50
# PowerShell script invoked to noop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopScript)
#powershell.ExtensiblePowerShellDeployedArtifact.noopScript=null
# Verb that is used to prefix the description for the noop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.noopVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.noopVerb=Noop
# If set to true, the start script will be executed if this deployed is being created. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOnCreate)
#powershell.ExtensiblePowerShellDeployedArtifact.startOnCreate=true
# Options for the start step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.startOptions=uploadClasspathResources
# Order at which the start step will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.startOrder=90
# PowerShell script invoked to start a resource of an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startScript)
#powershell.ExtensiblePowerShellDeployedArtifact.startScript=null
# Verb that is used to prefix the description for the start step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.startVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.startVerb=Start
# If set to true, the stop script will be executed if this deployed is being destroyed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOnDestroy)
#powershell.ExtensiblePowerShellDeployedArtifact.stopOnDestroy=true
# Options for the stop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,exposeDeployedApplication,exposePreviousDeployed). (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOptions)
#powershell.ExtensiblePowerShellDeployedArtifact.stopOptions=uploadClasspathResources
# Order at which the stop script will be executed. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopOrder)
#powershell.ExtensiblePowerShellDeployedArtifact.stopOrder=10
# PowerShell script invoked to stop a resource or an artifact on Windows. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopScript)
#powershell.ExtensiblePowerShellDeployedArtifact.stopScript=null
# If set to true, the stop and start scripts will be executed if this deployed is being modified. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopStartOnModify)
#powershell.ExtensiblePowerShellDeployedArtifact.stopStartOnModify=true
# If set to true, the stop and start scripts will be executed if this deployable is not being modified. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopStartOnNoop)
#powershell.ExtensiblePowerShellDeployedArtifact.stopStartOnNoop=true
# Verb that is used to prefix the description for the stop step. (inherited from: powershell.BaseExtensiblePowerShellDeployed.stopVerb)
#powershell.ExtensiblePowerShellDeployedArtifact.stopVerb=Stop
# Whether to use a sidecar '.ini' file to transfer the powershell variable values. (inherited from: powershell.BaseExtensiblePowerShellDeployed.useSidecarIniFile)
#powershell.ExtensiblePowerShellDeployedArtifact.useSidecarIniFile=false
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#python.PythonManagedDeployed.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#python.PythonManagedDeployed.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#python.PythonManagedDeployed.deployable=null
# The order in which a discover step will be executed.
#python.PythonManagedDeployed.discoverOrder=50
# Flag to indicate whether the deployed application CI is to be injected to the Python script execution context.
#python.PythonManagedDeployed.exposeDeployedApplication=false
# List of scripts to be appended to the deployed's runtime script
#python.PythonManagedDeployed.libraryScripts=null
# The set of created CIs. (inherited from: udm.BaseDeployedContainer.boundConfigurationItems)
#python.PythonManagedDeployedContainer.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployedContainer.container)
#python.PythonManagedDeployedContainer.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployedContainer.deployable)
#python.PythonManagedDeployedContainer.deployable=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentGroup)
#python.PythonManagedDeployedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentSubGroup)
#python.PythonManagedDeployedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentSubSubGroup)
#python.PythonManagedDeployedContainer.deploymentSubSubGroup=null
# The order in which a discover step will be executed.
#python.PythonManagedDeployedContainer.discoverOrder=50
# Flag to indicate whether the deployed application CI is to be injected to the Python script execution context.
#python.PythonManagedDeployedContainer.exposeDeployedApplication=false
# List of scripts to be appended to the deployed's runtime script
#python.PythonManagedDeployedContainer.libraryScripts=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseDeployedContainer.tags)
#python.PythonManagedDeployedContainer.tags=null
# Enables or disables triggering of the administration job (inherited from: schedule.CronJob.enabled)
#schedule.ControlTaskJob.enabled=true
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: schedule.CronJob.schedule)
#schedule.ControlTaskJob.schedule=null
# Enables or disables triggering of the administration job (inherited from: schedule.ScheduledJob.enabled)
#schedule.CronJob.enabled=true
# Enables or disables triggering of the administration job
#schedule.ScheduledJob.enabled=true
# Optional map of parameters to pass to the steps
#schedule.StepJob.controlTaskParams=null
# Enables or disables triggering of the administration job (inherited from: schedule.CronJob.enabled)
#schedule.StepJob.enabled=true
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: schedule.CronJob.schedule)
#schedule.StepJob.schedule=null
# Allow individual users to opt-out from anonymous usage analytics and guidance
#settings.PendoAnalytics.allowUsersToOptOut=false
# Documentation Page
#settings.PendoAnalytics.documentationPage=deploy/how-to/analytics-and-guidance.html
# Enable the analytics and guidance feature in this Deploy environment
#settings.PendoAnalytics.enabled=true
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.SqlClient.additionalOptions)
#sql.Db2Client.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.SqlClient.allowConcurrentDeployments)
#sql.Db2Client.allowConcurrentDeployments=true
# The OS-specific wrapper script that calls the SQL client
#sql.Db2Client.clientWrapperScript=sql/Db2Client
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentGroup)
#sql.Db2Client.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubGroup)
#sql.Db2Client.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubSubGroup)
#sql.Db2Client.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.SqlClient.envVars)
#sql.Db2Client.envVars=null
# Host upon which the container resides (inherited from: sql.SqlClient.host)
#sql.Db2Client.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.Db2Client.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.Db2Client.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.Db2Client.inspectTemplateClasspathResources=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.password)
#sql.Db2Client.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.Db2Client.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.Db2Client.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.Db2Client.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.Db2Client.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.Db2Client.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.Db2Client.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.Db2Client.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.Db2Client.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.Db2Client.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.Db2Client.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.Db2Client.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.Db2Client.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.Db2Client.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.SqlClient.stopStartRestartConnection)
#sql.Db2Client.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.Db2Client.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.Db2Client.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.SqlClient.tags)
#sql.Db2Client.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.username)
#sql.Db2Client.username=null
# The set of created CIs. (inherited from: generic.ExecutedFolder.boundConfigurationItems)
#sql.ExecutedSqlScripts.boundConfigurationItems=null
# If set to true, the checkpoint is set after the first script in a folder has been executed. Otherwise the checkpoint is set after the last script in a folder has been executed. (inherited from: generic.ExecutedFolder.checkpointAfterFirstScript)
#sql.ExecutedSqlScripts.checkpointAfterFirstScript=true
# Additional classpath resources that should be uploaded to the working directory before executing the script. (inherited from: generic.ExecutedFolder.classpathResources)
#sql.ExecutedSqlScripts.classpathResources=null
# Common folder that should be uploaded to the working directory. (inherited from: generic.ExecutedFolder.commonScriptFolderName)
#sql.ExecutedSqlScripts.commonScriptFolderName=common
# The container on which this deployed runs. (inherited from: generic.ExecutedFolder.container)
#sql.ExecutedSqlScripts.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.createOptions)
#sql.ExecutedSqlScripts.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.ExecutedFolder.createOrder)
#sql.ExecutedSqlScripts.createOrder=50
# Create Verb
#sql.ExecutedSqlScripts.createVerb=Run
# The deployable that this deployed is derived from. (inherited from: generic.ExecutedFolder.deployable)
#sql.ExecutedSqlScripts.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.destroyOptions)
#sql.ExecutedSqlScripts.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.ExecutedFolder.destroyOrder)
#sql.ExecutedSqlScripts.destroyOrder=40
# Destroy Verb
#sql.ExecutedSqlScripts.destroyVerb=Rollback
# If set to true, modified scripts are also executed on a MODIFY or a NOOP. (inherited from: generic.ExecutedFolder.executeModifiedScripts)
#sql.ExecutedSqlScripts.executeModifiedScripts=true
# If set to true, rollback scripts for modified scripts are also executed on a MODIFY or a NOOP. (inherited from: generic.ExecutedFolder.executeRollbackForModifiedScripts)
#sql.ExecutedSqlScripts.executeRollbackForModifiedScripts=true
# Name of the executor script that will be executed for each script found in the folder.
#sql.ExecutedSqlScripts.executorScript=${deployed.container.clientWrapperScript}
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.ExecutedFolder.inspectClasspathResources)
#sql.ExecutedSqlScripts.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.ExecutedFolder.inspectScript)
#sql.ExecutedSqlScripts.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedFolder.inspectTemplateClasspathResources)
#sql.ExecutedSqlScripts.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.modifyOptions)
#sql.ExecutedSqlScripts.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.ExecutedFolder.modifyOrder)
#sql.ExecutedSqlScripts.modifyOrder=50
# Modify Verb (inherited from: generic.ExecutedFolder.modifyVerb)
#sql.ExecutedSqlScripts.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ExecutedFolder.noopOptions)
#sql.ExecutedSqlScripts.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.ExecutedFolder.noopOrder)
#sql.ExecutedSqlScripts.noopOrder=50
# Noop Verb (inherited from: generic.ExecutedFolder.noopVerb)
#sql.ExecutedSqlScripts.noopVerb=Modify
# A key/value pair mapping of placeholders in the deployed artifact to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: generic.ExecutedFolder.placeholders)
#sql.ExecutedSqlScripts.placeholders=null
# The generic container requires a restart for the action performed by this deployed. (inherited from: generic.ExecutedFolder.restartRequired)
#sql.ExecutedSqlScripts.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.ExecutedFolder.restartRequiredForNoop)
#sql.ExecutedSqlScripts.restartRequiredForNoop=false
# A script's associated rollback script is derived by using the 1st group identified by the scriptRecognitionRegex and then appending this postfix to it. e.g give name '01-myscript.sql', regex '([0-9]*-.*)\.sql' and rollback script postfix '-rollback.sql', we can derive the name of the associated rollback script  to be '01-myscript-rollback.sql'
#sql.ExecutedSqlScripts.rollbackScriptPostfix=-rollback.sql
# Regular expression used to identify a rollback script in the folder. A successful match should returns a single group, ie the logical script name. e.g. [0-9]*-.*-rollback\.sql
#sql.ExecutedSqlScripts.rollbackScriptRecognitionRegex=([0-9]*-.*-rollback)\.sql
# Regular expression used to identify a script in the folder.  A successful match should returns a single group to which the rollbackScriptPostfix can be appended in order to find the associated rollback script or the script's dependent subfolder.  e.g.([0-9]*-.*)\.sql
#sql.ExecutedSqlScripts.scriptRecognitionRegex=(?!.*-rollback\.sql)([0-9]*-.*)\.sql
# Additional template classpath resources that should be uploaded to the working directory before executing the script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ExecutedFolder.templateClasspathResources)
#sql.ExecutedSqlScripts.templateClasspathResources=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.SqlClient.additionalOptions)
#sql.MsSqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.SqlClient.allowConcurrentDeployments)
#sql.MsSqlClient.allowConcurrentDeployments=true
# The OS-specific wrapper script that calls the SQL client
#sql.MsSqlClient.clientWrapperScript=sql/MsSqlClient
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentGroup)
#sql.MsSqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubGroup)
#sql.MsSqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubSubGroup)
#sql.MsSqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.SqlClient.envVars)
#sql.MsSqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.SqlClient.host)
#sql.MsSqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.MsSqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.MsSqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.MsSqlClient.inspectTemplateClasspathResources=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.password)
#sql.MsSqlClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.MsSqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.MsSqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.MsSqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.MsSqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.MsSqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.MsSqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.MsSqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.MsSqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.MsSqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.MsSqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.MsSqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.MsSqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.MsSqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.SqlClient.stopStartRestartConnection)
#sql.MsSqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.MsSqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.MsSqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.SqlClient.tags)
#sql.MsSqlClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.username)
#sql.MsSqlClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.SqlClient.additionalOptions)
#sql.MySqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.SqlClient.allowConcurrentDeployments)
#sql.MySqlClient.allowConcurrentDeployments=true
# The OS-specific wrapper script that calls the SQL client
#sql.MySqlClient.clientWrapperScript=sql/MySqlClient
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentGroup)
#sql.MySqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubGroup)
#sql.MySqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubSubGroup)
#sql.MySqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.SqlClient.envVars)
#sql.MySqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.SqlClient.host)
#sql.MySqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.MySqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.MySqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.MySqlClient.inspectTemplateClasspathResources=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.password)
#sql.MySqlClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.MySqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.MySqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.MySqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.MySqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.MySqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.MySqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.MySqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.MySqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.MySqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.MySqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.MySqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.MySqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.MySqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.SqlClient.stopStartRestartConnection)
#sql.MySqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.MySqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.MySqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.SqlClient.tags)
#sql.MySqlClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.username)
#sql.MySqlClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.SqlClient.additionalOptions)
#sql.OracleClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.SqlClient.allowConcurrentDeployments)
#sql.OracleClient.allowConcurrentDeployments=true
# The OS-specific wrapper script that calls the SQL client
#sql.OracleClient.clientWrapperScript=sql/OracleClient
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentGroup)
#sql.OracleClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubGroup)
#sql.OracleClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubSubGroup)
#sql.OracleClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.SqlClient.envVars)
#sql.OracleClient.envVars=null
# Host upon which the container resides (inherited from: sql.SqlClient.host)
#sql.OracleClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.OracleClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.OracleClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.OracleClient.inspectTemplateClasspathResources=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.password)
#sql.OracleClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.OracleClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.OracleClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.OracleClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.OracleClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.OracleClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.OracleClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.OracleClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.OracleClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.OracleClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.OracleClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.OracleClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.OracleClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.OracleClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.SqlClient.stopStartRestartConnection)
#sql.OracleClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.OracleClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.OracleClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.SqlClient.tags)
#sql.OracleClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.username)
#sql.OracleClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.SqlClient.additionalOptions)
#sql.PostgreSqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.SqlClient.allowConcurrentDeployments)
#sql.PostgreSqlClient.allowConcurrentDeployments=true
# The OS-specific wrapper script that calls the SQL client
#sql.PostgreSqlClient.clientWrapperScript=sql/PostgreSqlClient
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentGroup)
#sql.PostgreSqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubGroup)
#sql.PostgreSqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubSubGroup)
#sql.PostgreSqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.SqlClient.envVars)
#sql.PostgreSqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.SqlClient.host)
#sql.PostgreSqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#sql.PostgreSqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#sql.PostgreSqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#sql.PostgreSqlClient.inspectTemplateClasspathResources=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.password)
#sql.PostgreSqlClient.password=null
# The port of the PostgreSQL server to connect to
#sql.PostgreSqlClient.port=5432
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#sql.PostgreSqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#sql.PostgreSqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#sql.PostgreSqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#sql.PostgreSqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#sql.PostgreSqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#sql.PostgreSqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#sql.PostgreSqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#sql.PostgreSqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#sql.PostgreSqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#sql.PostgreSqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#sql.PostgreSqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#sql.PostgreSqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#sql.PostgreSqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.SqlClient.stopStartRestartConnection)
#sql.PostgreSqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#sql.PostgreSqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#sql.PostgreSqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.SqlClient.tags)
#sql.PostgreSqlClient.tags=null
# Use localhost as the hostname to connect to
#sql.PostgreSqlClient.useLocalhost=true
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.username)
#sql.PostgreSqlClient.username=null
# SQL statement to test the connection to the PostgreSQL server
#sql.PostgreSqlClient_testConnection.testSqlStatement=SELECT 1;
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.Container.allowConcurrentDeployments)
#sql.SqlClient.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentGroup)
#sql.SqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentSubGroup)
#sql.SqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentSubSubGroup)
#sql.SqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.Container.envVars)
#sql.SqlClient.envVars=null
# Host upon which the container resides (inherited from: generic.Container.host)
#sql.SqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.Container.inspectClasspathResources)
#sql.SqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.Container.inspectScript)
#sql.SqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.inspectTemplateClasspathResources)
#sql.SqlClient.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.Container.restartClasspathResources)
#sql.SqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.Container.restartOrder)
#sql.SqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.Container.restartScript)
#sql.SqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.restartTemplateClasspathResources)
#sql.SqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.Container.restartWaitTime)
#sql.SqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.Container.startClasspathResources)
#sql.SqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.Container.startOrder)
#sql.SqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.Container.startScript)
#sql.SqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.startTemplateClasspathResources)
#sql.SqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.Container.startWaitTime)
#sql.SqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.Container.stopClasspathResources)
#sql.SqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.Container.stopOrder)
#sql.SqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.Container.stopScript)
#sql.SqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.Container.stopStartRestartConnection)
#sql.SqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.stopTemplateClasspathResources)
#sql.SqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.Container.stopWaitTime)
#sql.SqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.Container.tags)
#sql.SqlClient.tags=null
# The set of CI templates. (inherited from: generic.Folder.boundTemplates)
#sql.SqlScripts.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: generic.Folder.checksum)
#sql.SqlScripts.checksum=null
# Credentials of the URI. (inherited from: generic.Folder.credentials)
#sql.SqlScripts.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: generic.Folder.delimiters)
#sql.SqlScripts.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: generic.Folder.excludeFileNamesRegex)
#sql.SqlScripts.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: generic.Folder.fileEncodings)
#sql.SqlScripts.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: generic.Folder.fileUri)
#sql.SqlScripts.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: generic.Folder.isRescanned)
#sql.SqlScripts.isRescanned=false
# Placeholders detected in this artifact (inherited from: generic.Folder.placeholders)
#sql.SqlScripts.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: generic.Folder.preScannedPlaceholders)
#sql.SqlScripts.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: generic.Folder.proxySettings)
#sql.SqlScripts.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: generic.Folder.scanPlaceholders)
#sql.SqlScripts.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: generic.Folder.tags)
#sql.SqlScripts.tags=null
# Regular expression that matches file names of text files (inherited from: generic.Folder.textFileNamesRegex)
#sql.SqlScripts.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# Process failed tasks on CI according to the defined policy.
#stitch.BaseSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy.
#stitch.BaseSource.onSuccessPolicy=ARCHIVE
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onFailurePolicy)
#stitch.BaseSourceWithPath.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onSuccessPolicy)
#stitch.BaseSourceWithPath.onSuccessPolicy=ARCHIVE
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onFailurePolicy)
#stitch.ClasspathSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onSuccessPolicy)
#stitch.ClasspathSource.onSuccessPolicy=ARCHIVE
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSourceWithPath.onFailurePolicy)
#stitch.FolderSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSourceWithPath.onSuccessPolicy)
#stitch.FolderSource.onSuccessPolicy=ARCHIVE
# The base directory path to the folder containing stitch repositories. (inherited from: stitch.BaseSourceWithPath.path)
#stitch.FolderSource.path=null
# Filters shown change set branches.
#stitch.GitSource.branchRegex=.+
# Enables periodical automatic sync of branches for the source
#stitch.GitSource.branchSyncAutomatically=true
# Git repository master branch name (main or master).
#stitch.GitSource.masterBranchName=master
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onFailurePolicy)
#stitch.GitSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onSuccessPolicy)
#stitch.GitSource.onSuccessPolicy=ARCHIVE
# Enables periodical automatic syncs for the source
#stitch.GitSource.syncAutomatically=true
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSourceWithPath.onFailurePolicy)
#stitch.ZipSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSourceWithPath.onSuccessPolicy)
#stitch.ZipSource.onSuccessPolicy=ARCHIVE
# The base directory path to the folder containing stitch repositories. (inherited from: stitch.BaseSourceWithPath.path)
#stitch.ZipSource.path=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.api.ValidatedConfigurationItem.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.api.ValidatedConfigurationItem.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.core.Securable.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.core.Securable.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.Credentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.Credentials.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.HostCredentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.HostCredentials.instanceName=null
# Password (inherited from: credentials.HostCredentials.password)
#template.credentials.HostCredentials.password=null
# Username (inherited from: credentials.HostCredentials.username)
#template.credentials.HostCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.ProxyServer.childTemplates=null
# Proxy hostname. (inherited from: credentials.ProxyServer.hostname)
#template.credentials.ProxyServer.hostname=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.ProxyServer.instanceName=null
# Password (inherited from: credentials.ProxyServer.password)
#template.credentials.ProxyServer.password=null
# Proxy port. (inherited from: credentials.ProxyServer.port)
#template.credentials.ProxyServer.port=80
# Proxy protocol. (inherited from: credentials.ProxyServer.protocol)
#template.credentials.ProxyServer.protocol=HTTP
# User name (inherited from: credentials.ProxyServer.username)
#template.credentials.ProxyServer.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.ProxySettings.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.ProxySettings.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.SmbHostCredentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.SmbHostCredentials.instanceName=null
# Password (inherited from: credentials.SmbHostCredentials.password)
#template.credentials.SmbHostCredentials.password=null
# Username (inherited from: credentials.SmbHostCredentials.username)
#template.credentials.SmbHostCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.SshHostCredentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.SshHostCredentials.instanceName=null
# Passphrase (inherited from: credentials.SshHostCredentials.passphrase)
#template.credentials.SshHostCredentials.passphrase=null
# Password (inherited from: credentials.SshHostCredentials.password)
#template.credentials.SshHostCredentials.password=null
# Private Key File (inherited from: credentials.SshHostCredentials.privateKeyFile)
#template.credentials.SshHostCredentials.privateKeyFile=null
# Username (inherited from: credentials.SshHostCredentials.username)
#template.credentials.SshHostCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.UsernamePasswordCredentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.UsernamePasswordCredentials.instanceName=null
# Password (inherited from: credentials.UsernamePasswordCredentials.password)
#template.credentials.UsernamePasswordCredentials.password=null
# User name (inherited from: credentials.UsernamePasswordCredentials.username)
#template.credentials.UsernamePasswordCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.gcp.DefaultGcpCredentials.childTemplates=null
# Client email address of the service account (inherited from: credentials.gcp.DefaultGcpCredentials.clientEmail)
#template.credentials.gcp.DefaultGcpCredentials.clientEmail=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.gcp.DefaultGcpCredentials.instanceName=null
# Password (inherited from: credentials.gcp.DefaultGcpCredentials.password)
#template.credentials.gcp.DefaultGcpCredentials.password=null
# Project ID (inherited from: credentials.gcp.DefaultGcpCredentials.projectId)
#template.credentials.gcp.DefaultGcpCredentials.projectId=null
# Username (inherited from: credentials.gcp.DefaultGcpCredentials.username)
#template.credentials.gcp.DefaultGcpCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.gcp.GcpHostCredentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.gcp.GcpHostCredentials.instanceName=null
# Password (inherited from: credentials.gcp.GcpHostCredentials.password)
#template.credentials.gcp.GcpHostCredentials.password=null
# Username (inherited from: credentials.gcp.GcpHostCredentials.username)
#template.credentials.gcp.GcpHostCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.gcp.ServiceAccountFileGcpCredentials.childTemplates=null
# Service Account Credentials JSON File (inherited from: credentials.gcp.ServiceAccountFileGcpCredentials.credentialsFile)
#template.credentials.gcp.ServiceAccountFileGcpCredentials.credentialsFile=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.gcp.ServiceAccountFileGcpCredentials.instanceName=null
# Password (inherited from: credentials.gcp.ServiceAccountFileGcpCredentials.password)
#template.credentials.gcp.ServiceAccountFileGcpCredentials.password=null
# Username (inherited from: credentials.gcp.ServiceAccountFileGcpCredentials.username)
#template.credentials.gcp.ServiceAccountFileGcpCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.gcp.ServiceAccountJsonGcpCredentials.childTemplates=null
# Service Account Credentials JSON (inherited from: credentials.gcp.ServiceAccountJsonGcpCredentials.credentialsJson)
#template.credentials.gcp.ServiceAccountJsonGcpCredentials.credentialsJson=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.gcp.ServiceAccountJsonGcpCredentials.instanceName=null
# Password (inherited from: credentials.gcp.ServiceAccountJsonGcpCredentials.password)
#template.credentials.gcp.ServiceAccountJsonGcpCredentials.password=null
# Username (inherited from: credentials.gcp.ServiceAccountJsonGcpCredentials.username)
#template.credentials.gcp.ServiceAccountJsonGcpCredentials.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.childTemplates=null
# Client email address of the service account (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.clientEmail)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.clientEmail=null
# Client ID of the service account (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.clientId)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.clientId=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.instanceName=null
# Password (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.password)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.password=null
# Private key identifier for the service account (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.privateKeyId)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.privateKeyId=null
# RSA private key object for the service account in PKCS#8 format (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.privateKeyPkcs8)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.privateKeyPkcs8=null
# Project ID (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.projectId)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.projectId=null
# Scopes, comma separated list, for the APIs to be called (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.scopes)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.scopes=null
# The email of the user account to impersonate, if delegating domain-wide authority to the service account (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.serviceAccountUser)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.serviceAccountUser=null
# URI of the end point that provides tokens (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.tokenServerUri)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.tokenServerUri=null
# Username (inherited from: credentials.gcp.ServiceAccountPkcs8GcpCredentials.username)
#template.credentials.gcp.ServiceAccountPkcs8GcpCredentials.username=null
# ApiToken (inherited from: credentials.gcp.ServiceAccountTokenGcpCredentials.apiToken)
#template.credentials.gcp.ServiceAccountTokenGcpCredentials.apiToken=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.credentials.gcp.ServiceAccountTokenGcpCredentials.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.credentials.gcp.ServiceAccountTokenGcpCredentials.instanceName=null
# Password (inherited from: credentials.gcp.ServiceAccountTokenGcpCredentials.password)
#template.credentials.gcp.ServiceAccountTokenGcpCredentials.password=null
# Project ID (inherited from: credentials.gcp.ServiceAccountTokenGcpCredentials.projectId)
#template.credentials.gcp.ServiceAccountTokenGcpCredentials.projectId=null
# Username (inherited from: credentials.gcp.ServiceAccountTokenGcpCredentials.username)
#template.credentials.gcp.ServiceAccountTokenGcpCredentials.username=null
# Application name (inherited from: gcp.MetadataSshKeysProvider.applicationName)
#template.gcp.MetadataSshKeysProvider.applicationName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.gcp.MetadataSshKeysProvider.childTemplates=null
# Credentials for a GCP host connection (inherited from: gcp.MetadataSshKeysProvider.credentials)
#template.gcp.MetadataSshKeysProvider.credentials=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.gcp.MetadataSshKeysProvider.instanceName=null
# Zone name (inherited from: gcp.MetadataSshKeysProvider.zoneName)
#template.gcp.MetadataSshKeysProvider.zoneName=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.BaseGenericContainer.allowConcurrentDeployments)
#template.generic.BaseGenericContainer.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.generic.BaseGenericContainer.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentGroup)
#template.generic.BaseGenericContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentSubGroup)
#template.generic.BaseGenericContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.BaseGenericContainer.deploymentSubSubGroup)
#template.generic.BaseGenericContainer.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.BaseGenericContainer.envVars)
#template.generic.BaseGenericContainer.envVars=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.BaseGenericContainer.inspectClasspathResources)
#template.generic.BaseGenericContainer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.BaseGenericContainer.inspectScript)
#template.generic.BaseGenericContainer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.inspectTemplateClasspathResources)
#template.generic.BaseGenericContainer.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.generic.BaseGenericContainer.instanceName=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.BaseGenericContainer.restartClasspathResources)
#template.generic.BaseGenericContainer.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.BaseGenericContainer.restartOrder)
#template.generic.BaseGenericContainer.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.BaseGenericContainer.restartScript)
#template.generic.BaseGenericContainer.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.restartTemplateClasspathResources)
#template.generic.BaseGenericContainer.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.BaseGenericContainer.restartWaitTime)
#template.generic.BaseGenericContainer.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.BaseGenericContainer.startClasspathResources)
#template.generic.BaseGenericContainer.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.BaseGenericContainer.startOrder)
#template.generic.BaseGenericContainer.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.BaseGenericContainer.startScript)
#template.generic.BaseGenericContainer.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.startTemplateClasspathResources)
#template.generic.BaseGenericContainer.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.BaseGenericContainer.startWaitTime)
#template.generic.BaseGenericContainer.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.BaseGenericContainer.stopClasspathResources)
#template.generic.BaseGenericContainer.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.BaseGenericContainer.stopOrder)
#template.generic.BaseGenericContainer.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.BaseGenericContainer.stopScript)
#template.generic.BaseGenericContainer.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.BaseGenericContainer.stopStartRestartConnection)
#template.generic.BaseGenericContainer.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.BaseGenericContainer.stopTemplateClasspathResources)
#template.generic.BaseGenericContainer.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.BaseGenericContainer.stopWaitTime)
#template.generic.BaseGenericContainer.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.BaseGenericContainer.tags)
#template.generic.BaseGenericContainer.tags=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.Container.allowConcurrentDeployments)
#template.generic.Container.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.generic.Container.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentGroup)
#template.generic.Container.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentSubGroup)
#template.generic.Container.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentSubSubGroup)
#template.generic.Container.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.Container.envVars)
#template.generic.Container.envVars=null
# Host upon which the container resides (inherited from: generic.Container.host)
#template.generic.Container.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.Container.inspectClasspathResources)
#template.generic.Container.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.Container.inspectScript)
#template.generic.Container.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.inspectTemplateClasspathResources)
#template.generic.Container.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.generic.Container.instanceName=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.Container.restartClasspathResources)
#template.generic.Container.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.Container.restartOrder)
#template.generic.Container.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.Container.restartScript)
#template.generic.Container.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.restartTemplateClasspathResources)
#template.generic.Container.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.Container.restartWaitTime)
#template.generic.Container.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.Container.startClasspathResources)
#template.generic.Container.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.Container.startOrder)
#template.generic.Container.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.Container.startScript)
#template.generic.Container.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.startTemplateClasspathResources)
#template.generic.Container.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.Container.startWaitTime)
#template.generic.Container.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.Container.stopClasspathResources)
#template.generic.Container.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.Container.stopOrder)
#template.generic.Container.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.Container.stopScript)
#template.generic.Container.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.Container.stopStartRestartConnection)
#template.generic.Container.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.stopTemplateClasspathResources)
#template.generic.Container.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.Container.stopWaitTime)
#template.generic.Container.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.Container.tags)
#template.generic.Container.tags=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.generic.GenericContainer.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.generic.GenericContainer.instanceName=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.NestedContainer.allowConcurrentDeployments)
#template.generic.NestedContainer.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.generic.NestedContainer.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.NestedContainer.deploymentGroup)
#template.generic.NestedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.NestedContainer.deploymentSubGroup)
#template.generic.NestedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.NestedContainer.deploymentSubSubGroup)
#template.generic.NestedContainer.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.NestedContainer.envVars)
#template.generic.NestedContainer.envVars=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.NestedContainer.inspectClasspathResources)
#template.generic.NestedContainer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.NestedContainer.inspectScript)
#template.generic.NestedContainer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.NestedContainer.inspectTemplateClasspathResources)
#template.generic.NestedContainer.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.generic.NestedContainer.instanceName=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.NestedContainer.restartClasspathResources)
#template.generic.NestedContainer.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.NestedContainer.restartOrder)
#template.generic.NestedContainer.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: generic.NestedContainer.restartScript)
#template.generic.NestedContainer.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.NestedContainer.restartTemplateClasspathResources)
#template.generic.NestedContainer.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: generic.NestedContainer.restartWaitTime)
#template.generic.NestedContainer.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.NestedContainer.startClasspathResources)
#template.generic.NestedContainer.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.NestedContainer.startOrder)
#template.generic.NestedContainer.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: generic.NestedContainer.startScript)
#template.generic.NestedContainer.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.NestedContainer.startTemplateClasspathResources)
#template.generic.NestedContainer.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: generic.NestedContainer.startWaitTime)
#template.generic.NestedContainer.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.NestedContainer.stopClasspathResources)
#template.generic.NestedContainer.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.NestedContainer.stopOrder)
#template.generic.NestedContainer.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: generic.NestedContainer.stopScript)
#template.generic.NestedContainer.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.NestedContainer.stopStartRestartConnection)
#template.generic.NestedContainer.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.NestedContainer.stopTemplateClasspathResources)
#template.generic.NestedContainer.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: generic.NestedContainer.stopWaitTime)
#template.generic.NestedContainer.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.NestedContainer.tags)
#template.generic.NestedContainer.tags=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.internal.Root.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.internal.Root.instanceName=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: lock.Manager.allowConcurrentDeployments)
#template.lock.Manager.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.lock.Manager.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: lock.Manager.deploymentGroup)
#template.lock.Manager.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: lock.Manager.deploymentSubGroup)
#template.lock.Manager.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: lock.Manager.deploymentSubSubGroup)
#template.lock.Manager.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.lock.Manager.instanceName=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: lock.Manager.tags)
#template.lock.Manager.tags=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.lookup.LookupValueProvider.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.lookup.LookupValueProvider.instanceName=null
# Allow encrypted entries for non password properties. (inherited from: lookup.SimpleLookupValueProvider.allowEncryptedForNonPassword)
#template.lookup.SimpleLookupValueProvider.allowEncryptedForNonPassword=false
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.lookup.SimpleLookupValueProvider.childTemplates=null
# The encrypted lookup value entries (inherited from: lookup.SimpleLookupValueProvider.encryptedEntries)
#template.lookup.SimpleLookupValueProvider.encryptedEntries=null
# The lookup value entries (inherited from: lookup.SimpleLookupValueProvider.entries)
#template.lookup.SimpleLookupValueProvider.entries=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.lookup.SimpleLookupValueProvider.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.mail.SmtpServer.childTemplates=null
# Default from address to use for messages sent with this server. (inherited from: mail.SmtpServer.fromAddress)
#template.mail.SmtpServer.fromAddress=null
# SMTP host (inherited from: mail.SmtpServer.host)
#template.mail.SmtpServer.host=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.mail.SmtpServer.instanceName=null
# Password to authenticate with host (inherited from: mail.SmtpServer.password)
#template.mail.SmtpServer.password=null
# SMTP port (inherited from: mail.SmtpServer.port)
#template.mail.SmtpServer.port=25
# Refer to https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html for all properties that can be used. (inherited from: mail.SmtpServer.smtpProperties)
#template.mail.SmtpServer.smtpProperties=null
# The address to which a test mail is sent when using the 'Send Test Mail' control task. (inherited from: mail.SmtpServer.testAddress)
#template.mail.SmtpServer.testAddress=null
# Username to authenticate with host (inherited from: mail.SmtpServer.username)
#template.mail.SmtpServer.username=null
# Address of the host (inherited from: overthere.BaseSmbHost.address)
#template.overthere.BaseSmbHost.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.BaseSmbHost.allowConcurrentDeployments)
#template.overthere.BaseSmbHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.BaseSmbHost.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.BaseSmbHost.connectionTimeoutMillis)
#template.overthere.BaseSmbHost.connectionTimeoutMillis=120000
# Type of CIFS connection to create (inherited from: overthere.BaseSmbHost.connectionType)
#template.overthere.BaseSmbHost.connectionType=WINRM_INTERNAL
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.BaseSmbHost.copyStrategy)
#template.overthere.BaseSmbHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.BaseSmbHost.credentials)
#template.overthere.BaseSmbHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentGroup)
#template.overthere.BaseSmbHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentSubGroup)
#template.overthere.BaseSmbHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.BaseSmbHost.deploymentSubSubGroup)
#template.overthere.BaseSmbHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.BaseSmbHost.instanceName=null
# Jumpstation that should be used to reach this host (inherited from: overthere.BaseSmbHost.jumpstation)
#template.overthere.BaseSmbHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.BaseSmbHost.os)
#template.overthere.BaseSmbHost.os=WINDOWS
# Password to use for authentication (inherited from: overthere.BaseSmbHost.password)
#template.overthere.BaseSmbHost.password=null
# Port on which the Telnet or WinRM server runs (inherited from: overthere.BaseSmbHost.port)
#template.overthere.BaseSmbHost.port=null
# Protocol to use when connecting to this host (inherited from: overthere.BaseSmbHost.protocol)
#template.overthere.BaseSmbHost.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.BaseSmbHost.satellite)
#template.overthere.BaseSmbHost.satellite=null
# Executable shell program (inherited from: overthere.BaseSmbHost.shell)
#template.overthere.BaseSmbHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.BaseSmbHost.stagingDirectoryPath)
#template.overthere.BaseSmbHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.BaseSmbHost.tags)
#template.overthere.BaseSmbHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.BaseSmbHost.temporaryDirectoryPath)
#template.overthere.BaseSmbHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.BaseSmbHost.tmpDeleteOnDisconnect)
#template.overthere.BaseSmbHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.BaseSmbHost.tmpFileCreationRetries)
#template.overthere.BaseSmbHost.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.BaseSmbHost.username)
#template.overthere.BaseSmbHost.username=null
# Context used by the WinRM server (WINRM only) (inherited from: overthere.BaseSmbHost.winrmContext)
#template.overthere.BaseSmbHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server (inherited from: overthere.BaseSmbHost.winrmEnableHttps)
#template.overthere.BaseSmbHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmEnvelopSize)
#template.overthere.BaseSmbHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmHttpsCertificateTrustStrategy)
#template.overthere.BaseSmbHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmHttpsHostnameVerificationStrategy)
#template.overthere.BaseSmbHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmKerberosAddPortToSpn)
#template.overthere.BaseSmbHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmKerberosDebug)
#template.overthere.BaseSmbHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only) (inherited from: overthere.BaseSmbHost.winrmKerberosUseHttpSpn)
#template.overthere.BaseSmbHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only) (inherited from: overthere.BaseSmbHost.winrmLocale)
#template.overthere.BaseSmbHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format (inherited from: overthere.BaseSmbHost.winrmTimeout)
#template.overthere.BaseSmbHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsAllowDelegate)
#template.overthere.BaseSmbHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsCompression)
#template.overthere.BaseSmbHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsNoecho)
#template.overthere.BaseSmbHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsNoprofile)
#template.overthere.BaseSmbHost.winrsNoprofile=false
# Host on which to run the winrs command. Defaults to localhost. (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsProxy)
#template.overthere.BaseSmbHost.winrsProxy=null
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only) (inherited from: overthere.BaseSmbHost.winrsUnencrypted)
#template.overthere.BaseSmbHost.winrsUnencrypted=false
# Address of the host (inherited from: overthere.CifsHost.address)
#template.overthere.CifsHost.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.CifsHost.allowConcurrentDeployments)
#template.overthere.CifsHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.CifsHost.childTemplates=null
# Port on which the CIFS server runs (inherited from: overthere.CifsHost.cifsPort)
#template.overthere.CifsHost.cifsPort=445
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.CifsHost.connectionTimeoutMillis)
#template.overthere.CifsHost.connectionTimeoutMillis=120000
# Type of CIFS connection to create (inherited from: overthere.CifsHost.connectionType)
#template.overthere.CifsHost.connectionType=WINRM_INTERNAL
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.CifsHost.copyStrategy)
#template.overthere.CifsHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.CifsHost.credentials)
#template.overthere.CifsHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.CifsHost.deploymentGroup)
#template.overthere.CifsHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.CifsHost.deploymentSubGroup)
#template.overthere.CifsHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.CifsHost.deploymentSubSubGroup)
#template.overthere.CifsHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.CifsHost.instanceName=null
# Jumpstation that should be used to reach this host (inherited from: overthere.CifsHost.jumpstation)
#template.overthere.CifsHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.CifsHost.os)
#template.overthere.CifsHost.os=WINDOWS
# Password to use for authentication (inherited from: overthere.CifsHost.password)
#template.overthere.CifsHost.password=null
# Mapping from Windows paths to Windows share names, e.g. C:\IBM\WebSphere -> WebSphereShare (inherited from: overthere.CifsHost.pathShareMappings)
#template.overthere.CifsHost.pathShareMappings=null
# Port on which the Telnet or WinRM server runs (inherited from: overthere.CifsHost.port)
#template.overthere.CifsHost.port=null
# Protocol to use when connecting to this host (inherited from: overthere.CifsHost.protocol)
#template.overthere.CifsHost.protocol=cifs
# Instance of xl-satellite that can manage this host. (inherited from: overthere.CifsHost.satellite)
#template.overthere.CifsHost.satellite=null
# Executable shell program (inherited from: overthere.CifsHost.shell)
#template.overthere.CifsHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.CifsHost.stagingDirectoryPath)
#template.overthere.CifsHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.CifsHost.tags)
#template.overthere.CifsHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.CifsHost.temporaryDirectoryPath)
#template.overthere.CifsHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.CifsHost.tmpDeleteOnDisconnect)
#template.overthere.CifsHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.CifsHost.tmpFileCreationRetries)
#template.overthere.CifsHost.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.CifsHost.username)
#template.overthere.CifsHost.username=null
# Context used by the WinRM server (WINRM only) (inherited from: overthere.CifsHost.winrmContext)
#template.overthere.CifsHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server (inherited from: overthere.CifsHost.winrmEnableHttps)
#template.overthere.CifsHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only) (inherited from: overthere.CifsHost.winrmEnvelopSize)
#template.overthere.CifsHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.CifsHost.winrmHttpsCertificateTrustStrategy)
#template.overthere.CifsHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.CifsHost.winrmHttpsHostnameVerificationStrategy)
#template.overthere.CifsHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only) (inherited from: overthere.CifsHost.winrmKerberosAddPortToSpn)
#template.overthere.CifsHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only) (inherited from: overthere.CifsHost.winrmKerberosDebug)
#template.overthere.CifsHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only) (inherited from: overthere.CifsHost.winrmKerberosUseHttpSpn)
#template.overthere.CifsHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only) (inherited from: overthere.CifsHost.winrmLocale)
#template.overthere.CifsHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format (inherited from: overthere.CifsHost.winrmTimeout)
#template.overthere.CifsHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only) (inherited from: overthere.CifsHost.winrsAllowDelegate)
#template.overthere.CifsHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only) (inherited from: overthere.CifsHost.winrsCompression)
#template.overthere.CifsHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only) (inherited from: overthere.CifsHost.winrsNoecho)
#template.overthere.CifsHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only) (inherited from: overthere.CifsHost.winrsNoprofile)
#template.overthere.CifsHost.winrsNoprofile=false
# Host on which to run the winrs command. Defaults to localhost. (WINRM_NATIVE only) (inherited from: overthere.CifsHost.winrsProxy)
#template.overthere.CifsHost.winrsProxy=null
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only) (inherited from: overthere.CifsHost.winrsUnencrypted)
#template.overthere.CifsHost.winrsUnencrypted=false
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Host.allowConcurrentDeployments)
#template.overthere.Host.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.Host.childTemplates=null
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Host.copyStrategy)
#template.overthere.Host.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentGroup)
#template.overthere.Host.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubGroup)
#template.overthere.Host.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubSubGroup)
#template.overthere.Host.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.Host.instanceName=null
# Operating system the host runs (inherited from: overthere.Host.os)
#template.overthere.Host.os=null
# Protocol to use when connecting to this host (inherited from: overthere.Host.protocol)
#template.overthere.Host.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Host.satellite)
#template.overthere.Host.satellite=null
# Executable shell program (inherited from: overthere.Host.shell)
#template.overthere.Host.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Host.stagingDirectoryPath)
#template.overthere.Host.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Host.tags)
#template.overthere.Host.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.Host.temporaryDirectoryPath)
#template.overthere.Host.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#template.overthere.Host.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#template.overthere.Host.tmpFileCreationRetries=1000
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.HostContainer.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.HostContainer.instanceName=null
# Address of the proxy server (inherited from: overthere.HttpProxy.address)
#template.overthere.HttpProxy.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.HttpProxy.allowConcurrentDeployments)
#template.overthere.HttpProxy.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.HttpProxy.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.HttpProxy.connectionTimeoutMillis)
#template.overthere.HttpProxy.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.HttpProxy.copyStrategy)
#template.overthere.HttpProxy.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.HttpProxy.deploymentGroup)
#template.overthere.HttpProxy.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.HttpProxy.deploymentSubGroup)
#template.overthere.HttpProxy.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.HttpProxy.deploymentSubSubGroup)
#template.overthere.HttpProxy.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.HttpProxy.instanceName=null
# Jumpstations and proxies are assumed to run on UNIX. XLD won't access files or run commmands on them anyway (inherited from: overthere.HttpProxy.os)
#template.overthere.HttpProxy.os=UNIX
# Port on which the proxy server runs (inherited from: overthere.HttpProxy.port)
#template.overthere.HttpProxy.port=8080
# Protocol to use when connecting to this host (inherited from: overthere.HttpProxy.protocol)
#template.overthere.HttpProxy.protocol=proxy
# Proxy Type (inherited from: overthere.HttpProxy.proxyType)
#template.overthere.HttpProxy.proxyType=HTTP
# Instance of xl-satellite that can manage this host. (inherited from: overthere.HttpProxy.satellite)
#template.overthere.HttpProxy.satellite=null
# Executable shell program (inherited from: overthere.HttpProxy.shell)
#template.overthere.HttpProxy.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.HttpProxy.stagingDirectoryPath)
#template.overthere.HttpProxy.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.HttpProxy.tags)
#template.overthere.HttpProxy.tags=null
# Temporary directory is not needed for jumpstations and proxies (inherited from: overthere.HttpProxy.temporaryDirectoryPath)
#template.overthere.HttpProxy.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.HttpProxy.tmpDeleteOnDisconnect)
#template.overthere.HttpProxy.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.HttpProxy.tmpFileCreationRetries)
#template.overthere.HttpProxy.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Jumpstation.allowConcurrentDeployments)
#template.overthere.Jumpstation.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.Jumpstation.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.Jumpstation.connectionTimeoutMillis)
#template.overthere.Jumpstation.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Jumpstation.copyStrategy)
#template.overthere.Jumpstation.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentGroup)
#template.overthere.Jumpstation.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentSubGroup)
#template.overthere.Jumpstation.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Jumpstation.deploymentSubSubGroup)
#template.overthere.Jumpstation.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.Jumpstation.instanceName=null
# Jumpstations and proxies are assumed to run on UNIX. XLD won't access files or run commmands on them anyway (inherited from: overthere.Jumpstation.os)
#template.overthere.Jumpstation.os=UNIX
# Protocol to use when connecting to this host (inherited from: overthere.Jumpstation.protocol)
#template.overthere.Jumpstation.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Jumpstation.satellite)
#template.overthere.Jumpstation.satellite=null
# Executable shell program (inherited from: overthere.Jumpstation.shell)
#template.overthere.Jumpstation.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Jumpstation.stagingDirectoryPath)
#template.overthere.Jumpstation.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Jumpstation.tags)
#template.overthere.Jumpstation.tags=null
# Temporary directory is not needed for jumpstations and proxies (inherited from: overthere.Jumpstation.temporaryDirectoryPath)
#template.overthere.Jumpstation.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Jumpstation.tmpDeleteOnDisconnect)
#template.overthere.Jumpstation.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Jumpstation.tmpFileCreationRetries)
#template.overthere.Jumpstation.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.LocalHost.allowConcurrentDeployments)
#template.overthere.LocalHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.LocalHost.childTemplates=null
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.LocalHost.copyStrategy)
#template.overthere.LocalHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.LocalHost.deploymentGroup)
#template.overthere.LocalHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.LocalHost.deploymentSubGroup)
#template.overthere.LocalHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.LocalHost.deploymentSubSubGroup)
#template.overthere.LocalHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.LocalHost.instanceName=null
# Operating system the host runs (inherited from: overthere.LocalHost.os)
#template.overthere.LocalHost.os=null
# Protocol to use when connecting to this host (inherited from: overthere.LocalHost.protocol)
#template.overthere.LocalHost.protocol=local
# Instance of xl-satellite that can manage this host. (inherited from: overthere.LocalHost.satellite)
#template.overthere.LocalHost.satellite=null
# Executable shell program (inherited from: overthere.LocalHost.shell)
#template.overthere.LocalHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.LocalHost.stagingDirectoryPath)
#template.overthere.LocalHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.LocalHost.tags)
#template.overthere.LocalHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.LocalHost.temporaryDirectoryPath)
#template.overthere.LocalHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.LocalHost.tmpDeleteOnDisconnect)
#template.overthere.LocalHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.LocalHost.tmpFileCreationRetries)
#template.overthere.LocalHost.tmpFileCreationRetries=1000
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.RemoteHost.allowConcurrentDeployments)
#template.overthere.RemoteHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.RemoteHost.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.RemoteHost.connectionTimeoutMillis)
#template.overthere.RemoteHost.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.RemoteHost.copyStrategy)
#template.overthere.RemoteHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentGroup)
#template.overthere.RemoteHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubGroup)
#template.overthere.RemoteHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.RemoteHost.deploymentSubSubGroup)
#template.overthere.RemoteHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.RemoteHost.instanceName=null
# Jumpstation that should be used to reach this host (inherited from: overthere.RemoteHost.jumpstation)
#template.overthere.RemoteHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.RemoteHost.os)
#template.overthere.RemoteHost.os=null
# Protocol to use when connecting to this host (inherited from: overthere.RemoteHost.protocol)
#template.overthere.RemoteHost.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.RemoteHost.satellite)
#template.overthere.RemoteHost.satellite=null
# Executable shell program (inherited from: overthere.RemoteHost.shell)
#template.overthere.RemoteHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.RemoteHost.stagingDirectoryPath)
#template.overthere.RemoteHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.RemoteHost.tags)
#template.overthere.RemoteHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.RemoteHost.temporaryDirectoryPath)
#template.overthere.RemoteHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.RemoteHost.tmpDeleteOnDisconnect)
#template.overthere.RemoteHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.RemoteHost.tmpFileCreationRetries)
#template.overthere.RemoteHost.tmpFileCreationRetries=1000
# Address of the host (inherited from: overthere.SmbHost.address)
#template.overthere.SmbHost.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.SmbHost.allowConcurrentDeployments)
#template.overthere.SmbHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.SmbHost.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.SmbHost.connectionTimeoutMillis)
#template.overthere.SmbHost.connectionTimeoutMillis=120000
# Type of CIFS connection to create (inherited from: overthere.SmbHost.connectionType)
#template.overthere.SmbHost.connectionType=WINRM_INTERNAL
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.SmbHost.copyStrategy)
#template.overthere.SmbHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.SmbHost.credentials)
#template.overthere.SmbHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SmbHost.deploymentGroup)
#template.overthere.SmbHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SmbHost.deploymentSubGroup)
#template.overthere.SmbHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SmbHost.deploymentSubSubGroup)
#template.overthere.SmbHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.SmbHost.instanceName=null
# Jumpstation that should be used to reach this host (inherited from: overthere.SmbHost.jumpstation)
#template.overthere.SmbHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.SmbHost.os)
#template.overthere.SmbHost.os=WINDOWS
# Password to use for authentication (inherited from: overthere.SmbHost.password)
#template.overthere.SmbHost.password=null
# Mapping from Windows paths to Windows share names, e.g. C:\IBM\WebSphere -> WebSphereShare (inherited from: overthere.SmbHost.pathShareMappings)
#template.overthere.SmbHost.pathShareMappings=null
# Port on which the Telnet or WinRM server runs (inherited from: overthere.SmbHost.port)
#template.overthere.SmbHost.port=null
# Protocol to use when connecting to this host (inherited from: overthere.SmbHost.protocol)
#template.overthere.SmbHost.protocol=smb
# Instance of xl-satellite that can manage this host. (inherited from: overthere.SmbHost.satellite)
#template.overthere.SmbHost.satellite=null
# Executable shell program (inherited from: overthere.SmbHost.shell)
#template.overthere.SmbHost.shell=null
# Port on which the SMB2 server runs (inherited from: overthere.SmbHost.smbPort)
#template.overthere.SmbHost.smbPort=445
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.SmbHost.stagingDirectoryPath)
#template.overthere.SmbHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.SmbHost.tags)
#template.overthere.SmbHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.SmbHost.temporaryDirectoryPath)
#template.overthere.SmbHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.SmbHost.tmpDeleteOnDisconnect)
#template.overthere.SmbHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.SmbHost.tmpFileCreationRetries)
#template.overthere.SmbHost.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.SmbHost.username)
#template.overthere.SmbHost.username=null
# Context used by the WinRM server (WINRM only) (inherited from: overthere.SmbHost.winrmContext)
#template.overthere.SmbHost.winrmContext=/wsman
# Enable SSL communication to the WinRM server (inherited from: overthere.SmbHost.winrmEnableHttps)
#template.overthere.SmbHost.winrmEnableHttps=false
# Envelop size for WinRM messages (WINRM only) (inherited from: overthere.SmbHost.winrmEnvelopSize)
#template.overthere.SmbHost.winrmEnvelopSize=153600
# HTTPS certifiacte trust strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.SmbHost.winrmHttpsCertificateTrustStrategy)
#template.overthere.SmbHost.winrmHttpsCertificateTrustStrategy=STRICT
# HTTPS host name verification strategy for WinRM over HTTPS (WINRM_INTERNAL only) (inherited from: overthere.SmbHost.winrmHttpsHostnameVerificationStrategy)
#template.overthere.SmbHost.winrmHttpsHostnameVerificationStrategy=STRICT
# Add the port number (e.g. 5985) to the service principal name (SPN) for which a Kerberos ticket is requested (WINRM_INTERNAL only) (inherited from: overthere.SmbHost.winrmKerberosAddPortToSpn)
#template.overthere.SmbHost.winrmKerberosAddPortToSpn=false
# Enable Kerberos debug messages (WINRM only) (inherited from: overthere.SmbHost.winrmKerberosDebug)
#template.overthere.SmbHost.winrmKerberosDebug=false
# Use the HTTP protocol in the service principal name (SPN) for which a Kerberos ticket is requested, instead of the default WSMAN protocol (WINRM_INTERNAL only) (inherited from: overthere.SmbHost.winrmKerberosUseHttpSpn)
#template.overthere.SmbHost.winrmKerberosUseHttpSpn=false
# Locale to use for WinRM messages (WINRM only) (inherited from: overthere.SmbHost.winrmLocale)
#template.overthere.SmbHost.winrmLocale=en-US
# Timeout to use for WinRM messages in XML schema duration format (inherited from: overthere.SmbHost.winrmTimeout)
#template.overthere.SmbHost.winrmTimeout=PT60.000S
# Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint (WINRM_NATIVE only) (inherited from: overthere.SmbHost.winrsAllowDelegate)
#template.overthere.SmbHost.winrsAllowDelegate=false
# Turn on compression. Older installations on remote machines may not support compression so it is off by default (WINRM_NATIVE only) (inherited from: overthere.SmbHost.winrsCompression)
#template.overthere.SmbHost.winrsCompression=false
# Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally (WINRM_NATIVE only) (inherited from: overthere.SmbHost.winrsNoecho)
#template.overthere.SmbHost.winrsNoecho=false
# Specifies that the user's profile should not be loaded. By default the server will attempt to load the user profile. If the remote user is not a local administrator on the target system then this option will be required (the default willresult in error) (WINRM_NATIVE only) (inherited from: overthere.SmbHost.winrsNoprofile)
#template.overthere.SmbHost.winrsNoprofile=false
# Host on which to run the winrs command. Defaults to localhost. (WINRM_NATIVE only) (inherited from: overthere.SmbHost.winrsProxy)
#template.overthere.SmbHost.winrsProxy=null
# Disable encryption. Requires the remote host to have been configured to allow that (WINRM_NATIVE only) (inherited from: overthere.SmbHost.winrsUnencrypted)
#template.overthere.SmbHost.winrsUnencrypted=false
# Address of the host (inherited from: overthere.SshHost.address)
#template.overthere.SshHost.address=null
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command (inherited from: overthere.SshHost.allocateDefaultPty)
#template.overthere.SshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0 (inherited from: overthere.SshHost.allocatePty)
#template.overthere.SshHost.allocatePty=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.SshHost.allowConcurrentDeployments)
#template.overthere.SshHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.SshHost.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.SshHost.connectionTimeoutMillis)
#template.overthere.SshHost.connectionTimeoutMillis=120000
# Type of SSH connection to create (inherited from: overthere.SshHost.connectionType)
#template.overthere.SshHost.connectionType=SFTP
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.SshHost.copyStrategy)
#template.overthere.SshHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.SshHost.credentials)
#template.overthere.SshHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SshHost.deploymentGroup)
#template.overthere.SshHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SshHost.deploymentSubGroup)
#template.overthere.SshHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SshHost.deploymentSubSubGroup)
#template.overthere.SshHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.SshHost.instanceName=null
# Regular expression to look for in keyboard-interactive authentication before sending the password (inherited from: overthere.SshHost.interactiveKeyboardAuthRegex)
#template.overthere.SshHost.interactiveKeyboardAuthRegex=.*Password:[ ]?
# Jumpstation that should be used to reach this host (inherited from: overthere.SshHost.jumpstation)
#template.overthere.SshHost.jumpstation=null
# Operating system the host runs (inherited from: overthere.SshHost.os)
#template.overthere.SshHost.os=null
# Optional passphrase for the private key in the private key file (inherited from: overthere.SshHost.passphrase)
#template.overthere.SshHost.passphrase=null
# Password to use for authentication (inherited from: overthere.SshHost.password)
#template.overthere.SshHost.password=null
# Port on which the SSH server runs (inherited from: overthere.SshHost.port)
#template.overthere.SshHost.port=22
# Private key file to use for authentication (inherited from: overthere.SshHost.privateKeyFile)
#template.overthere.SshHost.privateKeyFile=null
# Protocol to use when connecting to this host (inherited from: overthere.SshHost.protocol)
#template.overthere.SshHost.protocol=ssh
# Instance of xl-satellite that can manage this host. (inherited from: overthere.SshHost.satellite)
#template.overthere.SshHost.satellite=null
# Executable shell program (inherited from: overthere.SshHost.shell)
#template.overthere.SshHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.SshHost.stagingDirectoryPath)
#template.overthere.SshHost.stagingDirectoryPath=null
# Su command to prefix to the original command. The placeholder {0} is replaced with the sudoUsername (inherited from: overthere.SshHost.suCommandPrefix)
#template.overthere.SshHost.suCommandPrefix=su - {0} -c
# If true, permissions are explicitly changed with chmod -R go+rX after uploading a file or directory (inherited from: overthere.SshHost.suOverrideUmask)
#template.overthere.SshHost.suOverrideUmask=true
# Password of user to su to when accessing files or executing commands (inherited from: overthere.SshHost.suPassword)
#template.overthere.SshHost.suPassword=null
# Regular expression to look for before sending the password (inherited from: overthere.SshHost.suPasswordPromptRegex)
#template.overthere.SshHost.suPasswordPromptRegex=.*[Pp]assword.*:
# If true, files are copied from the connection temporary directory using the -p flag to the cp command (inherited from: overthere.SshHost.suPreserveAttributesOnCopyFromTempFile)
#template.overthere.SshHost.suPreserveAttributesOnCopyFromTempFile=true
# If true, files are copied to the connection temporary directory using the -p flag to the cp command (inherited from: overthere.SshHost.suPreserveAttributesOnCopyToTempFile)
#template.overthere.SshHost.suPreserveAttributesOnCopyToTempFile=true
# If true, the original command is quoted when it is prefixed with suCommandPrefix (inherited from: overthere.SshHost.suQuoteCommand)
#template.overthere.SshHost.suQuoteCommand=true
# Username to su to when accessing files or executing commands (inherited from: overthere.SshHost.suUsername)
#template.overthere.SshHost.suUsername=null
# Sudo command to prefix to the original command. The placeholder {0} is replaced with the sudoUsername (inherited from: overthere.SshHost.sudoCommandPrefix)
#template.overthere.SshHost.sudoCommandPrefix=sudo -u {0}
# If true, permissions are explicitly changed with chmod -R go+rX after uploading a file or directory (inherited from: overthere.SshHost.sudoOverrideUmask)
#template.overthere.SshHost.sudoOverrideUmask=true
# Regular expression to look for in interactive sudo before sending the password (inherited from: overthere.SshHost.sudoPasswordPromptRegex)
#template.overthere.SshHost.sudoPasswordPromptRegex=.*[Pp]assword.*:
# If true, files are copied from the connection temporary directory using the -p flag to the cp command (inherited from: overthere.SshHost.sudoPreserveAttributesOnCopyFromTempFile)
#template.overthere.SshHost.sudoPreserveAttributesOnCopyFromTempFile=true
# If true, files are copied to the connection temporary directory using the -p flag to the cp command (inherited from: overthere.SshHost.sudoPreserveAttributesOnCopyToTempFile)
#template.overthere.SshHost.sudoPreserveAttributesOnCopyToTempFile=true
# If true, the original command is quoted when it is prefixed with sudoCommandPrefix (inherited from: overthere.SshHost.sudoQuoteCommand)
#template.overthere.SshHost.sudoQuoteCommand=false
# Username to sudo to when accessing files or executing commands (inherited from: overthere.SshHost.sudoUsername)
#template.overthere.SshHost.sudoUsername=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.SshHost.tags)
#template.overthere.SshHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.SshHost.temporaryDirectoryPath)
#template.overthere.SshHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.SshHost.tmpDeleteOnDisconnect)
#template.overthere.SshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.SshHost.tmpFileCreationRetries)
#template.overthere.SshHost.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.SshHost.username)
#template.overthere.SshHost.username=null
# Address of the host (inherited from: overthere.SshJumpstation.address)
#template.overthere.SshJumpstation.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.SshJumpstation.allowConcurrentDeployments)
#template.overthere.SshJumpstation.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.SshJumpstation.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.SshJumpstation.connectionTimeoutMillis)
#template.overthere.SshJumpstation.connectionTimeoutMillis=120000
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.SshJumpstation.copyStrategy)
#template.overthere.SshJumpstation.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.SshJumpstation.credentials)
#template.overthere.SshJumpstation.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SshJumpstation.deploymentGroup)
#template.overthere.SshJumpstation.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SshJumpstation.deploymentSubGroup)
#template.overthere.SshJumpstation.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.SshJumpstation.deploymentSubSubGroup)
#template.overthere.SshJumpstation.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.SshJumpstation.instanceName=null
# Regular expression to look for in keyboard-interactive authentication before sending the password (inherited from: overthere.SshJumpstation.interactiveKeyboardAuthRegex)
#template.overthere.SshJumpstation.interactiveKeyboardAuthRegex=.*Password:[ ]?
# Jumpstation that should be used to reach this host (inherited from: overthere.SshJumpstation.jumpstation)
#template.overthere.SshJumpstation.jumpstation=null
# Jumpstations and proxies are assumed to run on UNIX. XLD won't access files or run commmands on them anyway (inherited from: overthere.SshJumpstation.os)
#template.overthere.SshJumpstation.os=UNIX
# Optional passphrase for the private key in the private key file (inherited from: overthere.SshJumpstation.passphrase)
#template.overthere.SshJumpstation.passphrase=null
# Password to use for authentication (inherited from: overthere.SshJumpstation.password)
#template.overthere.SshJumpstation.password=null
# Port on which the SSH server runs (inherited from: overthere.SshJumpstation.port)
#template.overthere.SshJumpstation.port=22
# Port from where to start looking for freely available ports to use as the local part of an SSH port forward (inherited from: overthere.SshJumpstation.portAllocationRangeStart)
#template.overthere.SshJumpstation.portAllocationRangeStart=1025
# Private key file to use for authentication (inherited from: overthere.SshJumpstation.privateKeyFile)
#template.overthere.SshJumpstation.privateKeyFile=null
# Protocol to use when connecting to this host (inherited from: overthere.SshJumpstation.protocol)
#template.overthere.SshJumpstation.protocol=ssh-jumpstation
# Instance of xl-satellite that can manage this host. (inherited from: overthere.SshJumpstation.satellite)
#template.overthere.SshJumpstation.satellite=null
# Executable shell program (inherited from: overthere.SshJumpstation.shell)
#template.overthere.SshJumpstation.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.SshJumpstation.stagingDirectoryPath)
#template.overthere.SshJumpstation.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.SshJumpstation.tags)
#template.overthere.SshJumpstation.tags=null
# Temporary directory is not needed for jumpstations and proxies (inherited from: overthere.SshJumpstation.temporaryDirectoryPath)
#template.overthere.SshJumpstation.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.SshJumpstation.tmpDeleteOnDisconnect)
#template.overthere.SshJumpstation.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.SshJumpstation.tmpFileCreationRetries)
#template.overthere.SshJumpstation.tmpFileCreationRetries=1000
# Username to connect with (inherited from: overthere.SshJumpstation.username)
#template.overthere.SshJumpstation.username=null
# Address of the host (inherited from: overthere.gcp.MetadataSshHost.address)
#template.overthere.gcp.MetadataSshHost.address=null
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command (inherited from: overthere.gcp.MetadataSshHost.allocateDefaultPty)
#template.overthere.gcp.MetadataSshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0 (inherited from: overthere.gcp.MetadataSshHost.allocatePty)
#template.overthere.gcp.MetadataSshHost.allocatePty=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.gcp.MetadataSshHost.allowConcurrentDeployments)
#template.overthere.gcp.MetadataSshHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.gcp.MetadataSshHost.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.gcp.MetadataSshHost.connectionTimeoutMillis)
#template.overthere.gcp.MetadataSshHost.connectionTimeoutMillis=120000
# Type of SSH connection to create (inherited from: overthere.gcp.MetadataSshHost.connectionType)
#template.overthere.gcp.MetadataSshHost.connectionType=SFTP
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.gcp.MetadataSshHost.copyStrategy)
#template.overthere.gcp.MetadataSshHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.gcp.MetadataSshHost.deploymentGroup)
#template.overthere.gcp.MetadataSshHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.gcp.MetadataSshHost.deploymentSubGroup)
#template.overthere.gcp.MetadataSshHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.gcp.MetadataSshHost.deploymentSubSubGroup)
#template.overthere.gcp.MetadataSshHost.deploymentSubSubGroup=null
# Gcp Key Management Type (inherited from: overthere.gcp.MetadataSshHost.gcpKeyManagementType)
#template.overthere.gcp.MetadataSshHost.gcpKeyManagementType=Metadata
# Instance ID. Set this if metadata needs to be set on instance level (inherited from: overthere.gcp.MetadataSshHost.instanceId)
#template.overthere.gcp.MetadataSshHost.instanceId=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.gcp.MetadataSshHost.instanceName=null
# Jumpstation that should be used to reach this host (inherited from: overthere.gcp.MetadataSshHost.jumpstation)
#template.overthere.gcp.MetadataSshHost.jumpstation=null
# Key expiry time defined in milliseconds, default value is 300,000ms (5 minutes). If generated key expires new one will be internally created and installed via OsLogin. (inherited from: overthere.gcp.MetadataSshHost.keyExpiryTimeMillis)
#template.overthere.gcp.MetadataSshHost.keyExpiryTimeMillis=null
# Key size, default is 1024. (inherited from: overthere.gcp.MetadataSshHost.keySize)
#template.overthere.gcp.MetadataSshHost.keySize=null
# Metadata SSH Key provider settings (inherited from: overthere.gcp.MetadataSshHost.metadataSshKeysProvider)
#template.overthere.gcp.MetadataSshHost.metadataSshKeysProvider=null
# Operating system the host runs (inherited from: overthere.gcp.MetadataSshHost.os)
#template.overthere.gcp.MetadataSshHost.os=null
# Port on which the SSH server runs (inherited from: overthere.gcp.MetadataSshHost.port)
#template.overthere.gcp.MetadataSshHost.port=22
# Protocol to use when connecting to this host (inherited from: overthere.gcp.MetadataSshHost.protocol)
#template.overthere.gcp.MetadataSshHost.protocol=gcp_ssh
# Retry period between each retry to open the connection. Default value is 1000 ms. (inherited from: overthere.gcp.MetadataSshHost.retryCount)
#template.overthere.gcp.MetadataSshHost.retryCount=null
# Retry period between each retry to open the connection. Default value is 1000 ms. (inherited from: overthere.gcp.MetadataSshHost.retryPeriodMillis)
#template.overthere.gcp.MetadataSshHost.retryPeriodMillis=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.gcp.MetadataSshHost.satellite)
#template.overthere.gcp.MetadataSshHost.satellite=null
# Executable shell program (inherited from: overthere.gcp.MetadataSshHost.shell)
#template.overthere.gcp.MetadataSshHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.gcp.MetadataSshHost.stagingDirectoryPath)
#template.overthere.gcp.MetadataSshHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.gcp.MetadataSshHost.tags)
#template.overthere.gcp.MetadataSshHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.gcp.MetadataSshHost.temporaryDirectoryPath)
#template.overthere.gcp.MetadataSshHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.gcp.MetadataSshHost.tmpDeleteOnDisconnect)
#template.overthere.gcp.MetadataSshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.gcp.MetadataSshHost.tmpFileCreationRetries)
#template.overthere.gcp.MetadataSshHost.tmpFileCreationRetries=1000
# Address of the host (inherited from: overthere.gcp.OsLoginSshHost.address)
#template.overthere.gcp.OsLoginSshHost.address=null
# If true, a default PTY (dummy:80:24:0:0) is allocated when executing a command (inherited from: overthere.gcp.OsLoginSshHost.allocateDefaultPty)
#template.overthere.gcp.OsLoginSshHost.allocateDefaultPty=false
# Specification for the PTY to be allocated when executing a command. The format is TERM:COLS:ROWS:WIDTH:HEIGHT, e.g. xterm:80:24:0:0 (inherited from: overthere.gcp.OsLoginSshHost.allocatePty)
#template.overthere.gcp.OsLoginSshHost.allocatePty=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.gcp.OsLoginSshHost.allowConcurrentDeployments)
#template.overthere.gcp.OsLoginSshHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.overthere.gcp.OsLoginSshHost.childTemplates=null
# Number of milliseconds Overthere waits for a connection to a remote host to be established (inherited from: overthere.gcp.OsLoginSshHost.connectionTimeoutMillis)
#template.overthere.gcp.OsLoginSshHost.connectionTimeoutMillis=120000
# Type of SSH connection to create (inherited from: overthere.gcp.OsLoginSshHost.connectionType)
#template.overthere.gcp.OsLoginSshHost.connectionType=SFTP
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.gcp.OsLoginSshHost.copyStrategy)
#template.overthere.gcp.OsLoginSshHost.copyStrategy=null
# Credentials for a remote host connection (inherited from: overthere.gcp.OsLoginSshHost.credentials)
#template.overthere.gcp.OsLoginSshHost.credentials=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.gcp.OsLoginSshHost.deploymentGroup)
#template.overthere.gcp.OsLoginSshHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.gcp.OsLoginSshHost.deploymentSubGroup)
#template.overthere.gcp.OsLoginSshHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.gcp.OsLoginSshHost.deploymentSubSubGroup)
#template.overthere.gcp.OsLoginSshHost.deploymentSubSubGroup=null
# Gcp Key Management Type (inherited from: overthere.gcp.OsLoginSshHost.gcpKeyManagementType)
#template.overthere.gcp.OsLoginSshHost.gcpKeyManagementType=OsLogin
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.overthere.gcp.OsLoginSshHost.instanceName=null
# Jumpstation that should be used to reach this host (inherited from: overthere.gcp.OsLoginSshHost.jumpstation)
#template.overthere.gcp.OsLoginSshHost.jumpstation=null
# Key expiry time defined in milliseconds, default value is 300,000ms (5 minutes). If generated key expires new one will be internally created and installed via OsLogin. (inherited from: overthere.gcp.OsLoginSshHost.keyExpiryTimeMillis)
#template.overthere.gcp.OsLoginSshHost.keyExpiryTimeMillis=null
# Key size, default is 1024. (inherited from: overthere.gcp.OsLoginSshHost.keySize)
#template.overthere.gcp.OsLoginSshHost.keySize=null
# Operating system the host runs (inherited from: overthere.gcp.OsLoginSshHost.os)
#template.overthere.gcp.OsLoginSshHost.os=null
# Port on which the SSH server runs (inherited from: overthere.gcp.OsLoginSshHost.port)
#template.overthere.gcp.OsLoginSshHost.port=22
# Protocol to use when connecting to this host (inherited from: overthere.gcp.OsLoginSshHost.protocol)
#template.overthere.gcp.OsLoginSshHost.protocol=gcp_ssh
# Retry period between each retry to open the connection. Default value is 1000 ms. (inherited from: overthere.gcp.OsLoginSshHost.retryCount)
#template.overthere.gcp.OsLoginSshHost.retryCount=null
# Retry period between each retry to open the connection. Default value is 1000 ms. (inherited from: overthere.gcp.OsLoginSshHost.retryPeriodMillis)
#template.overthere.gcp.OsLoginSshHost.retryPeriodMillis=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.gcp.OsLoginSshHost.satellite)
#template.overthere.gcp.OsLoginSshHost.satellite=null
# Executable shell program (inherited from: overthere.gcp.OsLoginSshHost.shell)
#template.overthere.gcp.OsLoginSshHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.gcp.OsLoginSshHost.stagingDirectoryPath)
#template.overthere.gcp.OsLoginSshHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.gcp.OsLoginSshHost.tags)
#template.overthere.gcp.OsLoginSshHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.gcp.OsLoginSshHost.temporaryDirectoryPath)
#template.overthere.gcp.OsLoginSshHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.gcp.OsLoginSshHost.tmpDeleteOnDisconnect)
#template.overthere.gcp.OsLoginSshHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.gcp.OsLoginSshHost.tmpFileCreationRetries)
#template.overthere.gcp.OsLoginSshHost.tmpFileCreationRetries=1000
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.patch.BasePatchDictionary.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.patch.BasePatchDictionary.instanceName=null
# The JSON activation entries as JSON Array (inherited from: patch.JsonPatchDictionary.activators)
#template.patch.JsonPatchDictionary.activators=
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.patch.JsonPatchDictionary.childTemplates=null
# The type of the sample (inherited from: patch.JsonPatchDictionary.customFileType)
#template.patch.JsonPatchDictionary.customFileType=JSON
# The text of the sample (inherited from: patch.JsonPatchDictionary.customSample)
#template.patch.JsonPatchDictionary.customSample=
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.patch.JsonPatchDictionary.instanceName=null
# Regular expression to identify which types of files the patch entries will be applied to (inherited from: patch.JsonPatchDictionary.jsonFileRegex)
#template.patch.JsonPatchDictionary.jsonFileRegex=.+\.(json)
# List of packages to scan for files containing samples for patches (inherited from: patch.JsonPatchDictionary.packages)
#template.patch.JsonPatchDictionary.packages=null
# The patch entries that have been created (inherited from: patch.JsonPatchDictionary.patches)
#template.patch.JsonPatchDictionary.patches=
# Selected artifact for creating patches and/or activators (inherited from: patch.JsonPatchDictionary.selectedArtifact)
#template.patch.JsonPatchDictionary.selectedArtifact=
# Selected YAML document for creating patches and/or activators (inherited from: patch.JsonPatchDictionary.selectedDocument)
#template.patch.JsonPatchDictionary.selectedDocument=
# The source of the sample that will be provided for patching (inherited from: patch.JsonPatchDictionary.sourceType)
#template.patch.JsonPatchDictionary.sourceType=Packages
# Regular expression to identify which types of files the patch entries will be applied to (inherited from: patch.JsonPatchDictionary.yamlFileRegex)
#template.patch.JsonPatchDictionary.yamlFileRegex=.+\.(yaml|yml)
# Activation by filename (Regex) (inherited from: patch.RegexPatchDictionary.activationFileRegex)
#template.patch.RegexPatchDictionary.activationFileRegex=.*
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.patch.RegexPatchDictionary.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.patch.RegexPatchDictionary.instanceName=null
# The Regex patch (inherited from: patch.RegexPatchDictionary.regex)
#template.patch.RegexPatchDictionary.regex=
# The substitution (inherited from: patch.RegexPatchDictionary.substitution)
#template.patch.RegexPatchDictionary.substitution=
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.policy.JythonStepJob.childTemplates=null
# Optional map of parameters to pass to the steps (inherited from: policy.JythonStepJob.controlTaskParams)
#template.policy.JythonStepJob.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans (inherited from: policy.JythonStepJob.description)
#template.policy.JythonStepJob.description=null
# Enables or disables triggering of the administration job (inherited from: policy.JythonStepJob.enabled)
#template.policy.JythonStepJob.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.policy.JythonStepJob.instanceName=null
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: policy.JythonStepJob.schedule)
#template.policy.JythonStepJob.schedule=null
# Path to the Python script to execute (relative to XL Deploy's classpath) (inherited from: policy.JythonStepJob.scriptPath)
#template.policy.JythonStepJob.scriptPath=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.policy.PackageRetentionPolicy.childTemplates=null
# Optional map of parameters to pass to the steps (inherited from: policy.PackageRetentionPolicy.controlTaskParams)
#template.policy.PackageRetentionPolicy.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans (inherited from: policy.PackageRetentionPolicy.description)
#template.policy.PackageRetentionPolicy.description=Execute package removal job according to policy
# Execute the policy without removing packages. (inherited from: policy.PackageRetentionPolicy.dryRun)
#template.policy.PackageRetentionPolicy.dryRun=false
# Enables or disables triggering of the administration job (inherited from: policy.PackageRetentionPolicy.enabled)
#template.policy.PackageRetentionPolicy.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.policy.PackageRetentionPolicy.instanceName=null
# Packages created within the given no of days matching the pattern to be retained per each application. (inherited from: policy.PackageRetentionPolicy.packageDaysRetention)
#template.policy.PackageRetentionPolicy.packageDaysRetention=null
# Number of last N packages matching the pattern to be retained per each application. Packages are sorted ascending by lexicographical ordering. (inherited from: policy.PackageRetentionPolicy.packageRetention)
#template.policy.PackageRetentionPolicy.packageRetention=null
# Atleast provide one from the below fields (inherited from: policy.PackageRetentionPolicy.packageRetentionValidation)
#template.policy.PackageRetentionPolicy.packageRetentionValidation=null
# Regular expression that matches the full IDs of packages to which the policy should be applied. For example: '^Applications/.*/\d{1,8}(?:\.\d{1,6})?(?:\.\d{1,6})?(?:-\d+)?$'. (inherited from: policy.PackageRetentionPolicy.pattern)
#template.policy.PackageRetentionPolicy.pattern=null
# Policy Type (inherited from: policy.PackageRetentionPolicy.policyType)
#template.policy.PackageRetentionPolicy.policyType=LAST_N_ALL_ENV
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, and weekday. Month and weekday names can be entered as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: policy.PackageRetentionPolicy.schedule)
#template.policy.PackageRetentionPolicy.schedule=0 0 18 * * *
# Path to the Python script to execute (relative to XL Deploy's classpath) (inherited from: policy.PackageRetentionPolicy.scriptPath)
#template.policy.PackageRetentionPolicy.scriptPath=policy/scripts/purge-packages.py
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.policy.TaskArchivePolicy.childTemplates=null
# Optional map of parameters to pass to the steps (inherited from: policy.TaskArchivePolicy.controlTaskParams)
#template.policy.TaskArchivePolicy.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans (inherited from: policy.TaskArchivePolicy.description)
#template.policy.TaskArchivePolicy.description=Execute task archiving job according to policy
# Execute the policy without archiving tasks. (inherited from: policy.TaskArchivePolicy.dryRun)
#template.policy.TaskArchivePolicy.dryRun=false
# Enables or disables triggering of the administration job (inherited from: policy.TaskArchivePolicy.enabled)
#template.policy.TaskArchivePolicy.enabled=true
# Policy should be applied to executed tasks. (inherited from: policy.TaskArchivePolicy.includeExecutedTasks)
#template.policy.TaskArchivePolicy.includeExecutedTasks=true
# Policy should be applied to failed tasks. (inherited from: policy.TaskArchivePolicy.includeFailedTasks)
#template.policy.TaskArchivePolicy.includeFailedTasks=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.policy.TaskArchivePolicy.instanceName=null
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, and weekday. Month and weekday names can be entered as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: policy.TaskArchivePolicy.schedule)
#template.policy.TaskArchivePolicy.schedule=0 30 18 * * *
# Path to the Python script to execute (relative to XL Deploy's classpath) (inherited from: policy.TaskArchivePolicy.scriptPath)
#template.policy.TaskArchivePolicy.scriptPath=policy/scripts/archive-tasks.py
# Archive tasks with a start date older than the specified number of days. (inherited from: policy.TaskArchivePolicy.taskRetention)
#template.policy.TaskArchivePolicy.taskRetention=null
# Path of the exported ZIP file. The property accepts ${ } placeholders where valid keys are CI properties with 'execDate' and 'execTime'added. For example: export/task_export_${execDate}_${execTime}.zip. (inherited from: policy.TaskRetentionPolicy.archivePath)
#template.policy.TaskRetentionPolicy.archivePath=export/task_export_${execDate}_${execTime}.zip
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.policy.TaskRetentionPolicy.childTemplates=null
# Optional map of parameters to pass to the steps (inherited from: policy.TaskRetentionPolicy.controlTaskParams)
#template.policy.TaskRetentionPolicy.controlTaskParams=null
# Description of this step, as it should appear in generated deployment plans (inherited from: policy.TaskRetentionPolicy.description)
#template.policy.TaskRetentionPolicy.description=Execute task removal job according to policy
# Execute the policy without removing tasks. (inherited from: policy.TaskRetentionPolicy.dryRun)
#template.policy.TaskRetentionPolicy.dryRun=false
# Enables or disables triggering of the administration job (inherited from: policy.TaskRetentionPolicy.enabled)
#template.policy.TaskRetentionPolicy.enabled=true
# Tasks will be exported to a ZIP file before being purged from the repository. (inherited from: policy.TaskRetentionPolicy.exportTasks)
#template.policy.TaskRetentionPolicy.exportTasks=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.policy.TaskRetentionPolicy.instanceName=null
# Specify the daily crontab schedule to execute this policy. The pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, and weekday. Month and weekday names can be entered as the first three letters of the English names. Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: policy.TaskRetentionPolicy.schedule)
#template.policy.TaskRetentionPolicy.schedule=0 30 18 * * *
# Path to the Python script to execute (relative to XL Deploy's classpath) (inherited from: policy.TaskRetentionPolicy.scriptPath)
#template.policy.TaskRetentionPolicy.scriptPath=policy/scripts/purge-tasks.py
# Purge all tasks with a start date older than the specified number of days. (inherited from: policy.TaskRetentionPolicy.taskRetention)
#template.policy.TaskRetentionPolicy.taskRetention=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: powershell.BasePowerShellContainer.allowConcurrentDeployments)
#template.powershell.BasePowerShellContainer.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.powershell.BasePowerShellContainer.childTemplates=null
# Deployeds To Discover (inherited from: powershell.BasePowerShellContainer.deployedsToDiscover)
#template.powershell.BasePowerShellContainer.deployedsToDiscover=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: powershell.BasePowerShellContainer.deploymentGroup)
#template.powershell.BasePowerShellContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: powershell.BasePowerShellContainer.deploymentSubGroup)
#template.powershell.BasePowerShellContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: powershell.BasePowerShellContainer.deploymentSubSubGroup)
#template.powershell.BasePowerShellContainer.deploymentSubSubGroup=null
# Order at which the discover step will be executed. (inherited from: powershell.BasePowerShellContainer.discoverOrder)
#template.powershell.BasePowerShellContainer.discoverOrder=0
# Script invoked to inspect this container and discover deployeds on it. (inherited from: powershell.BasePowerShellContainer.discoverScript)
#template.powershell.BasePowerShellContainer.discoverScript=null
# Host upon which the container resides (inherited from: powershell.BasePowerShellContainer.host)
#template.powershell.BasePowerShellContainer.host=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.powershell.BasePowerShellContainer.instanceName=null
# List of scripts to append to the the step script. (inherited from: powershell.BasePowerShellContainer.libraryScripts)
#template.powershell.BasePowerShellContainer.libraryScripts=powershell/runtime/base.ps1
# Power Shell Path (inherited from: powershell.BasePowerShellContainer.powerShellPath)
#template.powershell.BasePowerShellContainer.powerShellPath=powershell
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: powershell.BasePowerShellContainer.tags)
#template.powershell.BasePowerShellContainer.tags=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.powershell.PowerShellContainer.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.powershell.PowerShellContainer.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.python.PythonManagedContainer.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.python.PythonManagedContainer.instanceName=null
# The set of created CIs. (inherited from: python.PythonManagedDeployedContainer.boundConfigurationItems)
#template.python.PythonManagedDeployedContainer.boundConfigurationItems=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.python.PythonManagedDeployedContainer.childTemplates=null
# The container on which this deployed runs. (inherited from: python.PythonManagedDeployedContainer.container)
#template.python.PythonManagedDeployedContainer.container=null
# The deployable that this deployed is derived from. (inherited from: python.PythonManagedDeployedContainer.deployable)
#template.python.PythonManagedDeployedContainer.deployable=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: python.PythonManagedDeployedContainer.deploymentGroup)
#template.python.PythonManagedDeployedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: python.PythonManagedDeployedContainer.deploymentSubGroup)
#template.python.PythonManagedDeployedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: python.PythonManagedDeployedContainer.deploymentSubSubGroup)
#template.python.PythonManagedDeployedContainer.deploymentSubSubGroup=null
# The order in which a discover step will be executed. (inherited from: python.PythonManagedDeployedContainer.discoverOrder)
#template.python.PythonManagedDeployedContainer.discoverOrder=50
# Flag to indicate whether the deployed application CI is to be injected to the Python script execution context. (inherited from: python.PythonManagedDeployedContainer.exposeDeployedApplication)
#template.python.PythonManagedDeployedContainer.exposeDeployedApplication=false
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.python.PythonManagedDeployedContainer.instanceName=null
# List of scripts to be appended to the deployed's runtime script (inherited from: python.PythonManagedDeployedContainer.libraryScripts)
#template.python.PythonManagedDeployedContainer.libraryScripts=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: python.PythonManagedDeployedContainer.tags)
#template.python.PythonManagedDeployedContainer.tags=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.python.PythonManagingContainer.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.python.PythonManagingContainer.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.release.DeploymentPipeline.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.release.DeploymentPipeline.instanceName=null
# The deployment pipeline for this application (inherited from: release.DeploymentPipeline.pipeline)
#template.release.DeploymentPipeline.pipeline=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.schedule.ControlTaskInvokable.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.schedule.ControlTaskInvokable.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.schedule.ControlTaskJob.childTemplates=null
# Identifier of the target configuration item on which to invoke the control task (inherited from: schedule.ControlTaskJob.configurationItemId)
#template.schedule.ControlTaskJob.configurationItemId=null
# Name of the control task to invoke as specified in the synthetic.xml or the @ControlTask annotation (inherited from: schedule.ControlTaskJob.controlTaskName)
#template.schedule.ControlTaskJob.controlTaskName=null
# Optional map of parameters to pass to the control task (inherited from: schedule.ControlTaskJob.controlTaskParams)
#template.schedule.ControlTaskJob.controlTaskParams=null
# Enables or disables triggering of the administration job (inherited from: schedule.ControlTaskJob.enabled)
#template.schedule.ControlTaskJob.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.schedule.ControlTaskJob.instanceName=null
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: schedule.ControlTaskJob.schedule)
#template.schedule.ControlTaskJob.schedule=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.schedule.CronJob.childTemplates=null
# Enables or disables triggering of the administration job (inherited from: schedule.CronJob.enabled)
#template.schedule.CronJob.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.schedule.CronJob.instanceName=null
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: schedule.CronJob.schedule)
#template.schedule.CronJob.schedule=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.schedule.Job.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.schedule.Job.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.schedule.ScheduledJob.childTemplates=null
# Enables or disables triggering of the administration job (inherited from: schedule.ScheduledJob.enabled)
#template.schedule.ScheduledJob.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.schedule.ScheduledJob.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.schedule.StepJob.childTemplates=null
# Optional map of parameters to pass to the steps (inherited from: schedule.StepJob.controlTaskParams)
#template.schedule.StepJob.controlTaskParams=null
# Enables or disables triggering of the administration job (inherited from: schedule.StepJob.enabled)
#template.schedule.StepJob.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.schedule.StepJob.instanceName=null
# The pattern is a list of six single space-separated fields: representing second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of the English names.Example patterns: '0 0 * * * *' = the top of every hour of every day, '0 0 14 * * SAT,SUN' = 14 o'clock on each weekend day, '0 0 9-17 * * MON-FRI' = on the hour nine-to-five weekdays, '0 0 0 1 * *' = every 1st of month at midnight. (inherited from: schedule.StepJob.schedule)
#template.schedule.StepJob.schedule=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.settings.FeatureSettings.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.settings.FeatureSettings.instanceName=null
# Allow individual users to opt-out from anonymous usage analytics and guidance (inherited from: settings.PendoAnalytics.allowUsersToOptOut)
#template.settings.PendoAnalytics.allowUsersToOptOut=false
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.settings.PendoAnalytics.childTemplates=null
# Documentation Page (inherited from: settings.PendoAnalytics.documentationPage)
#template.settings.PendoAnalytics.documentationPage=deploy/how-to/analytics-and-guidance.html
# Enable the analytics and guidance feature in this Deploy environment (inherited from: settings.PendoAnalytics.enabled)
#template.settings.PendoAnalytics.enabled=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.settings.PendoAnalytics.instanceName=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.Db2Client.additionalOptions)
#template.sql.Db2Client.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.Db2Client.allowConcurrentDeployments)
#template.sql.Db2Client.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.sql.Db2Client.childTemplates=null
# The OS-specific wrapper script that calls the SQL client (inherited from: sql.Db2Client.clientWrapperScript)
#template.sql.Db2Client.clientWrapperScript=sql/Db2Client
# The name of the DB2 database to connect to (inherited from: sql.Db2Client.databaseName)
#template.sql.Db2Client.databaseName=null
# The directory that contains the DB2 installation (inherited from: sql.Db2Client.db2Home)
#template.sql.Db2Client.db2Home=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.Db2Client.deploymentGroup)
#template.sql.Db2Client.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.Db2Client.deploymentSubGroup)
#template.sql.Db2Client.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.Db2Client.deploymentSubSubGroup)
#template.sql.Db2Client.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.Db2Client.envVars)
#template.sql.Db2Client.envVars=null
# Host upon which the container resides (inherited from: sql.Db2Client.host)
#template.sql.Db2Client.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.Db2Client.inspectClasspathResources)
#template.sql.Db2Client.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.Db2Client.inspectScript)
#template.sql.Db2Client.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.Db2Client.inspectTemplateClasspathResources)
#template.sql.Db2Client.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.sql.Db2Client.instanceName=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.Db2Client.password)
#template.sql.Db2Client.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.Db2Client.restartClasspathResources)
#template.sql.Db2Client.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.Db2Client.restartOrder)
#template.sql.Db2Client.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.Db2Client.restartScript)
#template.sql.Db2Client.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.Db2Client.restartTemplateClasspathResources)
#template.sql.Db2Client.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.Db2Client.restartWaitTime)
#template.sql.Db2Client.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.Db2Client.startClasspathResources)
#template.sql.Db2Client.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.Db2Client.startOrder)
#template.sql.Db2Client.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.Db2Client.startScript)
#template.sql.Db2Client.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.Db2Client.startTemplateClasspathResources)
#template.sql.Db2Client.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.Db2Client.startWaitTime)
#template.sql.Db2Client.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.Db2Client.stopClasspathResources)
#template.sql.Db2Client.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.Db2Client.stopOrder)
#template.sql.Db2Client.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.Db2Client.stopScript)
#template.sql.Db2Client.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.Db2Client.stopStartRestartConnection)
#template.sql.Db2Client.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.Db2Client.stopTemplateClasspathResources)
#template.sql.Db2Client.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.Db2Client.stopWaitTime)
#template.sql.Db2Client.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.Db2Client.tags)
#template.sql.Db2Client.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.Db2Client.username)
#template.sql.Db2Client.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.MsSqlClient.additionalOptions)
#template.sql.MsSqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.MsSqlClient.allowConcurrentDeployments)
#template.sql.MsSqlClient.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.sql.MsSqlClient.childTemplates=null
# The OS-specific wrapper script that calls the SQL client (inherited from: sql.MsSqlClient.clientWrapperScript)
#template.sql.MsSqlClient.clientWrapperScript=sql/MsSqlClient
# The name of the MS SQL database to connect to (inherited from: sql.MsSqlClient.databaseName)
#template.sql.MsSqlClient.databaseName=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.MsSqlClient.deploymentGroup)
#template.sql.MsSqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.MsSqlClient.deploymentSubGroup)
#template.sql.MsSqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.MsSqlClient.deploymentSubSubGroup)
#template.sql.MsSqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.MsSqlClient.envVars)
#template.sql.MsSqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.MsSqlClient.host)
#template.sql.MsSqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.MsSqlClient.inspectClasspathResources)
#template.sql.MsSqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.MsSqlClient.inspectScript)
#template.sql.MsSqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MsSqlClient.inspectTemplateClasspathResources)
#template.sql.MsSqlClient.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.sql.MsSqlClient.instanceName=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.MsSqlClient.password)
#template.sql.MsSqlClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.MsSqlClient.restartClasspathResources)
#template.sql.MsSqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.MsSqlClient.restartOrder)
#template.sql.MsSqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.MsSqlClient.restartScript)
#template.sql.MsSqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MsSqlClient.restartTemplateClasspathResources)
#template.sql.MsSqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.MsSqlClient.restartWaitTime)
#template.sql.MsSqlClient.restartWaitTime=0
# The name of the MS SQL Server to connect to (inherited from: sql.MsSqlClient.serverName)
#template.sql.MsSqlClient.serverName=null
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.MsSqlClient.startClasspathResources)
#template.sql.MsSqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.MsSqlClient.startOrder)
#template.sql.MsSqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.MsSqlClient.startScript)
#template.sql.MsSqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MsSqlClient.startTemplateClasspathResources)
#template.sql.MsSqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.MsSqlClient.startWaitTime)
#template.sql.MsSqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.MsSqlClient.stopClasspathResources)
#template.sql.MsSqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.MsSqlClient.stopOrder)
#template.sql.MsSqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.MsSqlClient.stopScript)
#template.sql.MsSqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.MsSqlClient.stopStartRestartConnection)
#template.sql.MsSqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MsSqlClient.stopTemplateClasspathResources)
#template.sql.MsSqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.MsSqlClient.stopWaitTime)
#template.sql.MsSqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.MsSqlClient.tags)
#template.sql.MsSqlClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.MsSqlClient.username)
#template.sql.MsSqlClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.MySqlClient.additionalOptions)
#template.sql.MySqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.MySqlClient.allowConcurrentDeployments)
#template.sql.MySqlClient.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.sql.MySqlClient.childTemplates=null
# The OS-specific wrapper script that calls the SQL client (inherited from: sql.MySqlClient.clientWrapperScript)
#template.sql.MySqlClient.clientWrapperScript=sql/MySqlClient
# The name of the MySQL database to connect to (inherited from: sql.MySqlClient.databaseName)
#template.sql.MySqlClient.databaseName=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.MySqlClient.deploymentGroup)
#template.sql.MySqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.MySqlClient.deploymentSubGroup)
#template.sql.MySqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.MySqlClient.deploymentSubSubGroup)
#template.sql.MySqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.MySqlClient.envVars)
#template.sql.MySqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.MySqlClient.host)
#template.sql.MySqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.MySqlClient.inspectClasspathResources)
#template.sql.MySqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.MySqlClient.inspectScript)
#template.sql.MySqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MySqlClient.inspectTemplateClasspathResources)
#template.sql.MySqlClient.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.sql.MySqlClient.instanceName=null
# The directory that contains the MySQL installation (inherited from: sql.MySqlClient.mySqlHome)
#template.sql.MySqlClient.mySqlHome=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.MySqlClient.password)
#template.sql.MySqlClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.MySqlClient.restartClasspathResources)
#template.sql.MySqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.MySqlClient.restartOrder)
#template.sql.MySqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.MySqlClient.restartScript)
#template.sql.MySqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MySqlClient.restartTemplateClasspathResources)
#template.sql.MySqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.MySqlClient.restartWaitTime)
#template.sql.MySqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.MySqlClient.startClasspathResources)
#template.sql.MySqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.MySqlClient.startOrder)
#template.sql.MySqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.MySqlClient.startScript)
#template.sql.MySqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MySqlClient.startTemplateClasspathResources)
#template.sql.MySqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.MySqlClient.startWaitTime)
#template.sql.MySqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.MySqlClient.stopClasspathResources)
#template.sql.MySqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.MySqlClient.stopOrder)
#template.sql.MySqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.MySqlClient.stopScript)
#template.sql.MySqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.MySqlClient.stopStartRestartConnection)
#template.sql.MySqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.MySqlClient.stopTemplateClasspathResources)
#template.sql.MySqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.MySqlClient.stopWaitTime)
#template.sql.MySqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.MySqlClient.tags)
#template.sql.MySqlClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.MySqlClient.username)
#template.sql.MySqlClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.OracleClient.additionalOptions)
#template.sql.OracleClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.OracleClient.allowConcurrentDeployments)
#template.sql.OracleClient.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.sql.OracleClient.childTemplates=null
# The OS-specific wrapper script that calls the SQL client (inherited from: sql.OracleClient.clientWrapperScript)
#template.sql.OracleClient.clientWrapperScript=sql/OracleClient
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.OracleClient.deploymentGroup)
#template.sql.OracleClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.OracleClient.deploymentSubGroup)
#template.sql.OracleClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.OracleClient.deploymentSubSubGroup)
#template.sql.OracleClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.OracleClient.envVars)
#template.sql.OracleClient.envVars=null
# Host upon which the container resides (inherited from: sql.OracleClient.host)
#template.sql.OracleClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.OracleClient.inspectClasspathResources)
#template.sql.OracleClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.OracleClient.inspectScript)
#template.sql.OracleClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.OracleClient.inspectTemplateClasspathResources)
#template.sql.OracleClient.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.sql.OracleClient.instanceName=null
# The directory that contains the Oracle installation (inherited from: sql.OracleClient.oraHome)
#template.sql.OracleClient.oraHome=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.OracleClient.password)
#template.sql.OracleClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.OracleClient.restartClasspathResources)
#template.sql.OracleClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.OracleClient.restartOrder)
#template.sql.OracleClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.OracleClient.restartScript)
#template.sql.OracleClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.OracleClient.restartTemplateClasspathResources)
#template.sql.OracleClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.OracleClient.restartWaitTime)
#template.sql.OracleClient.restartWaitTime=0
# The Oracle SID to connect to (inherited from: sql.OracleClient.sid)
#template.sql.OracleClient.sid=null
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.OracleClient.startClasspathResources)
#template.sql.OracleClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.OracleClient.startOrder)
#template.sql.OracleClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.OracleClient.startScript)
#template.sql.OracleClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.OracleClient.startTemplateClasspathResources)
#template.sql.OracleClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.OracleClient.startWaitTime)
#template.sql.OracleClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.OracleClient.stopClasspathResources)
#template.sql.OracleClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.OracleClient.stopOrder)
#template.sql.OracleClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.OracleClient.stopScript)
#template.sql.OracleClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.OracleClient.stopStartRestartConnection)
#template.sql.OracleClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.OracleClient.stopTemplateClasspathResources)
#template.sql.OracleClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.OracleClient.stopWaitTime)
#template.sql.OracleClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.OracleClient.tags)
#template.sql.OracleClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.OracleClient.username)
#template.sql.OracleClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.PostgreSqlClient.additionalOptions)
#template.sql.PostgreSqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.PostgreSqlClient.allowConcurrentDeployments)
#template.sql.PostgreSqlClient.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.sql.PostgreSqlClient.childTemplates=null
# The OS-specific wrapper script that calls the SQL client (inherited from: sql.PostgreSqlClient.clientWrapperScript)
#template.sql.PostgreSqlClient.clientWrapperScript=sql/PostgreSqlClient
# If set, the PostgreSQL host to use. Falls back to the parent overthere hostname (inherited from: sql.PostgreSqlClient.databaseHost)
#template.sql.PostgreSqlClient.databaseHost=null
# The name of the PostgreSQL database to connect to (inherited from: sql.PostgreSqlClient.databaseName)
#template.sql.PostgreSqlClient.databaseName=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.PostgreSqlClient.deploymentGroup)
#template.sql.PostgreSqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.PostgreSqlClient.deploymentSubGroup)
#template.sql.PostgreSqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.PostgreSqlClient.deploymentSubSubGroup)
#template.sql.PostgreSqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.PostgreSqlClient.envVars)
#template.sql.PostgreSqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.PostgreSqlClient.host)
#template.sql.PostgreSqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.PostgreSqlClient.inspectClasspathResources)
#template.sql.PostgreSqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.PostgreSqlClient.inspectScript)
#template.sql.PostgreSqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.PostgreSqlClient.inspectTemplateClasspathResources)
#template.sql.PostgreSqlClient.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.sql.PostgreSqlClient.instanceName=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.PostgreSqlClient.password)
#template.sql.PostgreSqlClient.password=null
# The port of the PostgreSQL server to connect to (inherited from: sql.PostgreSqlClient.port)
#template.sql.PostgreSqlClient.port=5432
# The directory that contains the PostgreSQL installation (inherited from: sql.PostgreSqlClient.postgreSqlHome)
#template.sql.PostgreSqlClient.postgreSqlHome=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.PostgreSqlClient.restartClasspathResources)
#template.sql.PostgreSqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.PostgreSqlClient.restartOrder)
#template.sql.PostgreSqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.PostgreSqlClient.restartScript)
#template.sql.PostgreSqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.PostgreSqlClient.restartTemplateClasspathResources)
#template.sql.PostgreSqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.PostgreSqlClient.restartWaitTime)
#template.sql.PostgreSqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.PostgreSqlClient.startClasspathResources)
#template.sql.PostgreSqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.PostgreSqlClient.startOrder)
#template.sql.PostgreSqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.PostgreSqlClient.startScript)
#template.sql.PostgreSqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.PostgreSqlClient.startTemplateClasspathResources)
#template.sql.PostgreSqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.PostgreSqlClient.startWaitTime)
#template.sql.PostgreSqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.PostgreSqlClient.stopClasspathResources)
#template.sql.PostgreSqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.PostgreSqlClient.stopOrder)
#template.sql.PostgreSqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.PostgreSqlClient.stopScript)
#template.sql.PostgreSqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.PostgreSqlClient.stopStartRestartConnection)
#template.sql.PostgreSqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.PostgreSqlClient.stopTemplateClasspathResources)
#template.sql.PostgreSqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.PostgreSqlClient.stopWaitTime)
#template.sql.PostgreSqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.PostgreSqlClient.tags)
#template.sql.PostgreSqlClient.tags=null
# Use localhost as the hostname to connect to (inherited from: sql.PostgreSqlClient.useLocalhost)
#template.sql.PostgreSqlClient.useLocalhost=true
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.PostgreSqlClient.username)
#template.sql.PostgreSqlClient.username=null
# Specify additional options to be passed to the command-line SQL client (inherited from: sql.SqlClient.additionalOptions)
#template.sql.SqlClient.additionalOptions=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: sql.SqlClient.allowConcurrentDeployments)
#template.sql.SqlClient.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.sql.SqlClient.childTemplates=null
# The OS-specific wrapper script that calls the SQL client (inherited from: sql.SqlClient.clientWrapperScript)
#template.sql.SqlClient.clientWrapperScript=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentGroup)
#template.sql.SqlClient.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubGroup)
#template.sql.SqlClient.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: sql.SqlClient.deploymentSubSubGroup)
#template.sql.SqlClient.deploymentSubSubGroup=null
# Environment variables for container (inherited from: sql.SqlClient.envVars)
#template.sql.SqlClient.envVars=null
# Host upon which the container resides (inherited from: sql.SqlClient.host)
#template.sql.SqlClient.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: sql.SqlClient.inspectClasspathResources)
#template.sql.SqlClient.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: sql.SqlClient.inspectScript)
#template.sql.SqlClient.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.inspectTemplateClasspathResources)
#template.sql.SqlClient.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.sql.SqlClient.instanceName=null
# If set, the password to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.password)
#template.sql.SqlClient.password=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: sql.SqlClient.restartClasspathResources)
#template.sql.SqlClient.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: sql.SqlClient.restartOrder)
#template.sql.SqlClient.restartOrder=90
# Classpath to the script used to restart the generic container. (inherited from: sql.SqlClient.restartScript)
#template.sql.SqlClient.restartScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.restartTemplateClasspathResources)
#template.sql.SqlClient.restartTemplateClasspathResources=null
# The time to wait in seconds for a container restart action. (inherited from: sql.SqlClient.restartWaitTime)
#template.sql.SqlClient.restartWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: sql.SqlClient.startClasspathResources)
#template.sql.SqlClient.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: sql.SqlClient.startOrder)
#template.sql.SqlClient.startOrder=90
# Classpath to the script used to start the generic container. (inherited from: sql.SqlClient.startScript)
#template.sql.SqlClient.startScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.startTemplateClasspathResources)
#template.sql.SqlClient.startTemplateClasspathResources=null
# The time to wait in seconds for a container start action. (inherited from: sql.SqlClient.startWaitTime)
#template.sql.SqlClient.startWaitTime=0
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: sql.SqlClient.stopClasspathResources)
#template.sql.SqlClient.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: sql.SqlClient.stopOrder)
#template.sql.SqlClient.stopOrder=10
# Classpath to the script used to stop the generic container. (inherited from: sql.SqlClient.stopScript)
#template.sql.SqlClient.stopScript=null
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: sql.SqlClient.stopStartRestartConnection)
#template.sql.SqlClient.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: sql.SqlClient.stopTemplateClasspathResources)
#template.sql.SqlClient.stopTemplateClasspathResources=null
# The time to wait in seconds for a container stop action. (inherited from: sql.SqlClient.stopWaitTime)
#template.sql.SqlClient.stopWaitTime=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: sql.SqlClient.tags)
#template.sql.SqlClient.tags=null
# If set, the user name to use if none is set on the deployed sql.ExecutedSqlScripts (inherited from: sql.SqlClient.username)
#template.sql.SqlClient.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.stitch.BaseSource.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.stitch.BaseSource.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onFailurePolicy)
#template.stitch.BaseSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSource.onSuccessPolicy)
#template.stitch.BaseSource.onSuccessPolicy=ARCHIVE
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.stitch.BaseSourceWithPath.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.stitch.BaseSourceWithPath.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.BaseSourceWithPath.onFailurePolicy)
#template.stitch.BaseSourceWithPath.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.BaseSourceWithPath.onSuccessPolicy)
#template.stitch.BaseSourceWithPath.onSuccessPolicy=ARCHIVE
# The base directory path to the folder containing stitch repositories. (inherited from: stitch.BaseSourceWithPath.path)
#template.stitch.BaseSourceWithPath.path=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.stitch.ClasspathSource.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.stitch.ClasspathSource.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.ClasspathSource.onFailurePolicy)
#template.stitch.ClasspathSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.ClasspathSource.onSuccessPolicy)
#template.stitch.ClasspathSource.onSuccessPolicy=ARCHIVE
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.stitch.FolderSource.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.stitch.FolderSource.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.FolderSource.onFailurePolicy)
#template.stitch.FolderSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.FolderSource.onSuccessPolicy)
#template.stitch.FolderSource.onSuccessPolicy=ARCHIVE
# The base directory path to the folder containing stitch repositories. (inherited from: stitch.FolderSource.path)
#template.stitch.FolderSource.path=null
# The branch cron pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of their English names. For Example patterns: 0 0 * * * * = the top of every hour of every day, * * *2 * * * =every two hours, '0 0 3 ? * MON-FRI' = in 3AM every weekday. If no value is defined in configuration trigger will fallback to '0 */10 * * * ?' (every 10 minutes). (inherited from: stitch.GitSource.branchCronExpression)
#template.stitch.GitSource.branchCronExpression=null
# Filters shown change set branches. (inherited from: stitch.GitSource.branchRegex)
#template.stitch.GitSource.branchRegex=.+
# Enables periodical automatic sync of branches for the source (inherited from: stitch.GitSource.branchSyncAutomatically)
#template.stitch.GitSource.branchSyncAutomatically=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.stitch.GitSource.childTemplates=null
# The cron pattern is a list of six fields separated by a single space. The fields represent the second, minute, hour, day, month, weekday. Month and weekday names can be given as the first three letters of their English names. For Example patterns: 0 0 * * * * = the top of every hour of every day, * * *2 * * * =every two hours, '0 0 3 ? * MON-FRI' = in 3AM every weekday. If no value is defined in configuration trigger will fallback to '0 */10 * * * ?' (every 10 minutes). (inherited from: stitch.GitSource.cronExpression)
#template.stitch.GitSource.cronExpression=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.stitch.GitSource.instanceName=null
# Git repository master branch name (main or master). (inherited from: stitch.GitSource.masterBranchName)
#template.stitch.GitSource.masterBranchName=master
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.GitSource.onFailurePolicy)
#template.stitch.GitSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.GitSource.onSuccessPolicy)
#template.stitch.GitSource.onSuccessPolicy=ARCHIVE
# Optional passphrase for the private key. (inherited from: stitch.GitSource.passphrase)
#template.stitch.GitSource.passphrase=null
# Git password. (inherited from: stitch.GitSource.password)
#template.stitch.GitSource.password=null
# Private key used for authentication. (inherited from: stitch.GitSource.privateKey)
#template.stitch.GitSource.privateKey=null
# The stitch repository URL. (inherited from: stitch.GitSource.repositoryUrl)
#template.stitch.GitSource.repositoryUrl=null
# Enables periodical automatic syncs for the source (inherited from: stitch.GitSource.syncAutomatically)
#template.stitch.GitSource.syncAutomatically=true
# Git username. (inherited from: stitch.GitSource.username)
#template.stitch.GitSource.username=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.stitch.ZipSource.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.stitch.ZipSource.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: stitch.ZipSource.onFailurePolicy)
#template.stitch.ZipSource.onFailurePolicy=CANCEL_AND_ARCHIVE
# Process successful tasks on CI according to the defined policy. (inherited from: stitch.ZipSource.onSuccessPolicy)
#template.stitch.ZipSource.onSuccessPolicy=ARCHIVE
# The base directory path to the folder containing stitch repositories. (inherited from: stitch.ZipSource.path)
#template.stitch.ZipSource.path=null
# Child templates associated with this template. (inherited from: template.core.Directory.childTemplates)
#template.template.core.Directory.childTemplates=null
# The absolute path of the directory. (inherited from: template.core.Directory.instanceName)
#template.template.core.Directory.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.trigger.Action.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.trigger.Action.instanceName=null
# Mail body content in the form of a Freemarker template. (inherited from: trigger.EmailNotification.body)
#template.trigger.EmailNotification.body=null
# Freemarker template used to render mail body content. Path can be absolute or relative to XL Deploy's classpath. (inherited from: trigger.EmailNotification.bodyTemplatePath)
#template.trigger.EmailNotification.bodyTemplatePath=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.trigger.EmailNotification.childTemplates=null
# From mail address. Defaults to SMTPServer fromAddress. (inherited from: trigger.EmailNotification.fromAddress)
#template.trigger.EmailNotification.fromAddress=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.trigger.EmailNotification.instanceName=null
# The mail server used to send the email. (inherited from: trigger.EmailNotification.mailServer)
#template.trigger.EmailNotification.mailServer=null
# Mail body content should be sent as HTML (inherited from: trigger.EmailNotification.sendContentAsHtml)
#template.trigger.EmailNotification.sendContentAsHtml=false
# Mail subject (inherited from: trigger.EmailNotification.subject)
#template.trigger.EmailNotification.subject=null
# Mail addresses of recepients. (inherited from: trigger.EmailNotification.toAddresses)
#template.trigger.EmailNotification.toAddresses=null
# Actions to execute when specified state transition occurs. (inherited from: trigger.StepTrigger.actions)
#template.trigger.StepTrigger.actions=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.trigger.StepTrigger.childTemplates=null
# Trigger actions when the Step transitions from this state. (inherited from: trigger.StepTrigger.fromState)
#template.trigger.StepTrigger.fromState=ANY
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.trigger.StepTrigger.instanceName=null
# Trigger actions when the Step transitions to this state. (inherited from: trigger.StepTrigger.toState)
#template.trigger.StepTrigger.toState=null
# Actions to execute when specified state transition occurs. (inherited from: trigger.TaskTrigger.actions)
#template.trigger.TaskTrigger.actions=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.trigger.TaskTrigger.childTemplates=null
# Trigger actions when the Task transitions from this state. (inherited from: trigger.TaskTrigger.fromState)
#template.trigger.TaskTrigger.fromState=ANY
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.trigger.TaskTrigger.instanceName=null
# Trigger actions when the Task transitions to this state. (inherited from: trigger.TaskTrigger.toState)
#template.trigger.TaskTrigger.toState=null
# Actions to execute when specified state transition occurs. (inherited from: trigger.Trigger.actions)
#template.trigger.Trigger.actions=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.trigger.Trigger.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.trigger.Trigger.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.AbstractDictionary.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.AbstractDictionary.instanceName=null
# Only apply this dictionary to the applications mentioned (inherited from: udm.AbstractDictionary.restrictToApplications)
#template.udm.AbstractDictionary.restrictToApplications=null
# Only apply this dictionary to the containers mentioned (inherited from: udm.AbstractDictionary.restrictToContainers)
#template.udm.AbstractDictionary.restrictToContainers=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Application.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Application.instanceName=null
# The latest application version number as the highest udm.Version name sorted in lexicographical ordering. (inherited from: udm.Application.lastVersion)
#template.udm.Application.lastVersion=
# The deployment pipeline for this application (inherited from: udm.Application.pipeline)
#template.udm.Application.pipeline=null
# If true, permissions for changing checklist requirements will be checked on import (inherited from: udm.Application.verifyChecklistPermissionsOnCreate)
#template.udm.Application.verifyChecklistPermissionsOnCreate=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.ArchiveArtifact.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.ArchiveArtifact.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Artifact.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Artifact.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.BaseConfigurationItem.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.BaseConfigurationItem.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.BaseConfigurationItemWithPolicies.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.BaseConfigurationItemWithPolicies.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: udm.BaseConfigurationItemWithPolicies.onFailurePolicy)
#template.udm.BaseConfigurationItemWithPolicies.onFailurePolicy=null
# Process successful tasks on CI according to the defined policy. (inherited from: udm.BaseConfigurationItemWithPolicies.onSuccessPolicy)
#template.udm.BaseConfigurationItemWithPolicies.onSuccessPolicy=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.BaseContainer.allowConcurrentDeployments)
#template.udm.BaseContainer.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.BaseContainer.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentGroup)
#template.udm.BaseContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubGroup)
#template.udm.BaseContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubSubGroup)
#template.udm.BaseContainer.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.BaseContainer.instanceName=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseContainer.tags)
#template.udm.BaseContainer.tags=null
# The set of created CIs. (inherited from: udm.BaseDeployedContainer.boundConfigurationItems)
#template.udm.BaseDeployedContainer.boundConfigurationItems=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.BaseDeployedContainer.childTemplates=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployedContainer.container)
#template.udm.BaseDeployedContainer.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployedContainer.deployable)
#template.udm.BaseDeployedContainer.deployable=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentGroup)
#template.udm.BaseDeployedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentSubGroup)
#template.udm.BaseDeployedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentSubSubGroup)
#template.udm.BaseDeployedContainer.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.BaseDeployedContainer.instanceName=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseDeployedContainer.tags)
#template.udm.BaseDeployedContainer.tags=null
# The set of created CIs. (inherited from: udm.BaseProvisionedContainer.boundConfigurationItems)
#template.udm.BaseProvisionedContainer.boundConfigurationItems=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.BaseProvisionedContainer.childTemplates=null
# The container on which this deployed runs. (inherited from: udm.BaseProvisionedContainer.container)
#template.udm.BaseProvisionedContainer.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseProvisionedContainer.deployable)
#template.udm.BaseProvisionedContainer.deployable=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseProvisionedContainer.deploymentGroup)
#template.udm.BaseProvisionedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseProvisionedContainer.deploymentSubGroup)
#template.udm.BaseProvisionedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseProvisionedContainer.deploymentSubSubGroup)
#template.udm.BaseProvisionedContainer.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.BaseProvisionedContainer.instanceName=null
# The index of the cardinality amount created provisioneds. (inherited from: udm.BaseProvisionedContainer.ordinal)
#template.udm.BaseProvisionedContainer.ordinal=1
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseProvisionedContainer.tags)
#template.udm.BaseProvisionedContainer.tags=null
# The application this version belongs to. (inherited from: udm.CompositePackage.application)
#template.udm.CompositePackage.application=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.CompositePackage.childTemplates=null
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.CompositePackage.exportAllPasswords)
#template.udm.CompositePackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.CompositePackage.exportOnlyPasswordPlaceholders)
#template.udm.CompositePackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.CompositePackage.ignoreUndefinedPropertiesInManifest)
#template.udm.CompositePackage.ignoreUndefinedPropertiesInManifest=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.CompositePackage.instanceName=null
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.CompositePackage.orchestrator)
#template.udm.CompositePackage.orchestrator=null
# The DeploymentPackages that make up this CompositePackage. (inherited from: udm.CompositePackage.packages)
#template.udm.CompositePackage.packages=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Configuration.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Configuration.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.ConfigurationItem.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.ConfigurationItem.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Container.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Container.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Deployable.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Deployable.instanceName=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.DeployedApplication.allowConcurrentDeployments)
#template.udm.DeployedApplication.allowConcurrentDeployments=true
# Configuration items resolved from templates on the provisioning package. (inherited from: udm.DeployedApplication.boundConfigurationItems)
#template.udm.DeployedApplication.boundConfigurationItems=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.DeployedApplication.childTemplates=null
# The items that were deployed to the environment. (inherited from: udm.DeployedApplication.deployeds)
#template.udm.DeployedApplication.deployeds=null
# Environment (inherited from: udm.DeployedApplication.environment)
#template.udm.DeployedApplication.environment=null
# Deployment overrides existing application completely. (inherited from: udm.DeployedApplication.forceRedeploy)
#template.udm.DeployedApplication.forceRedeploy=false
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.DeployedApplication.instanceName=null
# Process failed tasks on CI according to the defined policy. (inherited from: udm.DeployedApplication.onFailurePolicy)
#template.udm.DeployedApplication.onFailurePolicy=null
# Process successful tasks on CI according to the defined policy. (inherited from: udm.DeployedApplication.onSuccessPolicy)
#template.udm.DeployedApplication.onSuccessPolicy=null
# Optimize the generated plan after orchestration. (inherited from: udm.DeployedApplication.optimizePlan)
#template.udm.DeployedApplication.optimizePlan=true
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.DeployedApplication.orchestrator)
#template.udm.DeployedApplication.orchestrator=null
# Undeploy direct or transient dependencies of this application. A dependent application is undeployed if no other applications depend on it. (inherited from: udm.DeployedApplication.undeployDependencies)
#template.udm.DeployedApplication.undeployDependencies=false
# Placeholders provided by the user at provisioning. (inherited from: udm.DeployedApplication.unresolvedPlaceholders)
#template.udm.DeployedApplication.unresolvedPlaceholders=null
# The package that was deployed to the environment (inherited from: udm.DeployedApplication.version)
#template.udm.DeployedApplication.version=null
# The application this version belongs to. (inherited from: udm.DeploymentPackage.application)
#template.udm.DeploymentPackage.application=null
# The versions of other applications that this package depends on, as a mapping from application name to version range (inherited from: udm.DeploymentPackage.applicationDependencies)
#template.udm.DeploymentPackage.applicationDependencies=null
# The set of CI bound templates. (inherited from: udm.DeploymentPackage.boundTemplates)
#template.udm.DeploymentPackage.boundTemplates=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.DeploymentPackage.childTemplates=null
# The resolution to use for application dependencies when deploying this application. Should be 'LATEST' or 'EXISTING'. A placeholder can be used. (inherited from: udm.DeploymentPackage.dependencyResolution)
#template.udm.DeploymentPackage.dependencyResolution=LATEST
# The set of deployables that are part of this package (inherited from: udm.DeploymentPackage.deployables)
#template.udm.DeploymentPackage.deployables=null
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.DeploymentPackage.exportAllPasswords)
#template.udm.DeploymentPackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.DeploymentPackage.exportOnlyPasswordPlaceholders)
#template.udm.DeploymentPackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.DeploymentPackage.ignoreUndefinedPropertiesInManifest)
#template.udm.DeploymentPackage.ignoreUndefinedPropertiesInManifest=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.DeploymentPackage.instanceName=null
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.DeploymentPackage.orchestrator)
#template.udm.DeploymentPackage.orchestrator=null
# The set of CI templates. (inherited from: udm.DeploymentPackage.templates)
#template.udm.DeploymentPackage.templates=null
# Whether to undeploy direct or transient dependencies of this application. Dependency is undeployed if there are not other application that depend on it. Should be 'true' or 'false'. A placeholder can be used. (inherited from: udm.DeploymentPackage.undeployDependencies)
#template.udm.DeploymentPackage.undeployDependencies=false
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.DerivedArtifact.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.DerivedArtifact.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Dictionary.childTemplates=null
# The encrypted dictionary entries (inherited from: udm.Dictionary.encryptedEntries)
#template.udm.Dictionary.encryptedEntries=null
# The dictionary entries (inherited from: udm.Dictionary.entries)
#template.udm.Dictionary.entries=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Dictionary.instanceName=null
# Only apply this dictionary to the applications mentioned (inherited from: udm.Dictionary.restrictToApplications)
#template.udm.Dictionary.restrictToApplications=null
# Only apply this dictionary to the containers mentioned (inherited from: udm.Dictionary.restrictToContainers)
#template.udm.Dictionary.restrictToContainers=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.EmbeddedDeployable.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.EmbeddedDeployable.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.EmbeddedDeployedContainer.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.EmbeddedDeployedContainer.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.EncryptedDictionary.childTemplates=null
# The encrypted dictionary entries (inherited from: udm.EncryptedDictionary.encryptedEntries)
#template.udm.EncryptedDictionary.encryptedEntries=null
# The dictionary entries (inherited from: udm.EncryptedDictionary.entries)
#template.udm.EncryptedDictionary.entries=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.EncryptedDictionary.instanceName=null
# Only apply this dictionary to the applications mentioned (inherited from: udm.EncryptedDictionary.restrictToApplications)
#template.udm.EncryptedDictionary.restrictToApplications=null
# Only apply this dictionary to the containers mentioned (inherited from: udm.EncryptedDictionary.restrictToContainers)
#template.udm.EncryptedDictionary.restrictToContainers=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.Environment.allowConcurrentDeployments)
#template.udm.Environment.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Environment.childTemplates=null
# The dictionaries providing placeholder values. If the same entry exists in multiple dictionaries, the first one in the list is taken. (inherited from: udm.Environment.dictionaries)
#template.udm.Environment.dictionaries=null
# The directory path where the provisioned environment and provisioned configuration items will be stored. (inherited from: udm.Environment.directoryPath)
#template.udm.Environment.directoryPath=null
# If set, will continually try to obtain lock (inherited from: udm.Environment.enableLockRetry)
#template.udm.Environment.enableLockRetry=false
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Environment.instanceName=null
# If set, will lock all container in environment (inherited from: udm.Environment.lockAllContainersInEnvironment)
#template.udm.Environment.lockAllContainersInEnvironment=false
# If set to false, retry lock will block the currently executing thread. Note: Using thread blocking is not recommended (inherited from: udm.Environment.lockRetryAsync)
#template.udm.Environment.lockRetryAsync=true
# Number of retry attempts. (inherited from: udm.Environment.lockRetryAttempts)
#template.udm.Environment.lockRetryAttempts=60
# Seconds to wait before retrying to obtain lock (inherited from: udm.Environment.lockRetryInterval)
#template.udm.Environment.lockRetryInterval=30
# The infrastructure components of this Environment (inherited from: udm.Environment.members)
#template.udm.Environment.members=null
# List of patch dictionaries that apply changes on the deployables. (inherited from: udm.Environment.patchDictionaries)
#template.udm.Environment.patchDictionaries=null
# If set, release conditions are not just verified before planning begins, an equivalent step is also added to the task (inherited from: udm.Environment.recheckConditionsAtDeploymentTime)
#template.udm.Environment.recheckConditionsAtDeploymentTime=true
# Recheck Conditions At Deployment Time Order (inherited from: udm.Environment.recheckConditionsAtDeploymentTimeOrder)
#template.udm.Environment.recheckConditionsAtDeploymentTimeOrder=9
# The SMTP server used to send mails with when deploying to this Environment. (inherited from: udm.Environment.smtpServer)
#template.udm.Environment.smtpServer=null
# Triggers to fire for deployments carried out to environment (inherited from: udm.Environment.triggers)
#template.udm.Environment.triggers=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.FileArtifact.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.FileArtifact.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.FolderArtifact.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.FolderArtifact.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.IDictionary.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.IDictionary.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.IEncryptedDictionary.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.IEncryptedDictionary.instanceName=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.LazyHost.allowConcurrentDeployments)
#template.udm.LazyHost.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.LazyHost.childTemplates=null
# How to bundle and unbundle multiple files for transfer to this host (inherited from: udm.LazyHost.copyStrategy)
#template.udm.LazyHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.LazyHost.deploymentGroup)
#template.udm.LazyHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.LazyHost.deploymentSubGroup)
#template.udm.LazyHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.LazyHost.deploymentSubSubGroup)
#template.udm.LazyHost.deploymentSubSubGroup=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.LazyHost.instanceName=null
# Operating system the host runs (inherited from: udm.LazyHost.os)
#template.udm.LazyHost.os=null
# Protocol to use when connecting to this host (inherited from: udm.LazyHost.protocol)
#template.udm.LazyHost.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: udm.LazyHost.satellite)
#template.udm.LazyHost.satellite=null
# Executable shell program (inherited from: udm.LazyHost.shell)
#template.udm.LazyHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: udm.LazyHost.stagingDirectoryPath)
#template.udm.LazyHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.LazyHost.tags)
#template.udm.LazyHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: udm.LazyHost.temporaryDirectoryPath)
#template.udm.LazyHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: udm.LazyHost.tmpDeleteOnDisconnect)
#template.udm.LazyHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: udm.LazyHost.tmpFileCreationRetries)
#template.udm.LazyHost.tmpFileCreationRetries=1000
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Parameters.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Parameters.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.PatchDictionary.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.PatchDictionary.instanceName=null
# The application this version belongs to. (inherited from: udm.ProvisioningPackage.application)
#template.udm.ProvisioningPackage.application=null
# The versions of other applications that this package depends on, as a mapping from application name to version range (inherited from: udm.ProvisioningPackage.applicationDependencies)
#template.udm.ProvisioningPackage.applicationDependencies=null
# The set of CI bound templates. (inherited from: udm.ProvisioningPackage.boundTemplates)
#template.udm.ProvisioningPackage.boundTemplates=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.ProvisioningPackage.childTemplates=null
# The resolution to use for application dependencies when deploying this application. Should be 'LATEST' or 'EXISTING'. A placeholder can be used. (inherited from: udm.ProvisioningPackage.dependencyResolution)
#template.udm.ProvisioningPackage.dependencyResolution=LATEST
# The set of provisionables and deployables that are part of this package (inherited from: udm.ProvisioningPackage.deployables)
#template.udm.ProvisioningPackage.deployables=null
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.ProvisioningPackage.exportAllPasswords)
#template.udm.ProvisioningPackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.ProvisioningPackage.exportOnlyPasswordPlaceholders)
#template.udm.ProvisioningPackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.ProvisioningPackage.ignoreUndefinedPropertiesInManifest)
#template.udm.ProvisioningPackage.ignoreUndefinedPropertiesInManifest=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.ProvisioningPackage.instanceName=null
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.ProvisioningPackage.orchestrator)
#template.udm.ProvisioningPackage.orchestrator=null
# The set of CI templates. (inherited from: udm.ProvisioningPackage.templates)
#template.udm.ProvisioningPackage.templates=null
# Whether to undeploy direct or transient dependencies of this application. Dependency is undeployed if there are not other application that depend on it. Should be 'true' or 'false'. A placeholder can be used. (inherited from: udm.ProvisioningPackage.undeployDependencies)
#template.udm.ProvisioningPackage.undeployDependencies=false
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.SourceArtifact.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.SourceArtifact.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Taggable.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Taggable.instanceName=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Template.childTemplates=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Template.instanceName=null
# The application this version belongs to. (inherited from: udm.Version.application)
#template.udm.Version.application=null
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.udm.Version.childTemplates=null
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.Version.exportAllPasswords)
#template.udm.Version.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.Version.exportOnlyPasswordPlaceholders)
#template.udm.Version.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.Version.ignoreUndefinedPropertiesInManifest)
#template.udm.Version.ignoreUndefinedPropertiesInManifest=true
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.udm.Version.instanceName=null
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.Version.orchestrator)
#template.udm.Version.orchestrator=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: www.ApacheHttpdServer.allowConcurrentDeployments)
#template.www.ApacheHttpdServer.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.www.ApacheHttpdServer.childTemplates=null
# The directory into which Apache configuration files (for virtual host definitions) should be written (inherited from: www.ApacheHttpdServer.configurationFragmentDirectory)
#template.www.ApacheHttpdServer.configurationFragmentDirectory=null
# The directory in which document roots for virtual hosts should be created. Web content deployed without a virtual host will also be copied into this directory (inherited from: www.ApacheHttpdServer.defaultDocumentRoot)
#template.www.ApacheHttpdServer.defaultDocumentRoot=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: www.ApacheHttpdServer.deploymentGroup)
#template.www.ApacheHttpdServer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: www.ApacheHttpdServer.deploymentSubGroup)
#template.www.ApacheHttpdServer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: www.ApacheHttpdServer.deploymentSubSubGroup)
#template.www.ApacheHttpdServer.deploymentSubSubGroup=null
# Environment variables for container (inherited from: www.ApacheHttpdServer.envVars)
#template.www.ApacheHttpdServer.envVars=null
# Host upon which the container resides (inherited from: www.ApacheHttpdServer.host)
#template.www.ApacheHttpdServer.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: www.ApacheHttpdServer.inspectClasspathResources)
#template.www.ApacheHttpdServer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: www.ApacheHttpdServer.inspectScript)
#template.www.ApacheHttpdServer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheHttpdServer.inspectTemplateClasspathResources)
#template.www.ApacheHttpdServer.inspectTemplateClasspathResources=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.www.ApacheHttpdServer.instanceName=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: www.ApacheHttpdServer.restartClasspathResources)
#template.www.ApacheHttpdServer.restartClasspathResources=null
# The command to restart Apache. If left blank, reload command is used. If reload command is also blank than the sequence 'stop, start' is used. Arguments containing spaces are not supported (inherited from: www.ApacheHttpdServer.restartCommand)
#template.www.ApacheHttpdServer.restartCommand=null
# The order of the restart container step in the step list. (inherited from: www.ApacheHttpdServer.restartOrder)
#template.www.ApacheHttpdServer.restartOrder=90
# The command to restart or reload Apache. If left blank, the sequence 'stop, start' is used. Arguments containing spaces are not supported (inherited from: www.ApacheHttpdServer.restartScript)
#template.www.ApacheHttpdServer.restartScript=<#assign restart=(container.restartCommand)!''><#if restart != ''>www/apache/restart<#else>www/apache/stopstart</#if>
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheHttpdServer.restartTemplateClasspathResources)
#template.www.ApacheHttpdServer.restartTemplateClasspathResources=null
# Duration (in secs) to wait after the restart server step has been executed (inherited from: www.ApacheHttpdServer.restartWaitTime)
#template.www.ApacheHttpdServer.restartWaitTime=10
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: www.ApacheHttpdServer.startClasspathResources)
#template.www.ApacheHttpdServer.startClasspathResources=null
# The command to start Apache. Arguments containing spaces are not supported (inherited from: www.ApacheHttpdServer.startCommand)
#template.www.ApacheHttpdServer.startCommand=null
# The order of the start container step in the step list. (inherited from: www.ApacheHttpdServer.startOrder)
#template.www.ApacheHttpdServer.startOrder=90
# The command to start Apache. Arguments containing spaces are not supported (inherited from: www.ApacheHttpdServer.startScript)
#template.www.ApacheHttpdServer.startScript=www/apache/start
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheHttpdServer.startTemplateClasspathResources)
#template.www.ApacheHttpdServer.startTemplateClasspathResources=null
# Duration (in secs) to wait after the start server step has been executed (inherited from: www.ApacheHttpdServer.startWaitTime)
#template.www.ApacheHttpdServer.startWaitTime=10
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: www.ApacheHttpdServer.stopClasspathResources)
#template.www.ApacheHttpdServer.stopClasspathResources=null
# The command to stop Apache. Arguments containing spaces are not supported (inherited from: www.ApacheHttpdServer.stopCommand)
#template.www.ApacheHttpdServer.stopCommand=null
# The order of the stop container step in the step list. (inherited from: www.ApacheHttpdServer.stopOrder)
#template.www.ApacheHttpdServer.stopOrder=10
# The command to stop Apache. Arguments containing spaces are not supported (inherited from: www.ApacheHttpdServer.stopScript)
#template.www.ApacheHttpdServer.stopScript=www/apache/stop
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: www.ApacheHttpdServer.stopStartRestartConnection)
#template.www.ApacheHttpdServer.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheHttpdServer.stopTemplateClasspathResources)
#template.www.ApacheHttpdServer.stopTemplateClasspathResources=null
# Duration (in secs) to wait after the stop server step has been executed (inherited from: www.ApacheHttpdServer.stopWaitTime)
#template.www.ApacheHttpdServer.stopWaitTime=10
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: www.ApacheHttpdServer.tags)
#template.www.ApacheHttpdServer.tags=null
# Address where the satellite can be reached. (inherited from: xl.Satellite.address)
#template.xl.Satellite.address=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: xl.Satellite.allowConcurrentDeployments)
#template.xl.Satellite.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.xl.Satellite.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.Satellite.deploymentGroup)
#template.xl.Satellite.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.Satellite.deploymentSubGroup)
#template.xl.Satellite.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.Satellite.deploymentSubSubGroup)
#template.xl.Satellite.deploymentSubSubGroup=null
# Enable encrypted communication. (inherited from: xl.Satellite.encrypted)
#template.xl.Satellite.encrypted=false
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.xl.Satellite.instanceName=null
# Port where the satellite is listening. (inherited from: xl.Satellite.protocolPort)
#template.xl.Satellite.protocolPort=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: xl.Satellite.tags)
#template.xl.Satellite.tags=null
# Address where the satellite can be reached. (inherited from: xl.SatelliteGroup.address)
#template.xl.SatelliteGroup.address=none
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: xl.SatelliteGroup.allowConcurrentDeployments)
#template.xl.SatelliteGroup.allowConcurrentDeployments=true
# Child templates associated with this template. (inherited from: udm.Template.childTemplates)
#template.xl.SatelliteGroup.childTemplates=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.SatelliteGroup.deploymentGroup)
#template.xl.SatelliteGroup.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.SatelliteGroup.deploymentSubGroup)
#template.xl.SatelliteGroup.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.SatelliteGroup.deploymentSubSubGroup)
#template.xl.SatelliteGroup.deploymentSubSubGroup=null
# Enable encrypted communication. (inherited from: xl.SatelliteGroup.encrypted)
#template.xl.SatelliteGroup.encrypted=null
# Name that the created instance of this template will have. If not specified, the instance name will be generated based on the template name and provisioning ID. (inherited from: udm.Template.instanceName)
#template.xl.SatelliteGroup.instanceName=null
# Port where the satellite is listening. (inherited from: xl.SatelliteGroup.protocolPort)
#template.xl.SatelliteGroup.protocolPort=0
# Satellites (inherited from: xl.SatelliteGroup.satellites)
#template.xl.SatelliteGroup.satellites=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: xl.SatelliteGroup.tags)
#template.xl.SatelliteGroup.tags=null
# Mail body content should be sent as HTML
#trigger.EmailNotification.sendContentAsHtml=false
# Actions to execute when specified state transition occurs. (inherited from: trigger.Trigger.actions)
#trigger.StepTrigger.actions=null
# Trigger actions when the Step transitions from this state.
#trigger.StepTrigger.fromState=ANY
# Actions to execute when specified state transition occurs. (inherited from: trigger.Trigger.actions)
#trigger.TaskTrigger.actions=null
# Trigger actions when the Task transitions from this state.
#trigger.TaskTrigger.fromState=ANY
# The latest application version number as the highest udm.Version name sorted in lexicographical ordering.
#udm.Application.lastVersion=
# If true, permissions for changing checklist requirements will be checked on import
#udm.Application.verifyChecklistPermissionsOnCreate=null
# The (embedded) deployed which contains this embedded deployed. (inherited from: udm.BaseEmbeddedDeployed.container)
#udm.BaseAppliedProvisioner.container=null
# The embedded deployable that this embedded deployed is derived from. (inherited from: udm.BaseEmbeddedDeployed.deployable)
#udm.BaseAppliedProvisioner.deployable=null
# The (embedded) deployed which contains this embedded deployed. (inherited from: udm.EmbeddedDeployedArtifact.container)
#udm.BaseAppliedProvisionerArtifact.container=null
# The embedded deployable that this embedded deployed is derived from. (inherited from: udm.EmbeddedDeployedArtifact.deployable)
#udm.BaseAppliedProvisionerArtifact.deployable=null
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: udm.EmbeddedDeployedArtifact.placeholders)
#udm.BaseAppliedProvisionerArtifact.placeholders=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed
#udm.BaseContainer.allowConcurrentDeployments=true
# The set of CI templates.
#udm.BaseDeployable.boundTemplates=null
# The set of CI templates. (inherited from: udm.BaseDeployableFileArtifact.boundTemplates)
#udm.BaseDeployableArchiveArtifact.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableFileArtifact.checksum)
#udm.BaseDeployableArchiveArtifact.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableFileArtifact.credentials)
#udm.BaseDeployableArchiveArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableFileArtifact.delimiters)
#udm.BaseDeployableArchiveArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableFileArtifact.excludeFileNamesRegex)
#udm.BaseDeployableArchiveArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableFileArtifact.fileEncodings)
#udm.BaseDeployableArchiveArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableFileArtifact.fileUri)
#udm.BaseDeployableArchiveArtifact.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableFileArtifact.isRescanned)
#udm.BaseDeployableArchiveArtifact.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableFileArtifact.placeholders)
#udm.BaseDeployableArchiveArtifact.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableFileArtifact.preScannedPlaceholders)
#udm.BaseDeployableArchiveArtifact.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableFileArtifact.proxySettings)
#udm.BaseDeployableArchiveArtifact.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported
#udm.BaseDeployableArchiveArtifact.scanPlaceholders=false
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableFileArtifact.tags)
#udm.BaseDeployableArchiveArtifact.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableFileArtifact.textFileNamesRegex)
#udm.BaseDeployableArchiveArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#udm.BaseDeployableArtifact.boundTemplates=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter
#udm.BaseDeployableArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings
#udm.BaseDeployableArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Indicates if the artifact has been rescanned
#udm.BaseDeployableArtifact.isRescanned=false
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set)
#udm.BaseDeployableArtifact.preScannedPlaceholders=false
# Whether to scan this artifact to replace placeholders when it is imported
#udm.BaseDeployableArtifact.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#udm.BaseDeployableArtifact.tags=null
# Regular expression that matches file names of text files
#udm.BaseDeployableArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#udm.BaseDeployableContainer.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#udm.BaseDeployableContainer.tags=null
# The set of CI templates. (inherited from: udm.BaseDeployableArtifact.boundTemplates)
#udm.BaseDeployableFileArtifact.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArtifact.checksum)
#udm.BaseDeployableFileArtifact.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArtifact.credentials)
#udm.BaseDeployableFileArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArtifact.delimiters)
#udm.BaseDeployableFileArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArtifact.excludeFileNamesRegex)
#udm.BaseDeployableFileArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArtifact.fileEncodings)
#udm.BaseDeployableFileArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArtifact.fileUri)
#udm.BaseDeployableFileArtifact.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArtifact.isRescanned)
#udm.BaseDeployableFileArtifact.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArtifact.placeholders)
#udm.BaseDeployableFileArtifact.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArtifact.preScannedPlaceholders)
#udm.BaseDeployableFileArtifact.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArtifact.proxySettings)
#udm.BaseDeployableFileArtifact.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArtifact.scanPlaceholders)
#udm.BaseDeployableFileArtifact.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArtifact.tags)
#udm.BaseDeployableFileArtifact.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArtifact.textFileNamesRegex)
#udm.BaseDeployableFileArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of CI templates. (inherited from: udm.BaseDeployableArtifact.boundTemplates)
#udm.BaseDeployableFolderArtifact.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.BaseDeployableArtifact.checksum)
#udm.BaseDeployableFolderArtifact.checksum=null
# Credentials of the URI. (inherited from: udm.BaseDeployableArtifact.credentials)
#udm.BaseDeployableFolderArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.BaseDeployableArtifact.delimiters)
#udm.BaseDeployableFolderArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.BaseDeployableArtifact.excludeFileNamesRegex)
#udm.BaseDeployableFolderArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.BaseDeployableArtifact.fileEncodings)
#udm.BaseDeployableFolderArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.BaseDeployableArtifact.fileUri)
#udm.BaseDeployableFolderArtifact.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: udm.BaseDeployableArtifact.isRescanned)
#udm.BaseDeployableFolderArtifact.isRescanned=false
# Placeholders detected in this artifact (inherited from: udm.BaseDeployableArtifact.placeholders)
#udm.BaseDeployableFolderArtifact.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: udm.BaseDeployableArtifact.preScannedPlaceholders)
#udm.BaseDeployableFolderArtifact.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: udm.BaseDeployableArtifact.proxySettings)
#udm.BaseDeployableFolderArtifact.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: udm.BaseDeployableArtifact.scanPlaceholders)
#udm.BaseDeployableFolderArtifact.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployableArtifact.tags)
#udm.BaseDeployableFolderArtifact.tags=null
# Regular expression that matches file names of text files (inherited from: udm.BaseDeployableArtifact.textFileNamesRegex)
#udm.BaseDeployableFolderArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of created CIs.
#udm.BaseDeployed.boundConfigurationItems=null
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#udm.BaseDeployedArtifact.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#udm.BaseDeployedArtifact.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#udm.BaseDeployedArtifact.deployable=null
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#udm.BaseDeployedContainer.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#udm.BaseDeployedContainer.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#udm.BaseDeployedContainer.deployable=null
# If true, XL Deploy will automatically create a dictionary containing the output variables and add it to the environment.
#udm.BaseDeployedInfrastructureAsCode.automaticDictionary=true
# The set of created CIs. (inherited from: udm.BaseDeployedArtifact.boundConfigurationItems)
#udm.BaseDeployedInfrastructureAsCode.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployedArtifact.container)
#udm.BaseDeployedInfrastructureAsCode.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployedArtifact.deployable)
#udm.BaseDeployedInfrastructureAsCode.deployable=null
# Path to the dictionary containing the output variables. If empty, the dictionary name will be the name of the template concatenated with -dictionary. If you specify a dictionary name, it will be created in the same folder as the target environment or in the folder specified for the new environment. You can also specify a full path starting with 'Environments/'.
#udm.BaseDeployedInfrastructureAsCode.dictionaryPath=
# Path to the new environment. If empty, the generated CIs will be added to the target environment. If you specify an environment name, the new environment will be created in the same folder as the target environment. If you specify a folder and an environment name, they will be created in the same folder as the target environment. You can also specify a full path starting with 'Environments/'.
#udm.BaseDeployedInfrastructureAsCode.environmentPath=
# If true, XL Deploy will automatically create CIs based on resources that are deployed.
#udm.BaseDeployedInfrastructureAsCode.generateCIsFromResources=true
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: udm.BaseDeployedArtifact.placeholders)
#udm.BaseDeployedInfrastructureAsCode.placeholders=null
# The set of CI templates. (inherited from: udm.BaseDeployable.boundTemplates)
#udm.BaseProvisionable.boundTemplates=null
# Number of instances to launch.
#udm.BaseProvisionable.cardinality=1
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: udm.BaseDeployable.tags)
#udm.BaseProvisionable.tags=null
# The set of created CIs. (inherited from: udm.BaseDeployed.boundConfigurationItems)
#udm.BaseProvisioned.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployed.container)
#udm.BaseProvisioned.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployed.deployable)
#udm.BaseProvisioned.deployable=null
# The index of the cardinality amount created provisioneds.
#udm.BaseProvisioned.ordinal=1
# The set of created CIs. (inherited from: udm.BaseDeployedContainer.boundConfigurationItems)
#udm.BaseProvisionedContainer.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: udm.BaseDeployedContainer.container)
#udm.BaseProvisionedContainer.container=null
# The deployable that this deployed is derived from. (inherited from: udm.BaseDeployedContainer.deployable)
#udm.BaseProvisionedContainer.deployable=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentGroup)
#udm.BaseProvisionedContainer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentSubGroup)
#udm.BaseProvisionedContainer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseDeployedContainer.deploymentSubSubGroup)
#udm.BaseProvisionedContainer.deploymentSubSubGroup=null
# The index of the cardinality amount created provisioneds.
#udm.BaseProvisionedContainer.ordinal=1
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseDeployedContainer.tags)
#udm.BaseProvisionedContainer.tags=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: udm.EmbeddedDeployableArtifact.checksum)
#udm.BaseProvisionerArtifact.checksum=null
# Credentials (inherited from: udm.EmbeddedDeployableArtifact.credentials)
#udm.BaseProvisionerArtifact.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: udm.EmbeddedDeployableArtifact.delimiters)
#udm.BaseProvisionerArtifact.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: udm.EmbeddedDeployableArtifact.excludeFileNamesRegex)
#udm.BaseProvisionerArtifact.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: udm.EmbeddedDeployableArtifact.fileEncodings)
#udm.BaseProvisionerArtifact.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: udm.EmbeddedDeployableArtifact.fileUri)
#udm.BaseProvisionerArtifact.fileUri=null
# Placeholders detected in this artifact (inherited from: udm.EmbeddedDeployableArtifact.placeholders)
#udm.BaseProvisionerArtifact.placeholders=null
# Credentials (inherited from: udm.EmbeddedDeployableArtifact.proxySettings)
#udm.BaseProvisionerArtifact.proxySettings=null
# Whether to scan this artifact for placeholders when it is imported (inherited from: udm.EmbeddedDeployableArtifact.scanPlaceholders)
#udm.BaseProvisionerArtifact.scanPlaceholders=true
# Regular expression that matches file names of text files (inherited from: udm.EmbeddedDeployableArtifact.textFileNamesRegex)
#udm.BaseProvisionerArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The application this version belongs to. (inherited from: udm.Version.application)
#udm.CompositePackage.application=null
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.Version.exportAllPasswords)
#udm.CompositePackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.Version.exportOnlyPasswordPlaceholders)
#udm.CompositePackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.Version.ignoreUndefinedPropertiesInManifest)
#udm.CompositePackage.ignoreUndefinedPropertiesInManifest=true
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.Version.orchestrator)
#udm.CompositePackage.orchestrator=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed
#udm.DeployedApplication.allowConcurrentDeployments=true
# Deployment overrides existing application completely.
#udm.DeployedApplication.forceRedeploy=false
# Process failed tasks on CI according to the defined policy. (inherited from: udm.BaseConfigurationItemWithPolicies.onFailurePolicy)
#udm.DeployedApplication.onFailurePolicy=null
# Process successful tasks on CI according to the defined policy. (inherited from: udm.BaseConfigurationItemWithPolicies.onSuccessPolicy)
#udm.DeployedApplication.onSuccessPolicy=null
# Optimize the generated plan after orchestration.
#udm.DeployedApplication.optimizePlan=true
# Undeploy direct or transient dependencies of this application. A dependent application is undeployed if no other applications depend on it.
#udm.DeployedApplication.undeployDependencies=false
# The application this version belongs to. (inherited from: udm.Version.application)
#udm.DeploymentPackage.application=null
# The resolution to use for application dependencies when deploying this application. Should be 'LATEST' or 'EXISTING'. A placeholder can be used.
#udm.DeploymentPackage.dependencyResolution=LATEST
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.Version.exportAllPasswords)
#udm.DeploymentPackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.Version.exportOnlyPasswordPlaceholders)
#udm.DeploymentPackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.Version.ignoreUndefinedPropertiesInManifest)
#udm.DeploymentPackage.ignoreUndefinedPropertiesInManifest=true
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.Version.orchestrator)
#udm.DeploymentPackage.orchestrator=null
# Whether to undeploy direct or transient dependencies of this application. Dependency is undeployed if there are not other application that depend on it. Should be 'true' or 'false'. A placeholder can be used.
#udm.DeploymentPackage.undeployDependencies=false
# Only apply this dictionary to the applications mentioned (inherited from: udm.AbstractDictionary.restrictToApplications)
#udm.Dictionary.restrictToApplications=null
# Only apply this dictionary to the containers mentioned (inherited from: udm.AbstractDictionary.restrictToContainers)
#udm.Dictionary.restrictToContainers=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter
#udm.EmbeddedDeployableArtifact.delimiters={{ }}
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings
#udm.EmbeddedDeployableArtifact.fileEncodings=.+\.properties:ISO-8859-1
# Whether to scan this artifact for placeholders when it is imported
#udm.EmbeddedDeployableArtifact.scanPlaceholders=true
# Regular expression that matches file names of text files
#udm.EmbeddedDeployableArtifact.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The (embedded) deployed which contains this embedded deployed. (inherited from: udm.BaseEmbeddedDeployed.container)
#udm.EmbeddedDeployedArtifact.container=null
# The embedded deployable that this embedded deployed is derived from. (inherited from: udm.BaseEmbeddedDeployed.deployable)
#udm.EmbeddedDeployedArtifact.deployable=null
# The encrypted dictionary entries
#udm.EncryptedDictionary.encryptedEntries=null
# The dictionary entries (inherited from: udm.Dictionary.entries)
#udm.EncryptedDictionary.entries=null
# Only apply this dictionary to the applications mentioned (inherited from: udm.Dictionary.restrictToApplications)
#udm.EncryptedDictionary.restrictToApplications=null
# Only apply this dictionary to the containers mentioned (inherited from: udm.Dictionary.restrictToContainers)
#udm.EncryptedDictionary.restrictToContainers=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed
#udm.Environment.allowConcurrentDeployments=true
# If set, will continually try to obtain lock
#udm.Environment.enableLockRetry=false
# If set, will lock all container in environment
#udm.Environment.lockAllContainersInEnvironment=false
# If set to false, retry lock will block the currently executing thread. Note: Using thread blocking is not recommended
#udm.Environment.lockRetryAsync=true
# Number of retry attempts.
#udm.Environment.lockRetryAttempts=60
# Seconds to wait before retrying to obtain lock
#udm.Environment.lockRetryInterval=30
# If set, release conditions are not just verified before planning begins, an equivalent step is also added to the task
#udm.Environment.recheckConditionsAtDeploymentTime=true
# Recheck Conditions At Deployment Time Order
#udm.Environment.recheckConditionsAtDeploymentTimeOrder=9
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: overthere.Host.allowConcurrentDeployments)
#udm.LazyHost.allowConcurrentDeployments=true
# How to bundle and unbundle multiple files for transfer to this host (inherited from: overthere.Host.copyStrategy)
#udm.LazyHost.copyStrategy=null
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentGroup)
#udm.LazyHost.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubGroup)
#udm.LazyHost.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: overthere.Host.deploymentSubSubGroup)
#udm.LazyHost.deploymentSubSubGroup=null
# Operating system the host runs (inherited from: overthere.Host.os)
#udm.LazyHost.os=null
# Protocol to use when connecting to this host (inherited from: overthere.Host.protocol)
#udm.LazyHost.protocol=null
# Instance of xl-satellite that can manage this host. (inherited from: overthere.Host.satellite)
#udm.LazyHost.satellite=null
# Executable shell program (inherited from: overthere.Host.shell)
#udm.LazyHost.shell=null
# Directory into which staged files are stored. Will be cleaned up when the task is finished. (inherited from: overthere.Host.stagingDirectoryPath)
#udm.LazyHost.stagingDirectoryPath=null
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: overthere.Host.tags)
#udm.LazyHost.tags=null
# Directory into which temporary files are stored. Will be cleaned up when the connection is closed. (inherited from: overthere.Host.temporaryDirectoryPath)
#udm.LazyHost.temporaryDirectoryPath=null
# If true, delete the temporary connection directory when the connection is closed (inherited from: overthere.Host.tmpDeleteOnDisconnect)
#udm.LazyHost.tmpDeleteOnDisconnect=true
# Number of times Overthere attempts to create a temporary file with a unique name (inherited from: overthere.Host.tmpFileCreationRetries)
#udm.LazyHost.tmpFileCreationRetries=1000
# The application this version belongs to. (inherited from: udm.DeploymentPackage.application)
#udm.ProvisioningPackage.application=null
# The versions of other applications that this package depends on, as a mapping from application name to version range (inherited from: udm.DeploymentPackage.applicationDependencies)
#udm.ProvisioningPackage.applicationDependencies=null
# The set of CI bound templates. (inherited from: udm.DeploymentPackage.boundTemplates)
#udm.ProvisioningPackage.boundTemplates=null
# The resolution to use for application dependencies when deploying this application. Should be 'LATEST' or 'EXISTING'. A placeholder can be used. (inherited from: udm.DeploymentPackage.dependencyResolution)
#udm.ProvisioningPackage.dependencyResolution=LATEST
# The set of deployables that are part of this package (inherited from: udm.DeploymentPackage.deployables)
#udm.ProvisioningPackage.deployables=null
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered. (inherited from: udm.DeploymentPackage.exportAllPasswords)
#udm.ProvisioningPackage.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package. (inherited from: udm.DeploymentPackage.exportOnlyPasswordPlaceholders)
#udm.ProvisioningPackage.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package. (inherited from: udm.DeploymentPackage.ignoreUndefinedPropertiesInManifest)
#udm.ProvisioningPackage.ignoreUndefinedPropertiesInManifest=true
# The orchestrators that are used to create the deployment plan. Orchestrators will be applied in order. (inherited from: udm.DeploymentPackage.orchestrator)
#udm.ProvisioningPackage.orchestrator=null
# The set of CI templates. (inherited from: udm.DeploymentPackage.templates)
#udm.ProvisioningPackage.templates=null
# Whether to undeploy direct or transient dependencies of this application. Dependency is undeployed if there are not other application that depend on it. Should be 'true' or 'false'. A placeholder can be used. (inherited from: udm.DeploymentPackage.undeployDependencies)
#udm.ProvisioningPackage.undeployDependencies=false
# If this is true, all password properties are exported as plaintext while exporting the package. If false, exportOnlyPasswordPlaceholders is considered.
#udm.Version.exportAllPasswords=false
# If this is true, all password properties whose value starts and ends with double curly braces are exported as plaintext. Else, the password values are discarded while exporting the package.
#udm.Version.exportOnlyPasswordPlaceholders=true
# Whether to ignore all the undefined properties used in the manifest or to raise an error, while importing a package.
#udm.Version.ignoreUndefinedPropertiesInManifest=true
# The set of CI templates. (inherited from: generic.File.boundTemplates)
#www.ApacheConfFile.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: generic.File.checksum)
#www.ApacheConfFile.checksum=null
# Credentials of the URI. (inherited from: generic.File.credentials)
#www.ApacheConfFile.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: generic.File.delimiters)
#www.ApacheConfFile.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: generic.File.excludeFileNamesRegex)
#www.ApacheConfFile.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: generic.File.fileEncodings)
#www.ApacheConfFile.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: generic.File.fileUri)
#www.ApacheConfFile.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: generic.File.isRescanned)
#www.ApacheConfFile.isRescanned=false
# Placeholders detected in this artifact (inherited from: generic.File.placeholders)
#www.ApacheConfFile.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: generic.File.preScannedPlaceholders)
#www.ApacheConfFile.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: generic.File.proxySettings)
#www.ApacheConfFile.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: generic.File.scanPlaceholders)
#www.ApacheConfFile.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: generic.File.tags)
#www.ApacheConfFile.tags=null
# Regular expression that matches file names of text files (inherited from: generic.File.textFileNamesRegex)
#www.ApacheConfFile.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# The set of created CIs. (inherited from: generic.ProcessedTemplate.boundConfigurationItems)
#www.ApacheConfFragment.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.ProcessedTemplate.container)
#www.ApacheConfFragment.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.createOptions)
#www.ApacheConfFragment.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.ProcessedTemplate.createOrder)
#www.ApacheConfFragment.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.ProcessedTemplate.createTargetDirectory)
#www.ApacheConfFragment.createTargetDirectory=false
# Create Verb
#www.ApacheConfFragment.createVerb=Deploy
# The deployable that this deployed is derived from. (inherited from: generic.ProcessedTemplate.deployable)
#www.ApacheConfFragment.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.destroyOptions)
#www.ApacheConfFragment.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.ProcessedTemplate.destroyOrder)
#www.ApacheConfFragment.destroyOrder=40
# Destroy Verb
#www.ApacheConfFragment.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.ProcessedTemplate.inspectClasspathResources)
#www.ApacheConfFragment.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.ProcessedTemplate.inspectScript)
#www.ApacheConfFragment.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.ProcessedTemplate.inspectTemplateClasspathResources)
#www.ApacheConfFragment.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.modifyOptions)
#www.ApacheConfFragment.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.ProcessedTemplate.modifyOrder)
#www.ApacheConfFragment.modifyOrder=50
# Modify Verb (inherited from: generic.ProcessedTemplate.modifyVerb)
#www.ApacheConfFragment.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.ProcessedTemplate.noopOptions)
#www.ApacheConfFragment.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.ProcessedTemplate.noopOrder)
#www.ApacheConfFragment.noopOrder=50
# Noop Verb (inherited from: generic.ProcessedTemplate.noopVerb)
#www.ApacheConfFragment.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed.
#www.ApacheConfFragment.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.ProcessedTemplate.restartRequiredForNoop)
#www.ApacheConfFragment.restartRequiredForNoop=false
# Target directory name
#www.ApacheConfFragment.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.ProcessedTemplate.targetDirectoryShared)
#www.ApacheConfFragment.targetDirectoryShared=true
# Target file name
#www.ApacheConfFragment.targetFile=${deployed.name}.conf
# Configuration fragment template file name.
#www.ApacheConfFragment.template=www/apache/${deployed.type}.conf.ftl
# The set of CI templates. (inherited from: generic.Resource.boundTemplates)
#www.ApacheConfFragmentSpec.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: generic.Resource.tags)
#www.ApacheConfFragmentSpec.tags=null
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: generic.Container.allowConcurrentDeployments)
#www.ApacheHttpdServer.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentGroup)
#www.ApacheHttpdServer.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentSubGroup)
#www.ApacheHttpdServer.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: generic.Container.deploymentSubSubGroup)
#www.ApacheHttpdServer.deploymentSubSubGroup=null
# Environment variables for container (inherited from: generic.Container.envVars)
#www.ApacheHttpdServer.envVars=null
# Host upon which the container resides (inherited from: generic.Container.host)
#www.ApacheHttpdServer.host=null
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.Container.inspectClasspathResources)
#www.ApacheHttpdServer.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.Container.inspectScript)
#www.ApacheHttpdServer.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.inspectTemplateClasspathResources)
#www.ApacheHttpdServer.inspectTemplateClasspathResources=null
# Additional classpath resources that should be uploaded to the working directory before executing the restart script. (inherited from: generic.Container.restartClasspathResources)
#www.ApacheHttpdServer.restartClasspathResources=null
# The order of the restart container step in the step list. (inherited from: generic.Container.restartOrder)
#www.ApacheHttpdServer.restartOrder=90
# The command to restart or reload Apache. If left blank, the sequence 'stop, start' is used. Arguments containing spaces are not supported
#www.ApacheHttpdServer.restartScript=<#assign restart=(container.restartCommand)!''><#if restart != ''>www/apache/restart<#else>www/apache/stopstart</#if>
# Additional template classpath resources that should be uploaded to the working directory before executing the restart script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.restartTemplateClasspathResources)
#www.ApacheHttpdServer.restartTemplateClasspathResources=null
# Duration (in secs) to wait after the restart server step has been executed
#www.ApacheHttpdServer.restartWaitTime=10
# Additional classpath resources that should be uploaded to the working directory before executing the start script. (inherited from: generic.Container.startClasspathResources)
#www.ApacheHttpdServer.startClasspathResources=null
# The order of the start container step in the step list. (inherited from: generic.Container.startOrder)
#www.ApacheHttpdServer.startOrder=90
# The command to start Apache. Arguments containing spaces are not supported
#www.ApacheHttpdServer.startScript=www/apache/start
# Additional template classpath resources that should be uploaded to the working directory before executing the start script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.startTemplateClasspathResources)
#www.ApacheHttpdServer.startTemplateClasspathResources=null
# Duration (in secs) to wait after the start server step has been executed
#www.ApacheHttpdServer.startWaitTime=10
# Additional classpath resources that should be uploaded to the working directory before executing the stop script. (inherited from: generic.Container.stopClasspathResources)
#www.ApacheHttpdServer.stopClasspathResources=null
# The order of the stop container step in the step list. (inherited from: generic.Container.stopOrder)
#www.ApacheHttpdServer.stopOrder=10
# The command to stop Apache. Arguments containing spaces are not supported
#www.ApacheHttpdServer.stopScript=www/apache/stop
# If set, the connection settings to use to connect to the target system to execute start, stop, restart etc. operations for the container. (inherited from: generic.Container.stopStartRestartConnection)
#www.ApacheHttpdServer.stopStartRestartConnection=null
# Additional template classpath resources that should be uploaded to the working directory before executing the stop script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.Container.stopTemplateClasspathResources)
#www.ApacheHttpdServer.stopTemplateClasspathResources=null
# Duration (in secs) to wait after the stop server step has been executed
#www.ApacheHttpdServer.stopWaitTime=10
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: generic.Container.tags)
#www.ApacheHttpdServer.tags=null
# The set of created CIs. (inherited from: www.ApacheConfFragment.boundConfigurationItems)
#www.ApacheProxyPass.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: www.ApacheConfFragment.container)
#www.ApacheProxyPass.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.createOptions)
#www.ApacheProxyPass.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: www.ApacheConfFragment.createOrder)
#www.ApacheProxyPass.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: www.ApacheConfFragment.createTargetDirectory)
#www.ApacheProxyPass.createTargetDirectory=false
# Create Verb (inherited from: www.ApacheConfFragment.createVerb)
#www.ApacheProxyPass.createVerb=Deploy
# The deployable that this deployed is derived from. (inherited from: www.ApacheConfFragment.deployable)
#www.ApacheProxyPass.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.destroyOptions)
#www.ApacheProxyPass.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: www.ApacheConfFragment.destroyOrder)
#www.ApacheProxyPass.destroyOrder=40
# Destroy Verb (inherited from: www.ApacheConfFragment.destroyVerb)
#www.ApacheProxyPass.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: www.ApacheConfFragment.inspectClasspathResources)
#www.ApacheProxyPass.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: www.ApacheConfFragment.inspectScript)
#www.ApacheProxyPass.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheConfFragment.inspectTemplateClasspathResources)
#www.ApacheProxyPass.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.modifyOptions)
#www.ApacheProxyPass.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: www.ApacheConfFragment.modifyOrder)
#www.ApacheProxyPass.modifyOrder=50
# Modify Verb (inherited from: www.ApacheConfFragment.modifyVerb)
#www.ApacheProxyPass.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.noopOptions)
#www.ApacheProxyPass.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: www.ApacheConfFragment.noopOrder)
#www.ApacheProxyPass.noopOrder=50
# Noop Verb (inherited from: www.ApacheConfFragment.noopVerb)
#www.ApacheProxyPass.noopVerb=Modify
# The proxy parameters
#www.ApacheProxyPass.options=
# The generic container requires a restart for the action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequired)
#www.ApacheProxyPass.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequiredForNoop)
#www.ApacheProxyPass.restartRequiredForNoop=false
# Whether to set up a ProxyPassReverse also
#www.ApacheProxyPass.reverse=false
# Target directory name (inherited from: www.ApacheConfFragment.targetDirectory)
#www.ApacheProxyPass.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: www.ApacheConfFragment.targetDirectoryShared)
#www.ApacheProxyPass.targetDirectoryShared=true
# Target file name (inherited from: www.ApacheConfFragment.targetFile)
#www.ApacheProxyPass.targetFile=${deployed.name}.conf
# Configuration fragment template file name. (inherited from: www.ApacheConfFragment.template)
#www.ApacheProxyPass.template=www/apache/${deployed.type}.conf.ftl
# The set of CI templates. (inherited from: www.ApacheConfFragmentSpec.boundTemplates)
#www.ApacheProxyPassSpec.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: www.ApacheConfFragmentSpec.tags)
#www.ApacheProxyPassSpec.tags=null
# The set of created CIs. (inherited from: www.ApacheConfFragment.boundConfigurationItems)
#www.ApacheVirtualHost.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: www.ApacheConfFragment.container)
#www.ApacheVirtualHost.container=null
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.createOptions)
#www.ApacheVirtualHost.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: www.ApacheConfFragment.createOrder)
#www.ApacheVirtualHost.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: www.ApacheConfFragment.createTargetDirectory)
#www.ApacheVirtualHost.createTargetDirectory=false
# Create Verb (inherited from: www.ApacheConfFragment.createVerb)
#www.ApacheVirtualHost.createVerb=Deploy
# The deployable that this deployed is derived from. (inherited from: www.ApacheConfFragment.deployable)
#www.ApacheVirtualHost.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.destroyOptions)
#www.ApacheVirtualHost.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: www.ApacheConfFragment.destroyOrder)
#www.ApacheVirtualHost.destroyOrder=40
# Destroy Verb (inherited from: www.ApacheConfFragment.destroyVerb)
#www.ApacheVirtualHost.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: www.ApacheConfFragment.inspectClasspathResources)
#www.ApacheVirtualHost.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: www.ApacheConfFragment.inspectScript)
#www.ApacheVirtualHost.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: www.ApacheConfFragment.inspectTemplateClasspathResources)
#www.ApacheVirtualHost.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.modifyOptions)
#www.ApacheVirtualHost.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: www.ApacheConfFragment.modifyOrder)
#www.ApacheVirtualHost.modifyOrder=50
# Modify Verb (inherited from: www.ApacheConfFragment.modifyVerb)
#www.ApacheVirtualHost.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: www.ApacheConfFragment.noopOptions)
#www.ApacheVirtualHost.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: www.ApacheConfFragment.noopOrder)
#www.ApacheVirtualHost.noopOrder=50
# Noop Verb (inherited from: www.ApacheConfFragment.noopVerb)
#www.ApacheVirtualHost.noopVerb=Modify
# The generic container requires a restart for the action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequired)
#www.ApacheVirtualHost.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: www.ApacheConfFragment.restartRequiredForNoop)
#www.ApacheVirtualHost.restartRequiredForNoop=false
# Target directory name (inherited from: www.ApacheConfFragment.targetDirectory)
#www.ApacheVirtualHost.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: www.ApacheConfFragment.targetDirectoryShared)
#www.ApacheVirtualHost.targetDirectoryShared=true
# Target file name (inherited from: www.ApacheConfFragment.targetFile)
#www.ApacheVirtualHost.targetFile=${deployed.name}.conf
# Configuration fragment template file name. (inherited from: www.ApacheConfFragment.template)
#www.ApacheVirtualHost.template=www/apache/${deployed.type}.conf.ftl
# The set of CI templates. (inherited from: www.ApacheConfFragmentSpec.boundTemplates)
#www.ApacheVirtualHostSpec.boundTemplates=null
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: www.ApacheConfFragmentSpec.tags)
#www.ApacheVirtualHostSpec.tags=null
# The set of created CIs. (inherited from: generic.CopiedArtifact.boundConfigurationItems)
#www.DeployedApacheConfFile.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.CopiedArtifact.container)
#www.DeployedApacheConfFile.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: generic.CopiedArtifact.copyDirectlyToTargetPath)
#www.DeployedApacheConfFile.copyDirectlyToTargetPath=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.createOptions)
#www.DeployedApacheConfFile.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.CopiedArtifact.createOrder)
#www.DeployedApacheConfFile.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.CopiedArtifact.createTargetDirectory)
#www.DeployedApacheConfFile.createTargetDirectory=false
# Create Verb
#www.DeployedApacheConfFile.createVerb=Deploy
# The deployable that this deployed is derived from. (inherited from: generic.CopiedArtifact.deployable)
#www.DeployedApacheConfFile.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.destroyOptions)
#www.DeployedApacheConfFile.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.CopiedArtifact.destroyOrder)
#www.DeployedApacheConfFile.destroyOrder=40
# Destroy Verb
#www.DeployedApacheConfFile.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.CopiedArtifact.inspectClasspathResources)
#www.DeployedApacheConfFile.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.CopiedArtifact.inspectScript)
#www.DeployedApacheConfFile.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.CopiedArtifact.inspectTemplateClasspathResources)
#www.DeployedApacheConfFile.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.modifyOptions)
#www.DeployedApacheConfFile.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.CopiedArtifact.modifyOrder)
#www.DeployedApacheConfFile.modifyOrder=50
# Modify Verb (inherited from: generic.CopiedArtifact.modifyVerb)
#www.DeployedApacheConfFile.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.noopOptions)
#www.DeployedApacheConfFile.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.CopiedArtifact.noopOrder)
#www.DeployedApacheConfFile.noopOrder=50
# Noop Verb (inherited from: generic.CopiedArtifact.noopVerb)
#www.DeployedApacheConfFile.noopVerb=Modify
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: generic.CopiedArtifact.placeholders)
#www.DeployedApacheConfFile.placeholders=null
# If set to true, preserve the existing files on the remote host (do not delete the copied files during the destroy operation).  (inherited from: generic.CopiedArtifact.preserveExistingFiles)
#www.DeployedApacheConfFile.preserveExistingFiles=false
# The generic container requires a restart for the action performed by this deployed.
#www.DeployedApacheConfFile.restartRequired=true
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.CopiedArtifact.restartRequiredForNoop)
#www.DeployedApacheConfFile.restartRequiredForNoop=false
# Target directory name
#www.DeployedApacheConfFile.targetDirectory=${deployed.container.configurationFragmentDirectory}
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.CopiedArtifact.targetDirectoryShared)
#www.DeployedApacheConfFile.targetDirectoryShared=true
# Target file name
#www.DeployedApacheConfFile.targetFile=${deployed.name}
# If set to true, the sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. Please note that setting this option to true will cause the removal process to be a slower.  (inherited from: generic.CopiedArtifact.targetPathSharedSubDirectories)
#www.DeployedApacheConfFile.targetPathSharedSubDirectories=false
# The set of created CIs. (inherited from: generic.CopiedArtifact.boundConfigurationItems)
#www.PublishedWebContent.boundConfigurationItems=null
# The container on which this deployed runs. (inherited from: generic.CopiedArtifact.container)
#www.PublishedWebContent.container=null
# If set to true, files are directly copied to the target directory without first being uploaded to the staging or temporary directory (like versions of XL Deploy prior to 4.0.0) (inherited from: generic.CopiedArtifact.copyDirectlyToTargetPath)
#www.PublishedWebContent.copyDirectlyToTargetPath=false
# Options for the create step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.createOptions)
#www.PublishedWebContent.createOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the create operation. (inherited from: generic.CopiedArtifact.createOrder)
#www.PublishedWebContent.createOrder=50
# Create the target directory on the generic server if it does not exist. (inherited from: generic.CopiedArtifact.createTargetDirectory)
#www.PublishedWebContent.createTargetDirectory=false
# Create Verb
#www.PublishedWebContent.createVerb=Deploy
# The deployable that this deployed is derived from. (inherited from: generic.CopiedArtifact.deployable)
#www.PublishedWebContent.deployable=null
# Options for the destroy step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.destroyOptions)
#www.PublishedWebContent.destroyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the destroy operation. (inherited from: generic.CopiedArtifact.destroyOrder)
#www.PublishedWebContent.destroyOrder=40
# Destroy Verb
#www.PublishedWebContent.destroyVerb=Remove
# Additional classpath resources that should be uploaded to the working directory before executing the inspect script. (inherited from: generic.CopiedArtifact.inspectClasspathResources)
#www.PublishedWebContent.inspectClasspathResources=null
# Classpath to the script used to inspect the generic container. (inherited from: generic.CopiedArtifact.inspectScript)
#www.PublishedWebContent.inspectScript=null
# Additional template classpath resources that should be uploaded to the working directory before executing the inspect script.The template is first rendered and the rendered content copied to a file, with the same name as the template, in the working directory. (inherited from: generic.CopiedArtifact.inspectTemplateClasspathResources)
#www.PublishedWebContent.inspectTemplateClasspathResources=null
# Options for the modify step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.modifyOptions)
#www.PublishedWebContent.modifyOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the modify operation. (inherited from: generic.CopiedArtifact.modifyOrder)
#www.PublishedWebContent.modifyOrder=50
# Modify Verb (inherited from: generic.CopiedArtifact.modifyVerb)
#www.PublishedWebContent.modifyVerb=Modify
# Options for the noop step (1 or more of: none,uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources). (inherited from: generic.CopiedArtifact.noopOptions)
#www.PublishedWebContent.noopOptions=uploadArtifactData,uploadClasspathResources,uploadTemplateClasspathResources
# The order of the step in the step list for the noop operation. (inherited from: generic.CopiedArtifact.noopOrder)
#www.PublishedWebContent.noopOrder=50
# Noop Verb (inherited from: generic.CopiedArtifact.noopVerb)
#www.PublishedWebContent.noopVerb=Modify
# A Map containing all the placeholders mapped to their values. Special values are &lt;ignore&gt; or &lt;empty&gt; (inherited from: generic.CopiedArtifact.placeholders)
#www.PublishedWebContent.placeholders=null
# If set to true, preserve the existing files on the remote host (do not delete the copied files during the destroy operation).  (inherited from: generic.CopiedArtifact.preserveExistingFiles)
#www.PublishedWebContent.preserveExistingFiles=false
# The generic container requires a restart for the action performed by this deployed.
#www.PublishedWebContent.restartRequired=false
# The generic container requires a restart for the NOOP action performed by this deployed. (inherited from: generic.CopiedArtifact.restartRequiredForNoop)
#www.PublishedWebContent.restartRequiredForNoop=false
# Target directory name
#www.PublishedWebContent.targetDirectory=<#assign target=(deployed.virtualHost.documentRoot)!''/><#if target != ''>${target}<#else>${deployed.container.defaultDocumentRoot}</#if>
# Is the target directory shared by others on the generic server. When true, the target directory is not deleted during a destroy operation; only the artifacts copied to it. (inherited from: generic.CopiedArtifact.targetDirectoryShared)
#www.PublishedWebContent.targetDirectoryShared=true
# Name of the artifact on the generic server.
#www.PublishedWebContent.targetFile=null
# If set to true, the sub directories on the target machine are not deleted if files other than that copied by XL Deploy are present. Please note that setting this option to true will cause the removal process to be a slower.  (inherited from: generic.CopiedArtifact.targetPathSharedSubDirectories)
#www.PublishedWebContent.targetPathSharedSubDirectories=false
# The set of CI templates. (inherited from: generic.Folder.boundTemplates)
#www.WebContent.boundTemplates=null
# The checksum used to detect differences on the artifact. If not provided, it will be calculated by XL Deploy. (inherited from: generic.Folder.checksum)
#www.WebContent.checksum=null
# Credentials of the URI. (inherited from: generic.Folder.credentials)
#www.WebContent.credentials=null
# The delimiters used indicate placeholders, defaults to '{{ }}'. This is a 5 character string with a space in the middle, the first two are the leading delimiter, the last two are the closing delimiter (inherited from: generic.Folder.delimiters)
#www.WebContent.delimiters={{ }}
# Regular expression that matches file names that must be excluded from scanning (inherited from: generic.Folder.excludeFileNamesRegex)
#www.WebContent.excludeFileNamesRegex=null
# A map that maps regular expressions matching the full path of file(s) in the artifact to character set encodings (inherited from: generic.Folder.fileEncodings)
#www.WebContent.fileEncodings=.+\.properties:ISO-8859-1
# The URI pointing to the (remote) location of the file this artifact represents (inherited from: generic.Folder.fileUri)
#www.WebContent.fileUri=null
# Indicates if the artifact has been rescanned (inherited from: generic.Folder.isRescanned)
#www.WebContent.isRescanned=false
# Placeholders detected in this artifact (inherited from: generic.Folder.placeholders)
#www.WebContent.placeholders=null
# Whether this artifact has been pre-scanned by the packager (ie. scanned for placeholders and checksum is set) (inherited from: generic.Folder.preScannedPlaceholders)
#www.WebContent.preScannedPlaceholders=false
# Proxy Settings for artifact location (inherited from: generic.Folder.proxySettings)
#www.WebContent.proxySettings=null
# Whether to scan this artifact to replace placeholders when it is imported (inherited from: generic.Folder.scanPlaceholders)
#www.WebContent.scanPlaceholders=true
# If set, this deployable will only be mapped automatically to containers with the same tag. (inherited from: generic.Folder.tags)
#www.WebContent.tags=null
# Regular expression that matches file names of text files (inherited from: generic.Folder.textFileNamesRegex)
#www.WebContent.textFileNamesRegex=.+\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt)
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: udm.BaseContainer.allowConcurrentDeployments)
#xl.Satellite.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentGroup)
#xl.Satellite.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubGroup)
#xl.Satellite.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: udm.BaseContainer.deploymentSubSubGroup)
#xl.Satellite.deploymentSubSubGroup=null
# Enable encrypted communication.
#xl.Satellite.encrypted=false
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: udm.BaseContainer.tags)
#xl.Satellite.tags=null
# Address where the satellite can be reached.
#xl.SatelliteGroup.address=none
# If set, multiple deployments at the same time can be executed, and a 'collision avoidance' check will not be executed (inherited from: xl.Satellite.allowConcurrentDeployments)
#xl.SatelliteGroup.allowConcurrentDeployments=true
# If the group-orchestrator is enabled, all containers with the same deployment group number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.Satellite.deploymentGroup)
#xl.SatelliteGroup.deploymentGroup=null
# If the sub-group-orchestrator is enabled, all containers with the same deployment SubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.Satellite.deploymentSubGroup)
#xl.SatelliteGroup.deploymentSubGroup=null
# If the sub-sub-group-orchestrator is enabled, all containers with the same deployment SubSubGroup number will be deployed to at the same time. The groups are ordered by this number. (inherited from: xl.Satellite.deploymentSubSubGroup)
#xl.SatelliteGroup.deploymentSubSubGroup=null
# Enable encrypted communication.
#xl.SatelliteGroup.encrypted=null
# Port where the satellite is listening.
#xl.SatelliteGroup.protocolPort=0
# If set, only deployables with the same tag will be automatically mapped to this container. (inherited from: xl.Satellite.tags)
#xl.SatelliteGroup.tags=null
# Delay between each attempt, in seconds.
#xl.Satellite_restartSatellite.delay=10
# Modifies the restart behavior, so that running tasks are forcibly terminated. Should only be used when a satellite appears to be hanging, because it will cause active tasks to fail.
#xl.Satellite_restartSatellite.force=false
# Number of attempts to reach the satellite after restart.
#xl.Satellite_restartSatellite.maxAttempts=10
# Delay between each attempt, in seconds.
#xl.Satellite_syncPlugins.delay=10
# Number of attempts to reach the satellite after restart.
#xl.Satellite_syncPlugins.maxAttempts=10
