"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return t?r.createElement(g,l(l({ref:n},u),{},{components:t})):r.createElement(g,l({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3091:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),l=["components"],i={sidebar_position:8},s="Using development version images with minikube",p={unversionedId:"manual/k8s_development_versions",id:"manual/k8s_development_versions",isDocsHomePage:!1,title:"Using development version images with minikube",description:"After building development version images, described here, for example for xl-deploy:",source:"@site/docs/manual/k8s_development_versions.md",sourceDirName:"manual",slug:"/manual/k8s_development_versions",permalink:"/xl-docker-images/docs/manual/k8s_development_versions",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Upgrade XL Release active-active cluster setup with docker compose",permalink:"/xl-docker-images/docs/manual/xl-release-ha/upgrade-multi-node-deployment"}},u=[],c={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-development-version-images-with-minikube"},"Using development version images with minikube"),(0,a.kt)("p",null,"After building development version images, described ",(0,a.kt)("a",{href:"../building#development-versions"},"here"),", for example for xl-deploy:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./applejack.py render --xl-version 10.4.0-SNAPSHOT --product xl-deploy --product deploy-task-engine\n$ ./applejack.py build --xl-version 10.4.0-SNAPSHOT --product xl-deploy --product deploy-task-engine --download-source=localm2 --target-os centos\n")),(0,a.kt)("p",null,"Start minikube with following options:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'$ minikube start -p k120 --kubernetes-version=v1.20.0 --driver=virtualbox"\n')),(0,a.kt)("p",null,"Load images to minikube VM:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ minikube image load xebialabs/xl-deploy:10.4.0-SNAPSHOT -p k120\n$ minikube image load xebialabs/deploy-task-engine:10.4.0-SNAPSHOT -p k120\n")),(0,a.kt)("p",null,"In case of using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/xebialabs/xl-deploy-kubernetes-helm-chart"},"helm chart")," do changes in ",(0,a.kt)("inlineCode",{parentName:"p"},"values.yaml")," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'...\n## XL-Deploy image version\n## Ref: https://hub.docker.com/r/xebialabs/xl-deploy/tags\nImageTag: "10.4.0-SNAPSHOT"\n\nServerImageRepository: "xebialabs/xl-deploy"\nWorkerImageRepository: "xebialabs/deploy-task-engine"\n\n## Specify a imagePullPolicy\n## Defaults to \'Always\' if image tag is \'latest\',set to \'IfNotPresent\'\nImagePullPolicy: "Never"\n...\n')),(0,a.kt)("p",null,"Install/delete in helm repo dir:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ helm install xld .\n$ helm delete xld\n")))}m.isMDXComponent=!0}}]);