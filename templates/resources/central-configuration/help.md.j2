% {{ product | upper }} (1) Container Image Pages
% XebiaLabs Development Team
% {{ today }}

# NAME
{{ product }} \- {{ product_description }}

# DESCRIPTION
{% include 'includes/' + product + '-description.j2' %}

# ENVIRONMENT VARIABLES
The following environment variables can be set to configure the image for different scenarios

APP_ROOT=/opt/xebialabs
    This environment variable is used to determine the directory where all application specific code will be copied. Normally there is no need to change this variable.

APP_HOME=/${APP_ROOT}/{{ product }}-server
    This environment variable is used as the landing point for all the application data. Ensure that this is a subdirectory of the ${APP_ROOT} variable. Normally there is no need to change this variable.

# VOLUMES
The following locations can be mounted as volumes to provide either configuration data, and/or persistent storage for application data.

**\${APP_HOME}/conf** - This directory contains the configuration files and keystores for XL Deploy. If mounted it is possible to configure (and inject) non-default configuration settings.

- The `xl-deploy.conf` file is generated by the container startup script based on env variables set, to avoid that you can set the `GENERATE_XL_CONFIG` env variable to `false`. Once you set this the `xl-deploy.conf` for the product will not be generated based on env variables and you would have to provide this file yourself.
- If you provide a file called `deployit.conf` in the conf folder mounted, you need to provide values for below in that file
 ```
admin.password=ADMIN_PASSWORD
client.automatically.map.all.deployables.on.initial=false
client.automatically.map.all.deployables.on.update=false
client.automatically.map.all.deployables=true
client.server_poll.delay=30000
client.session.remember.enabled=true
client.session.timeout.minutes=20
hide.internals=false
http.bind.address=0.0.0.0
http.context.root=/
http.port=4516
http.upload.buffer=262144
importable.packages.path=importablePackages
maintenance.forbidden_paths=deployit/task\:POST,deployit/tasks/v2\:POST,deployit/control\:POST,xldeploy/task\:POST,xldeploy/tasks/v2\:POST,xldeploy/control\:POST
repository.keystore.password=admin
server.mapping.override.deployed.fields.on.update=true
server.resolve.application.dependencies=true
ssl.mutual=false
ssl=false
threads.max=150
threads.min=30
 ```
 - The below configuration files also can be overwritten by providing the same in the mounted volume. A default will be used for any file not provided in the mounted volume.
   - `deployit-security.xml`
   - `logback-access.xml`
   - `logback.xml`
   - `logging.properties`
   - `wrapper-daemon.vm`
   - `xl-deploy.policy`
   - `xld-wrapper-server.conf`
   - `xld-wrapper-worker.conf`
   - `xld-wrapper.conf.common`
   - `xld-wrapper.conf.posix`
   - `xld-wrapper.conf.win`


**\${APP_HOME}/hotfix/lib** - This directory contains the hotfixes for the libraries used by XL Deploy. When instructed by XebiaLabs support personnel, you should drop any delivered hotfixes in here.

**\${APP_HOME}/hotfix/plugins** - This directory contains the hotfixes for the plugins used by XL Deploy. When instructed by XebiaLabs support personnel, you should drop any delivered plugin hotfixes in here.

**\${APP_HOME}/ext** - This directory contains the developed (exploded plugins) for XL Deploy. You can customize an existing plugin here, for example you can modify the `synthetic.xml` for a specific plugin here.

**\${APP_HOME}/plugins** - This directory contains the plugins that are running in XL Deploy. When mounted, plugins present in this directory will be loaded instead of bundled ones. If any base plugin is not provided it will be loaded from default plugins. If you mount an empty directory the default bundled plugins will be loaded. But it is recommended to use a custom image with required plugins to avoid issues during the upgrade process.

Applicable only for Deploy:

In some cases you want to exclude some plugins from the installation. Like for example you want to include another version of the plugin. At this case you have to list via comma all names in GENERATE_XL_CONFIG. All plugins which contain specified name will be excluded.
Like if you want for example to exclude terraform, it's enough to type "terraform".

**\${APP_HOME}/repository** - This directory contains the embedded repository database for XL Deploy. Using the configuration injected through the `${APP_HOME}/conf` volume, it is possible to configure the used database to a remotely running database engine, instead of using the embedded memory based one. It is highly recommended not to use the embedded DB for production setup.

**\${APP_HOME}/export** - This directory holds the exported CIs when using the CI export option in XL Deploy

**\${APP_HOME}/work** - This directory will be used to save task data, task recovery files, uploaded files and temp files in XL Deploy. The task recovery files can be used in cases on container restarts if mounted externally to recover tasks.

# PORTS
The port that can be exposed by default is `{{ port }}`
